{"version":3,"sources":["services/Constants.js","services/AjaxService.js","services/CashService.js","settings/AppSettingsService.js","services/BeanContextAware.js","store.js","services/PollService.js","notes/NotesService.js","Home.js","building-blocks/RenderForm.js","auth/PhoneForm.js","auth/PhoneToken.js","auth/confirmCode.js","settings/Checkbox.js","building-blocks/Info.js","building-blocks/PicWrapper.js","userView/SelectDistanceFilter.js","userView/SelectMinAgeFilter.js","userView/SelectMaxAgeFilter.js","userView/userView.js","services/MatchDecoratorService.js","building-blocks/OnePicWrapper.js","userView/friends.js","building-blocks/BtnLink.js","userView/OneFriend.js","userView/MoreFriends.js","userView/FriendRequests.js","settings/SelectPollInterval.js","settings/SelectTextColor.js","settings/SelectBackgroundColor.js","settings/AppSettings.js","building-blocks/header.js","chat/enterText.js","chat/messageWrapper.js","chat/Select.js","chat/CyrilicEmojiStrategy.js","chat/chat.js","notes/Notes.js","App.js","serviceWorker.js","index.js"],"names":["ipAdress","Const","URLS","BASE_URL","AUTH","PHONE","GET_TOKEN","UPDATES","PROFILE","USER","MATCH","SEND_MESSAGE","SEND_LOCATION","NEW_FRIENDS","SEND_SEEN","FAST_MATCH","LIKE","PASS","STORAGE","STORAGE_TOKEN","STORAGE_BOOKMARKS","STORAGE_SETTINGS","UPDATE_POLL_INTERVAL","LOCAL_CASH_VAR_NAME","AUTH_HEADER_NAME","PHONE_HEADER_NAME","VERSION","execute","method","url","data","headers","axios","doPost","getHeaders","doPut","doGet","doDelete","authHeaderName","phoneHeaderName","CashService","React","Component","props","persistAll","phone","obj","AjaxService","JSON","stringify","catch","e","console","error","loadAll","getPhone","setPhone","getToken","setToken","token","getSettings","settings","setSettings","persistSettings","persistBookmarks","arr","this","then","log","bgColor","textColor","bookmarks","cashStructureTemplate","reduce","json","value","key","applyDesignSettings","getSetting","textColors","class","applyClass","document","body","bgColors","persistSetting","settingName","settingObject","element","colors","selectedColor","forEach","color","classList","remove","add","getInputStyleClasses","updatePollInterval","isToShowPhotos","bean","state","Error","beanId","context","warn","get","reducer","combineReducers","form","reduxFormReducer","store","window","devToolsExtension","createStore","functionsQueue","addToFunctionsQ","funct","push","length","shift","funcToCall","getStore","getMatchById","id","matches","update","i","_id","addToStore","checkIfLogged","onSuccess","onFailure","getUpdates","getLastActivityDate","startUpdatePoll","AppSettingsService","mergeUpdates","updates","matchUpdate","oldMatch","newMsgs","messages","newMsgsCount","y","splice","concat","lastSeenMsg","seen","last_seen_msg_id","last_activity_date","BASE_DATE","addToUnreadMessagesBadge","markLastUneadMessages","newLastSeenMsgId","oldLastSeenMsgId","localUser","profile","ind","msg","from","mtch","header","BeanContextAware","addMsgMatch","lastDate","chat1","triggerRenderFunc","changeButtonVisibility","isVisible","exceptionCount","isToStopUpdatePoll","stopUpdatePoll","exception","seconds","pollInterval","pollIntervalObj","setInterval","clearTimeout","saveBookmark","personId","getBookmarks","indexOf","removeBookmark","index","oneFromArr","saveAllByPhone","getOne","promise","Home","hits","isLoading","to","eachComponent","input","label","type","placeholder","meta","touched","className","RenderForm","options","handleSubmit","fields","RenderFieldWrappedInstance","reduxForm","onSubmit","map","op","noCash","name","uuidv1","Field","onChange","component","PhoneForm","handleChange","event","target","phoneNumAuth","history","ifNotLogged","preventDefault","setBookmarks","authToken","processAuth","confirm","PollService","optns","withRouter","PhoneToken","handleChangeToken","doAuth","persistToken","alert","autoComplete","ConfirmCode","confirmToken","phoneNumber","status","onChangeFun","Checkbox","doChangeState","changeHandler","setState","condition","checked","defaultChecked","Info","args","person","country","pos_info","age","birth_date","substring","city","jobs","title","schools","distance_mi","bio","PicWrapper","nextPic","photos","imgSrc","personName","onClick","src","alt","SelectDistanceFilter","parentObject","distanceFilter","radius","initialRadius","cssClasses","optionTags","SelectMinAgeFilter","int","parseInt","changeState","ageFilterMin","SelectMaxAgeFilter","ageFilterMax","UserView","saveProfile","age_filter_max","age_filter_min","distance_filter","discoverable","disableSaveButton","isButtonDisabled","getProfile","toggleShowProfile","pos","lat","lon","image","info","disabled","pointVals","pointMode","banner","control","values","point","newMsgObj","postLocation","bindMap","startPort","overlayAll","showControls","showInputs","useDynamic","precision","columns","Header","accessor","sortable","defaultPageSize","showPagination","getUserData","match","callbackFunc","userId","user","results","posInfo","region","OnePicWrapper","doClick","Friends","sortByLastActivityDate","a","b","timeA","Date","getTime","applySorting","arrToBeSorted","sortingFunc","sort","MatchDecoratorService","pathname","showUser","msgMatches","friends","persons","prsn","picProps","firstName","lastName","pageSize","BtnLink","OneFriend","NotesService","save","deleteMatch","matchId","isBookmarked","undefined","allBookmarks","location","getBookmarksAsObject","MoreFriends","getNewFriends","callBack","allFr","isMountedOk","pass","like","InfoWrapper","Pic","one","FriendRequests","getFriendRequests","style","width","height","SelectPollInterval","interval","onSelectPollInterval","styles","SelectTextColor","selected","triggerRender","SelectBackgroundColor","AppSettings","val","toggleShowPicsCheckbox","findInMsgMatches","toggleFlashTabTitle","len","removeMsgMatch","flashIntervalObj","startFlashTabTitle","stopFlashTabTitle","initialTitle","goChat","Btn","exact","activeClassName","isVisibleNewMsgs","EnterText","createMessage","dt","created_date","toISOString","match_id","message","sent_date","timestamp","onKeyPress","oneMatch","friendId","injectEmoji","elem","srcElement","getStyles","emojiInjectorFunc","inputProps","MessageWrapper","msgDateObj","timeStr","toLocaleTimeString","dateStr","toLocaleDateString","isSeen","showDate","date","setTimeout","Select","numberMsgShown","emojis","text","face","injectEmojiFunction","emo","foundAt","replace","Chat","onFocus","ev","isOnFocus","deleteFromHeader","onBlur","prepareMessages","allMsgs","result","transformedMsg","theirs","mine","sendSeen","msgWrapped","inputStyles","addEventListener","removeEventListener","present","reorderedMessages","bordered","Notes","processUserData","step","all","formDummyMatch","App","paddingTop","path","render","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91b74fa5.chunk.js","sourcesContent":["let ipAdress = ' https://bender-app.herokuapp.com/';\n\nconst Const = {\n  URLS: {\n    BASE_URL: ipAdress,\n    AUTH: {\n      PHONE: ipAdress + 'requestCode',\n      GET_TOKEN: ipAdress + 'getToken/'\n    },\n    UPDATES: ipAdress + 'updates',\n    PROFILE: ipAdress + 'profile',\n    USER: ipAdress + 'user/',\n    MATCH: ipAdress +  'user/matches/',\n    SEND_MESSAGE: ipAdress + 'postMessage',\n    SEND_LOCATION: ipAdress + 'location',\n    NEW_FRIENDS: ipAdress + 'new-friends',\n    SEND_SEEN: ipAdress + 'seen/',\n    FAST_MATCH: ipAdress + 'fast-match',\n    LIKE: ipAdress + 'like/',\n    PASS: ipAdress + 'pass/',\n\n\n    //// storage api:\n    STORAGE: ipAdress + 'storage/',\n    STORAGE_TOKEN: ipAdress + 'storage/token/',\n    STORAGE_BOOKMARKS: ipAdress + 'storage/bookmarks/',\n    STORAGE_SETTINGS: ipAdress + 'storage/settings/'\n  },\n  UPDATE_POLL_INTERVAL: 20000,\n  LOCAL_CASH_VAR_NAME: '__TnDr__',\n  AUTH_HEADER_NAME: 'X-Auth-Token',\n  PHONE_HEADER_NAME: 'phone-number',\n  VERSION: '1.31'\n}\n\nexport default Const;\n","import React from 'react';\nimport axios from 'axios';\nimport Const from './Constants';\nimport CashService from './CashService';\n\nclass AjaxService extends React.Component {\n\n  execute = (method, url, data, headers) => {\n    return axios({\n      method: method,\n      url: url,\n      data: data,\n      headers: headers\n    });\n  };\n\n  doPost = (url, data, headers) => {\n    return this.execute('post', url, data, this.getHeaders(headers));\n  };\n\n  doPut = (url, data, headers) => {\n    return this.execute('put', url, data, this.getHeaders(headers));\n  };\n\n  doGet = (url, headers) => {\n    return this.execute('get', url, {}, this.getHeaders(headers));\n  };\n\n  doDelete = (url, headers) => {\n    return this.execute('delete', url, {}, this.getHeaders(headers));\n  };\n\n  getHeaders = (headers) => {\n    let authHeaderName = Const.AUTH_HEADER_NAME;\n    let phoneHeaderName = Const.PHONE_HEADER_NAME;\n    if (!headers) {\n      headers = {};\n    }\n\n    if (CashService[phoneHeaderName]) {\n      headers[phoneHeaderName] = CashService[phoneHeaderName];\n    }\n\n    if (CashService[authHeaderName]) {\n      headers[authHeaderName] = CashService[authHeaderName];\n    }\n    return headers;\n  };\n}\n\nexport default new AjaxService();\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\n\nclass CashService extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this[Const.PHONE_HEADER_NAME] = null;\n    this[Const.AUTH_HEADER_NAME] = null;\n    this.settings = { bgColor: \"bg-dark\", textColor: \"text-white\" };\n    this.bookmarks = [];\n    this.cashStructureTemplate = {\n      settings: this.settings,\n      [Const.AUTH_HEADER_NAME]: { token: this[Const.AUTH_HEADER_NAME] },\n      bookmarks: this.bookmarks\n    }\n  };\n\n  persistAll = function (phone, obj) {\n    let promise = AjaxService.doPost(Const.URLS.STORAGE + phone, {\n      'json': JSON.stringify(obj)\n    }, {});\n    promise.catch((e) => {\n      console.error(e);\n    })\n  }\n\n  loadAll = function (phone) {\n    return AjaxService.doGet(Const.URLS.STORAGE + phone, {});\n  }\n\n  getPhone = () => {\n    return this[Const.PHONE_HEADER_NAME];\n  };\n\n  setPhone = (phone) => {\n    this[Const.PHONE_HEADER_NAME] = phone;\n  };\n\n  /// token:\n  getToken = () => {\n    return this[Const.AUTH_HEADER_NAME];\n  };\n\n  setToken = (token) => {\n    this[Const.AUTH_HEADER_NAME] = token;\n  };\n\n  persistToken(token) {\n    AjaxService.doPut(Const.URLS.STORAGE_TOKEN + this.getPhone(), {\n      'json': JSON.stringify({ \"token\": token })\n    });\n  }\n\n  //// settings:\n  getSettings = () => {\n    return this.settings;\n  };\n\n  setSettings = (settings) => {\n    this.settings = settings;\n  };\n\n  persistSettings = (settings) => {\n    AjaxService.doPut(Const.URLS.STORAGE_SETTINGS + this.getPhone(), {\n      'json': JSON.stringify(settings)\n    });\n  }\n\n  /// bookmarks:\n  getBookmarks() {\n    return this.bookmarks;\n  }\n\n  setBookmarks(bookmarks) {\n    this.bookmarks = bookmarks;\n  }\n\n  getBookmarksAsObject() {\n    return this.bookmarks.reduce((json, value, key) => {\n      json[value] = key;\n      return json;\n    }, {});\n  }\n\n  persistBookmarks = function (arr) {\n    let promise = AjaxService.doPost(Const.URLS.STORAGE_BOOKMARKS + this.getPhone(), {\n      'json': JSON.stringify(arr)\n    }, {});\n\n    promise.then((data) => {\n      console.log(data);\n    }).catch((e) => {\n      console.error(e);\n    })\n  }\n}\n\nexport default new CashService();\n","import React from 'react';\r\nimport CashService from '../services/CashService';\r\nimport Const from '../services/Constants';\r\n\r\n//this singleton applies settings at startup:\r\nclass AppSettingsService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textColors = [\r\n      { \"name\": 'Gray', \"class\": 'text-muted' },\r\n      { \"name\": 'White', \"class\": 'text-white' },\r\n      { \"name\": 'Dark', \"class\": 'text-dark' },\r\n      { \"name\": 'Black', \"class\": 'text-body' }\r\n    ]\r\n\r\n    this.bgColors = [\r\n      { \"name\": 'Gray', \"class\": 'bg-secondary' },\r\n      { \"name\": 'Dark', \"class\": 'bg-dark' },\r\n      { \"name\": 'Light', \"class\": 'bg-light' }\r\n    ]\r\n\r\n    this.updatePollInterval = Const.UPDATE_POLL_INTERVAL;\r\n    this.isToShowPhotos = true;\r\n  }\r\n\r\n  applyDesignSettings = () => {\r\n    let textColor = this.getSetting(\"textColor\") || this.textColors[0]?.class;\r\n    if (textColor) {\r\n      console.log(textColor);\r\n      \r\n      this.applyClass(document.body, this.textColors, textColor);\r\n    }\r\n\r\n    let bgColor = this.getSetting(\"bgColor\") || this.bgColors[0].class;\r\n    if (bgColor) {\r\n      this.applyClass(document.body, this.bgColors, bgColor);\r\n    }\r\n  }\r\n\r\n  persistSetting = (settingName, settingObject) => {\r\n    let settings = CashService.getSettings();\r\n    if (!settings) {\r\n      settings = {};\r\n      CashService.setSettings(settings);\r\n    }\r\n    settings[settingName] = settingObject;\r\n    CashService.persistSettings(settings);\r\n  }\r\n\r\n  getSetting = (settingName) => {\r\n    let settings = CashService.getSettings();\r\n    return settings?.[settingName];\r\n  }\r\n\r\n  applyClass = (element, colors, selectedColor) => {\r\n    colors.forEach(color => {\r\n      element.classList.remove(color.class);\r\n    });\r\n\r\n    element.classList.add(selectedColor);\r\n  }\r\n\r\n  getInputStyleClasses = () => {\r\n    return \"form-control \" + (this.getSetting(\"textColor\") || \" \") +\r\n      \" \" + (this.getSetting(\"bgColor\") || \"\");\r\n  }\r\n}\r\nexport default new AppSettingsService();\r\n","import React from 'react';\n\nclass BeanContextAware extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.context= {};\n  };\n\n  add = (bean) => {\n    if (!bean || !bean.state) {\n      throw new Error(\"Not allowed 'null' values for 'bean': \" + bean + \" !\");\n    }\n    let beanId = bean.state.beanId || bean.props.beanId;\n    if (!beanId) {\n      throw new Error(\"Not allowed 'null' value for 'beanId' \" + beanId  + \" !\" );\n    }\n    if (this.context[beanId]) {\n      console.warn(\"Bean with 'beanId': \" + beanId + \"is already registered under BeanContextAware!\");\n    }\n    this.context[beanId] = bean;\n  }\n\n  get = (beanId) => {\n    if (!beanId ) {\n      throw new Error(\"Not allowed 'null' value for 'beanId' \" + beanId + \" !\" );\n    }\n    return this.context[beanId];\n  }\n\n  remove = (bean) => {\n    if (!bean) {\n      throw new Error(\"Not allowed 'null' value for 'bean' \" + bean + \" !\" );\n    }\n    if ( typeof bean === 'string' ) {\n        delete this.context[bean];\n        return;\n    }\n    let beanId = bean.state.beanId || bean.props.beanId;\n    delete this.context[beanId];\n  }\n}\nexport default new BeanContextAware();\n","import { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer // mounted under \"form\"\n})\nconst store =\n  (window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore)(reducer)\n\nconst functionsQueue = [];\n\nlet addToFunctionsQ = (funct) => {\n  functionsQueue.push(funct);\n\n  while (functionsQueue.length > 0) {\n    let funcToCall = functionsQueue.shift()\n    funcToCall();\n  }\n}\n\nstore.getStore = () => {\n  // add dummy function as a placeholder\n  addToFunctionsQ(() => { });\n  return store;\n}\n\nstore.getMatchById = (id) => {\n  if (!id) {\n    throw new Error(\"'id' is not allowed to be: \" + id);\n  }\n  let matches = store.getStore()?.update?.data?.matches || [];\n  for (var i = 0; i < matches.length; i++) {\n    if (id === matches[i]._id) {\n      return matches[i];\n    }\n  }\n  return null;\n}\n\nstore.addToStore = (key, value) => {\n  if (!key || typeof (key) != 'string') {\n    throw new Error(\"Only objects of type 'string' are allowed!\");\n  }\n\n  addToFunctionsQ(\n    function () {\n      store[key] = value;\n    }\n  );\n}\n\nexport default store;\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\nimport BeanContextAware from './BeanContextAware';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport store from '../store';\n\nclass PollService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n    this.BASE_DATE = \"1984-08-01T00:00:00.000Z\";\n    this.last_activity_date = this.BASE_DATE;\n    this.exceptionCount = 0;\n  };\n\n  checkIfLogged = (headers, onSuccess, onFailure) => {\n    let promise = AjaxService.doGet(Const.URLS.PROFILE, headers)\n    promise.then((data) => {\n      store.addToStore('profile', data);\n      onSuccess()\n      this.getUpdates(this.getLastActivityDate());\n      this.startUpdatePoll(AppSettingsService.updatePollInterval);\n\n    }).catch((e) => {\n      console.error(e);\n      onFailure()\n    })\n  }\n\n  mergeUpdates = (store, updates) => {\n    let matches = updates.data.matches;\n\n    for (let i = 0; i < matches.length; i++) {\n      let matchUpdate = matches[i];\n      let oldMatch = store.getMatchById(matchUpdate._id);\n      //merge brand new matches:\n      if (!oldMatch) {\n        store.getStore().update.data.matches.push(matchUpdate);\n        this.addToUnreadMessagesBadge(matchUpdate);\n        continue;\n      }\n\n      //merge new messages:\n      let newMsgs = matchUpdate.messages;\n      let newMsgsCount = newMsgs.length;\n      for (let y = oldMatch.messages.length - 1; 0 <= newMsgsCount || 0 <= y; y-- , newMsgsCount--) {\n        if (oldMatch.messages[y] && !oldMatch.messages[y]._id) {\n          oldMatch.messages.splice(y, 1);\n        }\n      }\n      oldMatch.messages = oldMatch.messages.concat(newMsgs);\n\n      /// merge seen:\n      let lastSeenMsg = matchUpdate?.seen?.last_seen_msg_id;\n      if (lastSeenMsg) {\n        if (!oldMatch.seen) {\n          oldMatch.seen = {};\n        }\n        oldMatch.seen.last_seen_msg_id = lastSeenMsg;\n      }\n\n      /// merge last_activity_date:\n      oldMatch.last_activity_date = matchUpdate?.last_activity_date || oldMatch.last_activity_date || this.BASE_DATE;\n    }\n  }\n\n  markLastUneadMessages = (store, updates) => {\n    let matches = updates?.data?.matches;\n\n    for (let i = 0; i < matches?.length; i++) {\n      let matchUpdate = matches[i];\n      let oldMatch = store.getMatchById(matchUpdate._id);\n\n      let newLastSeenMsgId = matchUpdate?.seen?.last_seen_msg_id;\n      let oldLastSeenMsgId = oldMatch?.seen?.last_seen_msg_id;\n      var localUser = store?.profile?.data;\n\n      newLastSeenMsgId = newLastSeenMsgId || oldLastSeenMsgId;\n      if (!newLastSeenMsgId || !localUser || !localUser._id) {\n        continue;\n      }\n      let newMsgs = matchUpdate.messages;\n\n      for (var ind = newMsgs.length - 1; 0 <= ind; ind--) {\n        let msg = newMsgs[ind];\n\n        if (!msg.from) {\n          continue;\n        }\n\n        if (localUser._id !== msg.from) {\n\n          if (msg._id !== newLastSeenMsgId) {\n            this.addToUnreadMessagesBadge(oldMatch);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  addToUnreadMessagesBadge = (mtch) => {\n    let header = BeanContextAware.get('header1');\n    if (header) {\n      header.addMsgMatch(mtch)\n    }\n  }\n\n  getUpdates = (lastDate) => {\n    let header = BeanContextAware.get('header1');\n    let chat1 = BeanContextAware.get('chat1');\n    let data = {\n      \"last_activity_date\": lastDate\n    }\n\n    let promise = AjaxService.doPost(Const.URLS.UPDATES, data, {});\n    promise.then((data) => {\n      if (store.update) {\n        this.mergeUpdates(store, data);\n      } else {\n        store.addToStore('update', data);\n      }\n\n      this.markLastUneadMessages(store, data);\n\n      /// merge global (updates polling) last_activity_date:\n      this.last_activity_date = data.data.last_activity_date;\n\n      if (chat1) chat1.triggerRenderFunc();\n      if (header) header.changeButtonVisibility({ isVisible: true });\n\n      this.exceptionCount = 0;\n\n    }).catch((e) => {\n      console.error(e);\n\n      if (header) header.changeButtonVisibility({ isVisible: false })\n\n      if (this.isToStopUpdatePoll(e)) this.stopUpdatePoll();\n\n      this.exceptionCount++\n    })\n  }\n\n  isToStopUpdatePoll = (exception) => {\n    if (this.exceptionCount > 2) {\n      return true;\n    }\n    return false;\n  }\n\n  startUpdatePoll = (seconds) => {\n    if (!seconds) {\n      console.error(\"error null val for 'seconds'\");\n      return;\n    }\n    this.stopUpdatePoll();\n    this.pollInterval = seconds\n    this.pollIntervalObj = setInterval(\n      () => {\n        this.getUpdates(this.getLastActivityDate());\n      }, seconds\n    );\n  }\n\n  getLastActivityDate = () => {\n    return this.last_activity_date;\n  }\n\n  stopUpdatePoll = () => {\n    if (this.pollIntervalObj) {\n      clearTimeout(this.pollIntervalObj)\n    }\n  }\n}\nexport default new PollService();\n","import React from 'react';\r\nimport store from '../store';\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService';\r\nimport CashService from '../services/CashService';\r\n\r\nclass NotesService extends React.Component {\r\n\r\n  saveBookmark = function (personId) {\r\n    let bookmarks = CashService.getBookmarks();\r\n    if (bookmarks.indexOf(personId) !== -1) {\r\n      return;\r\n    }\r\n    bookmarks.push(personId);\r\n    CashService.persistBookmarks(bookmarks);\r\n  }\r\n\r\n  removeBookmark = function (personId) {\r\n    let bookmarks = CashService.getBookmarks();\r\n    for (let index = 0; index < bookmarks.length; index++) {\r\n      let oneFromArr = bookmarks[index];\r\n      if (!!personId && oneFromArr === personId) {\r\n        bookmarks.splice(index, 1);\r\n        CashService.persistBookmarks(bookmarks);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  saveAllByPhone = function (phone = CashService.getPhone()) {\r\n    CashService.persistAll(phone, CashService.cashStructureTemplate);\r\n  }\r\n\r\n  getOne = function (phone = CashService.getPhone()) {\r\n    let promise = AjaxService.doGet(Const.URLS.STORAGE + phone, {});\r\n\r\n    promise.then((data) => {\r\n      console.log(data);\r\n    }).catch((e) => {\r\n      console.error(e);\r\n    })\r\n  }\r\n\r\n  // delete = function (phone = CashService.getPhone()) {\r\n  //   let promise = AjaxService.doDelete(Const.URLS.STORAGE + phone, {});\r\n\r\n  //   promise.then((data) => {\r\n  //     console.log(data);\r\n  //   }).catch((e) => {\r\n  //     console.error(e);\r\n  //   })\r\n  // }\r\n\r\n}\r\nexport default new NotesService();","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div >\n        <h1>Welcome</h1>\n        <Link to=\"/phone\">  Login with phone</Link>\n        <p/>\n        <Link to=\"/phone-token\">  Login with phone and token</Link>\n      </div >\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport uuidv1 from 'uuid/v1';\nimport { Field, reduxForm } from 'redux-form'\nimport store from '../store'\nimport { Provider } from 'react-redux'\n\nconst eachComponent = ({ input, label, type, value, placeholder, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input className='form-control' {...input} placeholder={placeholder} type={type} />\n      {touched && error && <span>{error}</span>}\n      <p />\n    </div>\n  </div>\n)\nlet randomizeName = (obj) => {\n  if (obj.noCash) { // prevent auto-suggest\n    obj.name = uuidv1();\n  }\n}\nclass RenderForm extends React.Component {\n\n  render() {\n    let { options } = this.props;\n    let handleSubmit = options.handleSubmit;\n    let fields = options.fields;\n\n    let RenderFieldWrapped = () => (\n      <div>\n        <form onSubmit={handleSubmit} >\n          {\n            fields.map(op => {\n              randomizeName(op)\n              return <div key={op.name}>\n                <Field name={op.name} onChange={op.onChange} component={eachComponent}\n                  type=\"input\" placeholder={op.placeholder} label={op.label} />\n                <p />\n              </div>\n            })\n          }\n          < input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n\n\n    let RenderFieldWrappedInstance = reduxForm({\n      form: 'RenderFieldWrapped'\n    })(RenderFieldWrapped);\n\n    return (\n      <div>\n        <Provider store={store}>\n          <RenderFieldWrappedInstance options={options} />\n        </Provider>\n      </div>\n    )\n  }\n}\nexport default RenderForm\n","import React from 'react';\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport CashService from '../services/CashService';\nimport PollService from '../services/PollService';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport RenderForm from '../building-blocks/RenderForm';\nimport { withRouter } from 'react-router-dom';\n\nclass PhoneForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: ''\n    };\n  }\n\n  handleChange = event => {\n    this.state.phone = event.target.value;\n  };\n\n  phoneNumAuth = function (phone) {\n    let promise = AjaxService.doPost(Const.URLS.AUTH.PHONE, {\n      'phone': phone\n    }, {});\n\n    promise.then(() => {\n      CashService.setPhone(phone);\n      this.props.history.push('/confirm-token');\n    }).catch((e) => {\n      CashService.setPhone(null);\n      console.error(e);\n    })\n  }\n\n  ifNotLogged = (phone) => {\n    CashService.setToken(null);\n    this.phoneNumAuth(phone);\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    let phone = this.state.phone;\n\n    let promise = CashService.loadAll(phone);\n    CashService.setPhone(phone);\n    promise.then((data) => {\n      console.log(data?.data);\n\n      let settings = data?.data?.settings;\n      if (settings) {\n        CashService.setSettings(settings);\n        AppSettingsService.applyDesignSettings();\n      }\n      let bookmarks = data?.data?.bookmarks;\n      if (bookmarks) {\n        CashService.setBookmarks(bookmarks);\n      }\n      let authToken = data?.data?.[Const.AUTH_HEADER_NAME]?.token;\n      this.processAuth(authToken, phone);\n    }).catch((e) => {\n      console.error(e);\n    })\n  }\n\n  processAuth = (authToken, phone) => {\n    if (authToken) {\n\n      let isToUseCurrent = window.confirm('A session with this phone numer: '\n        + phone + ' already exists.\\nUse current session?');\n\n      if (isToUseCurrent) {\n        console.log(\"use current session:\");\n        CashService.setToken(authToken);\n        PollService.checkIfLogged({},\n          () => { this.props.history.push('/user') },\n          () => { this.ifNotLogged(phone) });\n      } else {\n        this.phoneNumAuth(phone);\n      }\n\n    } else {\n      CashService.persistAll(phone, CashService.cashStructureTemplate);\n      this.phoneNumAuth(phone);\n    }\n  }\n\n  render() {\n    const optns = {\n      handleSubmit: this.handleSubmit,\n      fields: [\n        { name: 'Phone number', label: 'Phone number', \n        placeholder: 'Please, fill in ur phone number', \n        onChange: this.handleChange }\n      ]\n    }\n\n    return (\n      <div>\n        <RenderForm options={optns} />\n      </div >\n    )\n  }\n}\nexport default withRouter(PhoneForm);\n","import React from 'react';\nimport Const from '../services/Constants';\nimport CashService from '../services/CashService';\nimport PollService from '../services/PollService';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport RenderForm from '../building-blocks/RenderForm';\nimport { withRouter } from 'react-router-dom';\n\nclass PhoneToken extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      phone: '',\n      token: ''\n    };\n  }\n\n  handleChange = event => {\n    this.state.phone = event.target.value;\n  };\n\n  handleChangeToken = event => {\n    this.state.token = event.target.value;\n  };\n\n  doAuth = function (authToken, phone) {\n    let onSuccess = () => {\n      CashService.setToken(authToken);\n      CashService.persistToken(authToken);\n      this.props.history.push('/user');\n    }\n\n    let onFailure = () => {\n      window.alert('The provided token: ' + authToken\n      + ' is expired... phone: ' +phone);\n      this.props.history.push('/phone-token');\n    }\n\n    let headers = {\n      [Const.AUTH_HEADER_NAME] : authToken\n    }\n\n    PollService.checkIfLogged(headers, onSuccess, onFailure);\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    let phone = this.state.phone;\n    let authToken = this.state.token\n\n    let promise = CashService.loadAll(phone);\n    CashService.setPhone(phone);\n    promise.then((data) => {\n\n      let settings = data?.data?.settings;\n      if (settings) {\n        CashService.setSettings(settings);\n        AppSettingsService.applyDesignSettings();\n      }\n      let bookmarks = data?.data?.bookmarks;\n      if (bookmarks) {\n        CashService.setBookmarks(bookmarks);\n      }\n\n      this.doAuth(authToken, phone)\n\n    }).catch((e) => {\n      console.error(e);\n    })\n  }\n\n  render() {\n    const optns = {\n      handleSubmit: this.handleSubmit,\n      fields: [\n        { name: 'Phone number', label: 'Phone number', placeholder: 'phone number..', onChange: this.handleChange },\n        { name: 'X-token', label: 'X-token', placeholder: 'auth token..', noCash: true, onChange: this.handleChangeToken }\n      ]\n    }\n\n    return (\n      <div autoComplete=\"new-password\">\n        <RenderForm autoComplete=\"new-password\" options={optns} />\n      </div >\n    )\n  }\n}\nexport default withRouter(PhoneToken);\n","import React from 'react';\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport PollService from '../services/PollService';\nimport CashService from '../services/CashService';\nimport RenderForm from '../building-blocks/RenderForm';\nimport { withRouter } from 'react-router-dom';\n\nclass ConfirmCode extends React.Component {\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      confirmToken: ''\n    };\n  }\n\n  handleChange = event => {\n    this.state.confirmToken = event.target.value;\n    //this.setState({confirmToken: event.target.value});\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let phoneNumber = CashService.getPhone();\n    if (!phoneNumber) {\n      throw new Error(\"CashService[Const.PHONE_HEADER_NAME] is not allowed to be \" + phoneNumber);\n    }\n    let { history } = this.props;\n\n    let promise = AjaxService.doGet(Const.URLS.AUTH.GET_TOKEN + this.state.confirmToken + \"/\" + phoneNumber);\n\n    promise.then(function (value) {\n      console.log(value);\n      if (value && value.status === 200 && value.data) {\n        let token = value.data[Const.AUTH_HEADER_NAME];\n\n        let headers = {\n          [Const.AUTH_HEADER_NAME] : token\n        }\n\n        let onSuccess = function() {\n          CashService.setToken(token);\n          CashService.persistToken(token);\n          history.push('/user');\n        }\n\n        let onFailure = function() {\n          history.push('/phone');\n        }\n\n        PollService.checkIfLogged(headers, onSuccess, onFailure);\n      }\n    }).catch((e) => {\n      // delete cash[store.phoneNumber];\n      // delete store.phoneNumber;\n      // localStorage.setItem(cashVarName, JSON.stringify(cash));\n      console.log(e);\n    })\n\n  }\n\n  render() {\n    const optns = {\n      handleSubmit: this.handleSubmit,\n      fields: [\n        { name: 'Confirmation code', label: 'Confirmation code', placeholder: 'confirmation code...', \n        noCash: true, onChangeFun: this.handleChange }\n      ]\n    }\n    return (\n      <div >\n        <RenderForm options={optns} />\n      </div>\n    );\n  }\n}\nexport default withRouter(ConfirmCode)\n","import React from 'react';\n\nexport default class Checkbox extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      condition: props.condition\n    }\n\n    this.changeHandler = props.changeHandler;\n    this.defaultChecked = props.defaultChecked;\n    this.label = props.label;\n  }\n\n  doChangeState = (e) => {\n    this.changeHandler(e);\n    this.setState({\n      condition: e.target.checked\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"form-check\">\n        <input className=\"form-check-input\" type=\"checkbox\" checked={this.state.condition} onChange={this.doChangeState} /> \n        <label className=\"form-check-label\"> {this.label} </label>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nfunction Info(args) {\n  let { person } = args;\n  if (!person) {\n    return (\n      <div> </div>\n    )\n  }\n  let country = person.pos_info ? (person.pos_info.country ? person.pos_info.country.name : \"\") : \"\";\n  let age = person.birth_date ? person.birth_date.substring(0, 4) : \"\";\n  let city = person.pos_info ? (person.pos_info.city ? person.pos_info.city.name : \"\") : \"\";\n  person.jobs = person.jobs?.[0]?.title?.name || \"\";\n  person.schools = person.schools?.[0]?.name || \"\";\n  return (\n    <div className=\"text-justify text-wrap\">\n      {person.name ? (<div> <span className=\"font-weight-bold\">Name:  </span> {person.name} </div>) : null}\n      {person.birth_date ? (<div> <span className=\"font-weight-bold\">Date of Birth:  </span> {age} </div>) : null}\n      {person.distance_mi ? (<div> <span className=\"font-weight-bold\">Distance (miles):  </span> {person.distance_mi} </div>) : null}\n      {city ? (<div> <span className=\"font-weight-bold\">Location:  </span> {city}, {country}  </div>) : null}\n      {person.bio ? (<div> <span className=\"font-weight-bold\">Bio:  </span> {person.bio} </div>) : null}\n      {person.jobs ? (<div> <span className=\"font-weight-bold\">Job:  </span> {person.jobs} </div>) : null}\n      {person.schools ? (<div> <span className=\"font-weight-bold\">Schools:  </span> {person.schools} </div>) : null}\n    </div>\n  )\n}\n\nexport default Info;","import React from 'react';\nimport AppSettingsService from '../settings/AppSettingsService';\n\nclass PicWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    let { photos, name } = this.props;\n    this.personName = name;\n\n    this.isToShowPhotos = AppSettingsService.isToShowPhotos;\n    this.ind = 0;\n\n    let imgSrc = this.isToShowPhotos ? photos?.[this.ind]?.url : null;\n\n    this.state = {\n      photos: photos,\n      imgSrc: imgSrc\n    };\n  }\n\n   nextPic = () => {\n    if (!this.isToShowPhotos) {\n      return;\n    }\n    if (this.state.photos.length < 2) {\n      return;\n    }\n    if (this.ind < this.state.photos.length - 1) {\n      this.ind++;\n    } else {\n      this.ind = 0;\n    }\n    this.setState({\n      imgSrc: this.state.photos[this.ind].url\n    });\n  }\n\n  render() {\n    if (!this.state.imgSrc) {\n      return (\n        <div>\n        </div>\n      )\n    } else if (this.isToShowPhotos) {\n      return (\n        <div className=\"container-fluid px-0\">\n          <img onClick={this.nextPic} src={this.state.imgSrc} alt=\"some image\" className='img-fluid w-100' />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <label className=\"text-center\">{this.personName} </label>\n        </div>\n      );\n    }\n\n  }\n}\nexport default PicWrapper;\n","import React from 'react'\nimport AppSettingsService from '../settings/AppSettingsService';\n\nexport default class SelectDistanceFilter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      radius: props.initialRadius || 0\n    }\n    this.parentObject = props.parentObject;\n  }\n\n  changeHandler = (e) => {\n    this.parentObject.setState({ distanceFilter: e.target.value })\n  }\n\n  render() {\n    let cssClasses = AppSettingsService.getInputStyleClasses()\n    let optionTags = [];\n    for (let value = 1; value < 100; value++) {\n      optionTags.push(<option key={value} value={value}>{value}</option>)\n    }\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Distance filter (mi):</label>\n          <select\n            className={cssClasses}\n            value={this.state.radius}\n            onChange={this.changeHandler}>\n            {optionTags}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react'\nimport AppSettingsService from '../settings/AppSettingsService';\n\nexport default class SelectMinAgeFilter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ageFilterMin: props.ageFilterMin || 18\n    }\n    this.parentObject = props.parentObject;\n  }\n\n  changeHandler = (e) => {\n    console.log(e.target.value)\n    let int = parseInt(e.target.value)\n    this.parentObject.changeState({ ageFilterMin: int })\n  }\n\n  render() {\n    let cssClasses = AppSettingsService.getInputStyleClasses()\n    let optionTags = [];\n    for (let value = 18; value < 50; value++) {\n      optionTags.push(<option key={value} value={value}>{value}</option>);\n    }\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Min age:</label>\n          <select\n            className={cssClasses}\n            value={this.state.ageFilterMin}\n            onChange={this.changeHandler}>\n            {optionTags}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react'\nimport AppSettingsService from '../settings/AppSettingsService';\n\nexport default class SelectMaxAgeFilter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ageFilterMax: props.ageFilterMax || 1000\n    }\n    this.parentObject = props.parentObject;\n  }\n\n  changeHandler = (e) => {\n    console.log(e.target.value)\n    let int = parseInt(e.target.value)\n    this.parentObject.changeState({ ageFilterMax: int })\n  }\n\n  render() {\n    let cssClasses = AppSettingsService.getInputStyleClasses()\n    let optionTags = [];\n    for (let value = 18; value < 55; value++) {\n      optionTags.push(<option key={value} value={value}>{value}</option>);\n    }\n    optionTags.push(<option key={1000} value={1000}>{\"55+\"}</option>);\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Maximal age:</label>\n          <select\n            className={cssClasses}\n            value={this.state.ageFilterMax}\n            onChange={this.changeHandler}>\n            {optionTags}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport LocationPicker from \"react-leaflet-location-picker\";\nimport { withRouter } from 'react-router-dom'\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport Checkbox from '../settings/Checkbox';\nimport Info from \"../building-blocks/Info\";\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport AjaxService from '../services/AjaxService';\nimport store from '../store';\nimport Const from '../services/Constants';\nimport SelectDistanceFilter from './SelectDistanceFilter';\nimport SelectMinAgeFilter from './SelectMinAgeFilter';\nimport SelectMaxAgeFilter from './SelectMaxAgeFilter';\n\nclass UserView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      profile: this.props?.data?.profile?.data,\n      hits: [],\n      error: null,\n      distanceFilter: null,\n      ageFilterMax: null,\n      ageFilterMin: null,\n      discoverable: false,\n      isButtonDisabled: false\n    };\n    //this.isButtonDisabled = false;\n    this.isLoading = false;\n  }\n\n  saveProfile = () => {\n    let data = {\n      age_filter_max: this.state.ageFilterMax,\n      age_filter_min: this.state.ageFilterMin,\n      distance_filter: this.state.distanceFilter,\n      discoverable: this.state.discoverable\n    }\n    AjaxService.doPost(Const.URLS.PROFILE, data, {})\n  }\n\n  disableSaveButton = () => {\n    if (this.state.ageFilterMax < this.state.ageFilterMin) {\n      this.setState({isButtonDisabled : true})\n      return;\n    }\n    this.setState({isButtonDisabled : false})\n  }\n\n  getProfile = () => {\n    this.isLoading = true\n    let promise = AjaxService.doGet(Const.URLS.PROFILE, {})\n    promise.then((data) => {\n      if (!data?.data) return;\n\n      store.addToStore('profile', data);\n      this.setState({\n        distanceFilter: data.data.distance_filter,\n        ageFilterMax: data.data.age_filter_max,\n        ageFilterMin: data.data.age_filter_min,\n        discoverable: data.data.discoverable,\n        profile: data.data\n      }, () => { this.isLoading = false })\n    }).catch((e) => {\n      console.error(e);\n      this.isLoading = false\n    })\n  }\n\n  componentWillMount() {\n    if (this.isLoading) {\n      return;\n    }\n    this.getProfile();\n  }\n\n  changeState = (obj) => {\n    this.setState(obj, () => {this.disableSaveButton()});\n  }\n\n  toggleShowProfile = (event) => {\n    this.setState({\n      discoverable: event?.target?.checked\n    })\n  }\n\n  render() {\n    var profile = this.state?.profile\n    if (!profile) {\n      return (\n        <div></div>\n      )\n    }\n\n    let pos = profile?.pos ? [profile?.pos?.lat, profile?.pos?.lon] : [0, 0];\n\n    let postLocation = (args) => {\n      let newMsgObj = {\n        lat: args[0],\n        lon: args[1]\n      }\n      AjaxService.doPost(Const.URLS.SEND_LOCATION, newMsgObj, {})\n    }\n\n    let UserData = () => {\n      return (\n        <div>\n          <Info person={profile} />\n          <br />\n          <SelectDistanceFilter initialRadius={this.state.distanceFilter} parentObject={this} />\n          <SelectMinAgeFilter ageFilterMin={this.state.ageFilterMin} parentObject={this} />\n          <SelectMaxAgeFilter ageFilterMax={this.state.ageFilterMax} parentObject={this} />\n          <Checkbox label=\"public profile\" condition={this.state.discoverable} changeHandler={this.toggleShowProfile} />\n          <br />\n          <button type=\"button\" className=\"btn btn-primary\" disabled={this.state.isButtonDisabled} onClick={this.saveProfile}> Save </button>\n        </div>\n      )\n    }\n\n    let person = [{\n      image: (<PicWrapper photos={profile.photos} name={profile.name} />),\n      info: (<UserData />)\n    }]\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    let pointVals = [pos];\n    const pointMode = {\n      banner: false,\n      control: {\n        values: pointVals,\n        onClick: point => {\n          pointVals = [point]\n          pointMode.control.values = [point];\n          postLocation(point);\n        },\n        //  onRemove: point => { }\n      }\n    };\n\n    const options = {\n      bindMap: true,\n      startPort: \"default\",\n      overlayAll: true,\n      showControls: false,\n      showInputs: false,\n      useDynamic: true,\n      pointMode: pointMode,\n      precision: 6\n    };\n\n    return (\n      <div>\n        <ReactTable\n          data={person}\n          columns={present}\n          sortable={false}\n          defaultPageSize={1}\n          showPagination={false}\n        />\n        <br />\n        <LocationPicker {...options} />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(UserView);\n//Request URL: https://api.gotinder.com/v2/profile?locale=en-GB\n// Request Method: POST\n// Status Code: 200 \n\n// {user: {age_filter_min: 25, age_filter_max: 45}}\n// {user: {discoverable: false, distance_filter: 24}}\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\n\nclass MatchDecoratorService extends React.Component {\n\n  getUserData = (match, callbackFunc) => {\n    console.log(match);\n    \n    let userId = match?.person?._id;\n    let person = match.person || {};\n    let promise = AjaxService.doGet(Const.URLS.USER + userId, {});\n    promise.then((data) => {\n\n      let user = data?.data?.results;\n      match.user = user;\n      \n      person.distance_mi = user?.distance_mi;\n      person.name = user?.name || person?.name\n      person.birth_date = user?.birth_date || person?.birth_date\n      person.bio = user?.bio || person?.bio\n      person.jobs = user?.jobs || person.jobs\n      person.schools = user?.schools || person.schools\n      let posInfo = {city:{name: user?.city?.name }, \n          country:{name: user?.city?.region }};\n      person.pos_info = person?.pos_info || posInfo;\n\n      callbackFunc(match);\n    }).catch((e) => {\n      console.error(e);\n      person.error = e\n      callbackFunc(match);\n    })\n  }\n\n}\nexport default new MatchDecoratorService();\n","import React from 'react';\n\nclass OnePicWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgSrc: props.src\n    };\n    this.condition = props.condition;\n    this.changeHandler = props.changeHandler;\n    this.match = props.match;\n  }\n\n  componentWillUnmount() {\n  }\n  componentDidMount() {\n  }\n\n  doClick = (e) => {\n    this.changeHandler(e, this.match);\n  }\n\n  render() {\n    if (this.condition) {\n      return (\n        <div className=\"container-fluid px-0\">\n          <img onClick={this.doClick} src={this.state.imgSrc} alt=\"new\" className='img-fluid w-100' />\n        </div>\n      );\n    } else {\n      return (\n        <div onClick={this.doClick}>\n          <label className=\"text-center\">{this.match.person.name}</label>\n        </div>\n      );\n    }\n\n  }\n}\nexport default OnePicWrapper;\n","import React from 'react';\nimport store from '../store';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport MatchDecoratorService from '../services/MatchDecoratorService';\nimport \"react-table/react-table.css\";\nimport OnePicWrapper from '../building-blocks/OnePicWrapper';\nimport ReactTable from \"react-table\";\nimport { withRouter } from 'react-router-dom';\n\nclass Friends extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showUser: false,\n      isVisible: false,\n      msgMatches: [],\n      sortingFunc: this.sortByLastActivityDate\n    };\n  }\n\n  sortByLastActivityDate = (a, b) => {\n    let timeA = new Date(a.last_activity_date).getTime();\n    let timeB = new Date(b.last_activity_date).getTime();\n    return timeB - timeA;\n  }\n\n  applySorting = (arrToBeSorted, sortingFunc) => {\n    try {\n      arrToBeSorted.sort(sortingFunc);\n    } catch (e) {\n      console.error(e);\n    }\n    return arrToBeSorted;\n  }\n\n  getUserData = (event, match) => {\n    let clBack = (match) => {\n      this.props.history.push({\n        pathname: '/friend',\n        state: { args: match }\n      })\n    }\n    MatchDecoratorService.getUserData(match, clBack);\n  }\n\n  render() {\n    let dt = store.getStore();\n\n    let friends = dt.update.data.matches;\n\n    this.applySorting(friends, this.state.sortingFunc);\n\n    let persons = friends.map(match => {\n      let prsn = match.person\n      let obj;\n      if (prsn) {\n        let picProps = {\n          condition: AppSettingsService.isToShowPhotos,\n          src: prsn.photos[0].url,\n          match: match,\n          changeHandler: this.getUserData\n        }\n      obj = {\n        firstName: prsn.name,\n        lastName: prsn.birth_date,\n        image: (<OnePicWrapper { ...picProps}/>)\n      }\n    }\n      return { ...obj };\n    });\n\n    const present = [\n      {\n        columns: [\n          {\n            Header: \"Image\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"First Name\",\n            accessor: \"firstName\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            sortable={false}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Friends);","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types'\r\n\r\nBtnLink.propTypes = {\r\n    label: PropTypes.string,\r\n    data: PropTypes.object,\r\n    pathname: PropTypes.string\r\n};\r\n\r\nfunction BtnLink(props) {\r\n    return (\r\n        <div>\r\n            <Link to={{ pathname: props.pathname, state: { data: props.data } }}>\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                    {props.label}\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BtnLink\r\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport BtnLink from \"../building-blocks/BtnLink\";\nimport Info from \"../building-blocks/Info\";\nimport NotesService from '../notes/NotesService';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport CashService from '../services/CashService';\nimport AjaxService from '../services/AjaxService';\nimport Const from '../services/Constants';\n\nclass OneFriend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.allBookmarks = null;\n  }\n\n  remove = (userId) => {\n    NotesService.removeBookmark(userId);\n  }\n\n  save = (userId) => {\n    NotesService.saveBookmark(userId);\n  }\n\n  deleteMatch = (matchId) => {\n    AjaxService.doDelete(Const.URLS.MATCH + matchId, {});\n  }\n\n  isBookmarked = (userId) => {\n    return this.allBookmarks[userId] !== undefined && this.allBookmarks[userId] !== null;\n  }\n\n  render() {\n    let { args } = this.props.location.state;\n    console.log(args);\n\n    this.allBookmarks = CashService.getBookmarksAsObject();\n    let InfoWithButton = () => (\n      <div>\n        <BtnLink label=\" ✍️ \" data={args} pathname=\"/chat\" />\n        <div className=\"mt-1\">\n          {!this.isBookmarked(args.person._id) ? <button type=\"button\" className=\"btn btn-success\"\n            onClick={() => this.save(args.person._id)}> <span>&#9734;</span> </button> : null}\n\n          {this.isBookmarked(args.person._id) ? <button type=\"button\" className=\"btn btn-danger\"\n            onClick={() => this.remove(args.person._id)}> <span>&#9734;</span></button> : null}\n\n          <button type=\"button\" className=\"btn btn-danger ml-2 float-right\" onClick={() => this.deleteMatch(args.id)}> ✖️ </button>\n        </div>\n        <Info person={args.person} />\n      </div>\n    )\n    let person = [{\n      image: (<PicWrapper photos={args.person.photos} name={args.person.name} />),\n      info: (<InfoWithButton />)\n    }]\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable\n            data={person}\n            columns={present}\n            sortable={false}\n            defaultPageSize={1}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default OneFriend;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport AjaxService from '../services/AjaxService';\nimport NotesService from '../notes/NotesService';\nimport CashService from '../services/CashService';\nimport Const from '../services/Constants';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport BtnLink from \"../building-blocks/BtnLink\";\nimport Info from \"../building-blocks/Info\";\n\nclass MoreFriends extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allFr: []\n    };\n\n    this.isMountedOk = true;\n    this.allBookmarks = null;\n  }\n\n  getBookmarksAsObject = () => {\n    this.allBookmarks = CashService.getBookmarksAsObject();\n  }\n\n  componentDidMount() {\n    this.getNewFriends(this.getBookmarksAsObject);\n    this.isMountedOk = true;\n  }\n\n  componentWillUnmount() {\n    this.isMountedOk = false;\n  }\n\n  getNewFriends = (callBack) => {\n    let promise = AjaxService.doGet(Const.URLS.NEW_FRIENDS, {})\n    promise.then((data) => {\n      let allFr = data?.data?.results;\n      if (!this.isMountedOk) {\n        return;\n      }\n      callBack()\n      this.setState({ allFr: allFr });\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  pass = (userId) => {\n    let promise = AjaxService.doGet(Const.URLS.PASS + userId, {})\n    promise.then((data) => {\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  like = (userId) => {\n    let promise = AjaxService.doGet(Const.URLS.LIKE + userId, {})\n    promise.then((data) => {\n      console.log(data);\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  isBookmarked = (userId) => {\n    return this.allBookmarks[userId] !== undefined && this.allBookmarks[userId] !== null;\n  }\n\n  render() {\n    let InfoWrapper = (args) => {\n      let { person } = args;\n\n      return (\n        <div className=\"text-justify text-wrap\">\n          <div>\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => this.like(person._id)}> 👍 </button>\n            <button type=\"button\" className=\"btn btn-danger ml-2\" onClick={() => this.pass(person._id)}> 👎 </button>\n\n            {!this.isBookmarked(person?._id) ? <button type=\"button\" className=\"btn btn-primary float-right ml-2\"\n              onClick={() => NotesService.saveBookmark(person?._id)}> <span>&#9734;</span> </button> : null}\n            {this.isBookmarked(person?._id) ? <button type=\"button\" className=\"btn btn-danger float-right ml-2\"\n              onClick={() => NotesService.removeBookmark(person?._id)}> <span>&#9734;</span> </button> : null}\n          </div>\n          <Info person={person} />\n        </div>\n      )\n    }\n\n    let Pic = args => (<PicWrapper photos={args.photos} name={args.name} />)\n\n    let allFr = this.state.allFr;\n\n    let persons = allFr.map(one => {\n      let obj = {\n        info: (<InfoWrapper person={one} />),\n        image: (<Pic photos={one.photos} name={one.name} />)\n      }\n      return { ...obj };\n    });\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div className=\"text-justify text-center\">\n          <BtnLink label=\" 👋 \" data={null} pathname=\"/pal-requests\" />\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.getNewFriends(this.getBookmarksAsObject)}> 🔃 </button>\n        </div>\n\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            sortable={false}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\nexport default MoreFriends;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport AjaxService from '../services/AjaxService'\nimport Const from '../services/Constants';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\n\nclass FriendRequests extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allFr: [],\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n    this.isMountedOk = true;\n  }\n\n  componentDidMount() {\n    this.isMountedOk = true;\n    this.getFriendRequests();\n  }\n\n  componentWillUnmount() {\n    this.isMountedOk = false;\n  }\n\n  getFriendRequests = () => {\n    let promise = AjaxService.doGet(Const.URLS.FAST_MATCH, {})\n    promise.then((data) => {\n      if (!this.isMountedOk || !data?.data?.data?.results) {\n        return;\n      }\nconsole.log(data.data)\n      this.setState({\n        allFr: data.data.data.results\n      })\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  render() {\n    let Info = args => <div className=\"text-justify text-wrap\"> {args.info} </div>;\n    let Pic = args => (<PicWrapper photos={args.photos} />);\n\n    let allFr = this.state.allFr;\n\n    let persons = allFr.map(one => {\n      let obj = {\n        info: (<Info info={one.user._id} />),\n        image: (<Pic photos={one.user.photos} />)\n      }\n      return { ...obj };\n    });\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          }//,\n          // {\n          //   Header: \"Info\",\n          //   accessor: \"info\"\n          // }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div className=\"text-center p-1 \">\n        </div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            sortable={false}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            showPagination={false}\n            style={{\n              width: '100%',\n              height: '30%',\n            }}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\nexport default FriendRequests;","import React, { Component } from 'react'\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectPollInterval extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      interval: AppSettingsService.updatePollInterval\n    }\n  }\n\n  changeHandler = (e) => {\n    this.setState({\n      interval: e.target.value\n    })\n    AppSettingsService.updatePollInterval = e.target.value;\n    this.props.onSelectPollInterval(e.target.value);\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Poll interval for getting updates to be every:</label>\n          <select\n            className={this.props.styles}\n            value={this.state.interval}\n            onChange={this.changeHandler}>\n            <option value=\"10000\">10 sec</option>\n            <option value=\"20000\">20 sec</option>\n            <option value=\"40000\">40 sec</option>\n            <option value=\"50000\">50 sec</option>\n            <option value=\"60000\">1 min</option>\n            <option value=\"300000\">5 min</option>\n            <option value=\"600000\">10 min</option>\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectTextColor extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: AppSettingsService.getSetting(\"textColor\") || AppSettingsService.textColors[0]\n    }\n  }\n\n  changeHandler = (event) => {\n    let color = event.target.value;\n\n    AppSettingsService.applyClass(document.body, AppSettingsService.textColors, color);\n    AppSettingsService.persistSetting(\"textColor\", color);\n\n    this.setState({\n      selected: color\n    })\n    this.props.triggerRender();\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Select text color:</label>\n          <select\n            className={this.props.styles}\n            value={this.state.selected}\n            onChange={this.changeHandler}>\n            {AppSettingsService.textColors.map(\n              (color) => {\n                return (<option key={color.name} value={color.class}>{color.name}</option>);\n              }\n            )}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}","import React, { Component } from 'react';\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectBackgroundColor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: AppSettingsService.getSetting(\"bgColor\") || AppSettingsService.bgColors[0]\n    }\n  }\n\n  changeHandler = (event) => {\n    let color = event.target.value;\n\n    AppSettingsService.applyClass(document.body, AppSettingsService.bgColors, color);\n    AppSettingsService.persistSetting(\"bgColor\", color);\n\n    this.setState({\n      selected: color\n    })\n    this.props.triggerRender();\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Select background color:</label>\n          <select className={this.props.styles}\n            value={this.state.selected}\n            onChange={this.changeHandler}>\n            {AppSettingsService.bgColors.map(\n              (color) => {\n                return (<option key={color.name} value={color.class}>{color.name}</option>);\n              }\n            )}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\r\nimport PollService from '../services/PollService';\r\nimport Const from '../services/Constants';\r\nimport SelectPollInterval from './SelectPollInterval';\r\nimport AppSettingsService from './AppSettingsService';\r\nimport SelectTextColor from './SelectTextColor';\r\nimport SelectBackgroundColor from './SelectBackgroundColor';\r\nimport Checkbox from './Checkbox';\r\n\r\nclass AppSettings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      styles: AppSettingsService.getInputStyleClasses(),\r\n      isToShowPhotos: AppSettingsService.isToShowPhotos\r\n    };\r\n  }\r\n\r\n  onSelectPollInterval = (val) => {\r\n    PollService.startUpdatePoll(val);\r\n    this.setState({\r\n      pollInterval: val\r\n    })\r\n  }\r\n\r\n  triggerRender = () => {\r\n    this.setState({\r\n      styles: AppSettingsService.getInputStyleClasses()\r\n    })\r\n  }\r\n\r\n  toggleShowPicsCheckbox = (event) => { \r\n    AppSettingsService.isToShowPhotos = event.target.checked;\r\n    this.setState({\r\n      isToShowPhotos: AppSettingsService.isToShowPhotos\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span className=\"float-right\"> ver: {Const.VERSION}</span> \r\n        <p/>\r\n        <SelectPollInterval styles={this.state.styles} onSelectPollInterval={this.onSelectPollInterval} />\r\n        <SelectBackgroundColor styles={this.state.styles} triggerRender={this.triggerRender} />\r\n        <SelectTextColor styles={this.state.styles} triggerRender={this.triggerRender} />\r\n        <Checkbox label=\"show photos\" condition={this.state.isToShowPhotos} changeHandler={this.toggleShowPicsCheckbox} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default AppSettings;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport BeanContextAware from '../services/BeanContextAware';\nimport CashService from '../services/CashService';\nimport Const from '../services/Constants'\nimport MatchDecoratorService from '../services/MatchDecoratorService';\nimport { withRouter } from 'react-router-dom';\n\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      beanId: props.beanId,\n      showUser: false,\n      isVisible: false,\n      msgMatches: []\n    };\n    this.initialTitle = document.title;\n  }\n\n  changeState = (obj) => {\n    this.setState(obj);\n  }\n\n  addMsgMatch = (mtch) => {\n    var pos = this.findInMsgMatches(mtch);\n    if (pos > -1) { // if found - do not add it again\n      return;\n    }\n    let msgMatches = this.state.msgMatches;\n    this.state.msgMatches.push(mtch);\n    this.setState({\n      msgMatches: msgMatches\n    })\n    this.toggleFlashTabTitle();\n  }\n\n  findInMsgMatches = (mtch) => {\n    let msgMatches = this.state.msgMatches\n    for (var i = 0, len = msgMatches.length; i < len; i++) {\n      if (msgMatches[i].id === mtch.id)\n        return i;\n    }\n    return -1;\n  }\n\n  removeMsgMatch = (mtch) => {\n    var pos = this.findInMsgMatches(mtch);\n    if (pos > -1) {\n      let msgMatches = this.state.msgMatches\n      msgMatches.splice(pos, 1);\n      this.setState(\n        { msgMatches: msgMatches },\n        () => this.toggleFlashTabTitle()\n      )\n    }\n  }\n\n  changeButtonVisibility = (obj) => {\n    this.setState(obj);\n  }\n\n  componentDidMount() {\n    BeanContextAware.add(this);\n  }\n\n  componentWillUnmount() {\n    BeanContextAware.remove(this);\n  }\n\n  toggleFlashTabTitle = () => {\n    if (this.state.msgMatches.length > 0 && !this.flashIntervalObj) {\n      this.startFlashTabTitle();\n    } else if (this.state.msgMatches.length === 0) {\n      this.stopFlashTabTitle();\n    }\n  }\n\n  startFlashTabTitle = () => {\n    this.flashIntervalObj = setInterval(\n      () => {\n        if (this.initialTitle === document.title) {\n          document.title = \"(\" + this.state.msgMatches.length + \") \" + this.initialTitle;\n        } else {\n          document.title = this.initialTitle;\n        }\n      }, 800\n    );\n  }\n\n  stopFlashTabTitle = () => {\n    clearTimeout(this.flashIntervalObj);\n    this.flashIntervalObj = null;\n    document.title = this.initialTitle;\n  }\n\n  getUserData = (match) => {\n    let clBack = (match) => {\n      this.props.history.push({\n        pathname: '/friend',\n        state: { args: match }\n      })\n    }\n    MatchDecoratorService.getUserData(match, clBack);\n  }\n\n  goChat = (match) => {\n    this.props.history.push({\n      pathname: '/chat',\n      state: { data: match }\n    })\n  }\n\n  render() {\n    let Btn = (props) => (\n      <div>\n        <NavLink exact activeClassName=\"active\" to={props.to}>\n          <button type=\"button\" className=\"btn btn-primary\">\n            {props.label}\n          </button>\n        </NavLink>\n      </div>\n    )\n    let isVisibleNewMsgs = this.state.msgMatches.length ? true : false;\n\n    let BtnBadge = (props) => {\n      let mtch = props.data;\n      if (!mtch.messages || mtch.messages.length === 0) {\n        return (\n          <div>\n            <button onClick={() => { this.removeMsgMatch(mtch); this.getUserData(mtch) }} className=\"btn btn-primary\" >\n            💌 {this.state.msgMatches.length} </button>\n          </div>\n        )\n      } else {\n        return (\n          <div>\n            <button onClick={() => this.goChat(mtch)} className=\"btn btn-primary\" >\n            💌 {this.state.msgMatches.length} </button>\n          </div>\n        )\n      }\n    }\n    return (\n      <nav>\n        <div className=\"text-center\">\n          {this.state.isVisible ? <span className=\"float-left\"> {CashService.getPhone()} </span> : null}\n          <div className=\"btn-group\">\n            {false ? <Btn to=\"/home\" label=\" 🏠 \" /> : null}\n            {this.state.isVisible ? <Btn to=\"/user\" label=\" 👦 \" /> : null}\n            {this.state.isVisible ? <Btn to=\"/pals\" label=\" 👯 \" /> : null}\n            {this.state.isVisible ? <Btn to=\"/more-pals\" label=\" 🤝 \" /> : null}\n            {this.state.isVisible ? <Btn to=\"/pal-requests\" label=\" 👋 \" /> : null}\n            {this.state.isVisible ? <Btn to=\"/notes\" label=\" 📑 \" /> : null}\n            {true ? <Btn to=\"/settings\" label=\" 🛠️ \" /> : null}\n            {false ? <Btn to=\"/logout\" label=\"|->\" /> : null}\n            {(this.state.isVisible && isVisibleNewMsgs) ? <BtnBadge data={this.state.msgMatches[0]} /> : null}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(Header);","import React from 'react';\r\nimport store from '../store'\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService';\r\nimport AppSettingsService from '../settings/AppSettingsService';\r\n\r\nclass EnterText extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: '',\r\n            store: props.data,\r\n            friendId: props.friendId,\r\n            triggerRenderFunc: props.triggerRenderFunc\r\n        }\r\n        this.getStyles = AppSettingsService.getInputStyleClasses;\r\n        const dummyEmojiInjector = (msg) => { return msg;}\r\n        this.injectEmoji = props.emojiInjectorFunc || dummyEmojiInjector;\r\n    }\r\n\r\n    createMessage = (match, store) => {\r\n        var dt = new Date();\r\n        return {\r\n            created_date: dt.toISOString(),\r\n            from: store.profile.data._id,\r\n            match_id: match.id,\r\n            message: this.state.value,\r\n            sent_date: dt.toISOString(),\r\n            timestamp: dt.getTime(),\r\n            to: match.person._id\r\n        }\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.key !== 'Enter') {\r\n            return;\r\n        }\r\n\r\n        let matches = store?.update?.data?.matches || [];\r\n        for (let i = 0; i < matches.length; i++) {\r\n            const oneMatch = matches[i];\r\n\r\n            if (oneMatch.person._id === this.state.friendId) {\r\n                let newMsgObj = this.createMessage(oneMatch, this.state.store);\r\n                this.injectEmoji(newMsgObj);\r\n                AjaxService.doPost(Const.URLS.SEND_MESSAGE, newMsgObj, {});\r\n                matches[i].messages.push(newMsgObj);\r\n                this.state.triggerRenderFunc();\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ value: '' });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        var elem = e.srcElement || e.target;\r\n        this.setState({ value: elem.value })\r\n    }\r\n\r\n    render() {\r\n        let inputProps = {\r\n            placeholder: 'Write...',\r\n            value: this.state.value,\r\n            onChange: this.onChange,\r\n            className: this.getStyles(),\r\n            onKeyPress: this.onKeyPress\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <input {...inputProps} type=\"text\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EnterText;\r\n","import React from 'react';\r\n\r\nclass MessageWrapper extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      let { msg } = this.props;\r\n      let msgDateObj = new Date(msg.timestamp);\r\n\r\n      let timeStr = msgDateObj.toLocaleTimeString();\r\n      let dateStr = msgDateObj.toLocaleDateString()\r\n      if (dateStr !== new Date().toLocaleDateString()) {\r\n        timeStr = timeStr + \",  \" + dateStr;\r\n      }\r\n\r\n      this.state = {\r\n          isSeen: msg.isSeen,\r\n          showDate: false,\r\n          date: timeStr\r\n      };\r\n    }\r\n\r\n    render() {\r\n        let { msg } = this.props;\r\n\r\n        let showHideDate = () => {\r\n            this.setState({ showDate: true });\r\n            setTimeout(\r\n                () => {\r\n                    this.setState({ showDate: false });\r\n                }, 5000);\r\n        }\r\n\r\n        return (\r\n            <div onClick={showHideDate}>\r\n                <p className=\"text-justify text-wrap\" >  {msg.message} </p>\r\n                {this.state.isSeen ? (<span className=\"badge badge-secondary text-justify text-wrap\">seen</span>) : null}\r\n                {this.state.showDate ? (<span className=\"badge small\" >  {this.state.date} </span>) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MessageWrapper;\r\n","import React, { Component } from 'react'\nimport BeanContextAware from '../services/BeanContextAware'\n\nexport default class Select extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      numberMsgShown: 10,\n      getStyles: props.getStyles\n    }\n  }\n\n  changeHandler = (e) => {\n    let chat1 = BeanContextAware.get('chat1');\n      this.setState({\n        numberMsgShown: e.target.value\n      })\n      if (chat1) {\n        chat1.changeState({ numberMsgShown: parseInt(e.target.value)});\n      }\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Number of messages to show:</label>\n          <select\n            className={this.state.getStyles()}\n            value={this.state.numberMsgShown}\n            onChange={this.changeHandler}>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n            <option value=\"50\">50</option>\n            <option value=\"70\">70</option>\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","\r\nconst emojis = [\r\n    {text:':)', face:'😃'},\r\n    {text:';)', face:'😉'},\r\n    {text:':(', face:'😞'},\r\n    {text:':*', face:'😘'},\r\n    {text:':P', face:'😛'},{text:':p', face:'😛'},{text:':П', face:'😛'},{text:':п', face:'😛'},\r\n    {text:':D', face:'😀'},{text:':Д', face:'😀'},{text:':д', face:'😀'}\r\n];\r\n\r\nexport const injectEmojiFunction = (msg) => {\r\n    if (!msg?.message) {\r\n        return msg;\r\n    }\r\n \r\n    for (let i = 0; i < emojis.length; i++) {\r\n        let emo = emojis[i];\r\n        let foundAt = msg.message.indexOf(emo.text);\r\n        while (foundAt > -1) {\r\n            msg.message = msg.message.replace(emo.text, emo.face);\r\n            foundAt = msg.message.indexOf(emo.text);\r\n        }\r\n    }\r\n    return msg;\r\n}\r\n","import React from 'react';\r\nimport ReactTable from \"react-table\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport store from '../store'\r\nimport EnterText from './enterText'\r\nimport MessageWrapper from './messageWrapper'\r\nimport BeanContextAware from '../services/BeanContextAware'\r\nimport Select from './Select'\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService'\r\nimport AppSettingsService from '../settings/AppSettingsService';\r\nimport { injectEmojiFunction } from './CyrilicEmojiStrategy';\r\n\r\nclass Chat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    let match = props.location.state.data;\r\n    let friendId = match.person._id;\r\n    let lastSeenMsg = match.seen ? match.seen.last_seen_msg_id : null;\r\n    this.state = {\r\n      lastSeenMsg: lastSeenMsg,\r\n      numberMsgShown: 10,\r\n      matchId: match.id,\r\n      store: store,\r\n      match: match,\r\n      friendId: friendId,\r\n      messages: match.messages\r\n    };\r\n    this.inputStyles = AppSettingsService.getInputStyleClasses;\r\n    this.isOnFocus = true;\r\n    this.isMountedOk = true;\r\n  }\r\n\r\n  onFocus = (ev) => {\r\n    this.isOnFocus = true;\r\n    this.deleteFromHeader();\r\n  }\r\n\r\n  onBlur = (ev) => {\r\n    this.isOnFocus = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    BeanContextAware.add(this);\r\n    window.addEventListener(\"focus\", this.onFocus);\r\n    window.addEventListener(\"blur\", this.onBlur);\r\n    this.isMountedOk = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    BeanContextAware.remove(this);\r\n    window.removeEventListener(\"focus\", this.onFocus);\r\n    window.removeEventListener(\"blur\", this.onBlur);\r\n    this.isMountedOk = false;\r\n  }\r\n\r\n  prepareMessages = (allMsgs, friendId, numberMsgShown) => {\r\n    let result = [];\r\n    result.length = numberMsgShown;\r\n\r\n    for (let ind = allMsgs.length - 1; 0 <= numberMsgShown; numberMsgShown-- , ind--) {\r\n\r\n      let msg = allMsgs[ind];\r\n\r\n      if (!msg) {\r\n        msg = {};\r\n      }\r\n\r\n      let transformedMsg = {};\r\n      result[numberMsgShown] = transformedMsg;\r\n\r\n      if (msg.from === friendId) {\r\n        transformedMsg.theirs = (<MessageWrapper msg={msg} />);\r\n      }\r\n      else {\r\n        transformedMsg.mine = (<MessageWrapper msg={msg} />);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  //call it to start render() in order to visualize the change\r\n  triggerRenderFunc = () => {\r\n    let match = store.getMatchById(this.state.match._id)\r\n    let lastSeenMsg = match.seen ? match.seen.last_seen_msg_id : null;\r\n    if (this.isMountedOk) {\r\n      this.setState({\r\n        lastSeenMsg: lastSeenMsg,\r\n        match: match,\r\n        messages: match.messages\r\n      })\r\n    }\r\n  }\r\n\r\n  changeState = (obj) => {\r\n    this.setState(obj)\r\n  }\r\n\r\n  sendSeen = (allMsgs) => {\r\n    if (!this.state.lastSeenMsg) {\r\n      console.log(\"empty value of 'lastSeenMsg'..\");\r\n    }\r\n\r\n    //clear notification for new friends, who have not send message:\r\n    if (!allMsgs || !allMsgs?.length) {\r\n      this.deleteFromHeader();\r\n      return;\r\n    }\r\n\r\n    for (let index = allMsgs.length - 1; 0 <= index; index--) {\r\n\r\n      let msgWrapped = allMsgs[index];\r\n\r\n      if (!msgWrapped || !msgWrapped.theirs) {\r\n        continue;\r\n      }\r\n      let msg = msgWrapped.theirs.props.msg;\r\n\r\n      if (msg._id !== this.state.lastSeenMsg) {\r\n        AjaxService.doGet(Const.URLS.SEND_SEEN + msg.match_id + \"/\" + msg._id, {});\r\n        let match = this.state.match;\r\n        if (match.seen) {\r\n          match.seen.last_seen_msg_id = msg._id;\r\n        }\r\n\r\n        this.deleteFromHeader();\r\n        return;\r\n      }\r\n      if (msgWrapped.theirs) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteFromHeader = () => {\r\n    let header = BeanContextAware.get('header1');\r\n    if (header && this.isOnFocus) {\r\n      header.removeMsgMatch(this.state.match);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: this.state.match.person.name,\r\n            accessor: \"theirs\"\r\n          },\r\n          {\r\n            Header: \"Me\",\r\n            accessor: \"mine\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n    var reorderedMessages = this.prepareMessages(this.state.messages, this.state.friendId, this.state.numberMsgShown);\r\n\r\n    this.sendSeen(reorderedMessages);\r\n\r\n    let inputProps = {\r\n      data: this.state.store,\r\n      friendId: this.state.match.person._id,\r\n      triggerRenderFunc: this.triggerRenderFunc,\r\n      emojiInjectorFunc: injectEmojiFunction\r\n    }\r\n\r\n    if (this.isMountedOk) {\r\n      return (\r\n        <div><Select getStyles={this.inputStyles} />\r\n          <div>\r\n            <ReactTable\r\n              data={reorderedMessages}\r\n              columns={present}\r\n              defaultPageSize={reorderedMessages.length}\r\n              pageSize={reorderedMessages.length}\r\n              showPagination={false}\r\n              bordered={false}\r\n              sortable={false}\r\n  \r\n            />\r\n            <div>\r\n              <EnterText {...inputProps} />\r\n            </div>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      )\r\n    } \r\n    return (\r\n      <div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\nexport default withRouter(Chat);\r\n","import React from 'react';\r\nimport \"react-table/react-table.css\"\r\nimport ReactTable from \"react-table\";\r\nimport Info from \"../building-blocks/Info\";\r\nimport PicWrapper from \"../building-blocks/PicWrapper\";\r\nimport NotesService from './NotesService';\r\nimport CashService from '../services/CashService';\r\nimport AjaxService from '../services/AjaxService';\r\nimport Const from '../services/Constants';\r\nimport MatchDecoratorService from '../services/MatchDecoratorService';\r\n\r\nclass Notes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      match: null\r\n    };\r\n    this.index = 0;\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.allBookmarks = CashService.getBookmarksAsObject();\r\n    let all = CashService.getBookmarks();\r\n\r\n    let id = all[this.index]\r\n    if (!id) {\r\n      return;\r\n    }\r\n    let mtch = this.formDummyMatch(id);\r\n\r\n    MatchDecoratorService.getUserData(mtch, this.processUserData);\r\n  }\r\n\r\n  saveAllByPhone = function () {\r\n    NotesService.saveAllByPhone();\r\n  }\r\n\r\n  getOne = function () {\r\n    NotesService.getOne();\r\n  }\r\n\r\n  getBookmarks = function () {\r\n    NotesService.getBookmarks();\r\n  }\r\n\r\n  removeBookmark = function (userId) {\r\n    NotesService.removeBookmark(userId);\r\n    this.index--;\r\n  }\r\n\r\n  formDummyMatch(id) {\r\n    return {\r\n      person: { _id: id }\r\n    }\r\n  }\r\n\r\n  pass = (userId) => {\r\n    let promise = AjaxService.doGet(Const.URLS.PASS + userId, {})\r\n    promise.then((data) => {\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  like = (userId) => {\r\n    let promise = AjaxService.doGet(Const.URLS.LIKE + userId, {})\r\n    promise.then((data) => {\r\n      console.log(data);\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  processUserData = (match) => {\r\n    if (!!match?.person?.error) {\r\n      try {\r\n        console.log('User id: ' + match?.person?._id + \" will be removed from Bookmarks list\");\r\n        NotesService.removeBookmark(match?.person?._id);\r\n        this.match = null;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    this.match = match;\r\n    this.setState({\r\n      match: match\r\n    })\r\n  }\r\n\r\n  get = (step) => {\r\n    let all = CashService.getBookmarks();\r\n\r\n    this.index = this.index + step;\r\n\r\n    if (this.index < 0) {\r\n      this.index = all.length - 1;\r\n    } else if (this.index > all.length - 1) {\r\n      this.index = 0;\r\n    }\r\n    \r\n    let id = all[this.index];\r\n\r\n    if (!id) {\r\n      console.error(\"'id' is \" + id);\r\n      return;\r\n    }\r\n    let mtch = this.formDummyMatch(id);\r\n    MatchDecoratorService.getUserData(mtch, this.processUserData);\r\n  }\r\n\r\n  isBookmarked = (userId) => {\r\n    return this.allBookmarks[userId] !== undefined && this.allBookmarks[userId] !== null;\r\n  }\r\n\r\n  render() {\r\n    if (!this.match) {\r\n      return (\r\n        <div>\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.get(-1)}> ⬅️ </button>\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.get(1)}> ➡️ </button>\r\n        </div>\r\n      )\r\n    }\r\n    let match = this.match;\r\n\r\n    let InfoWithButton = () => {\r\n      let userId = match?.person?._id;\r\n      return (\r\n\r\n        <div>\r\n          <div className=\"text-justify text-wrap\">\r\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => this.like(userId)}> 👍 </button>\r\n            <button type=\"button\" className=\"btn btn-danger ml-2\" onClick={() => this.pass(userId)}> 👎 </button>\r\n\r\n            {!this.isBookmarked(userId) ? <button type=\"button\" className=\"btn btn-primary float-right ml-2\"\r\n              onClick={() => NotesService.saveBookmark(userId)}> <span>&#9734;</span> </button> : null}\r\n\r\n            {this.isBookmarked(userId) ? <button type=\"button\" className=\"btn btn-danger float-right ml-2\"\r\n              onClick={() => NotesService.removeBookmark(userId)}> <span>&#9734;</span> </button> : null}\r\n\r\n          </div>\r\n          <Info person={match?.person} />\r\n        </div>\r\n      )\r\n    }\r\n    let Pic = args => (<PicWrapper photos={args.photos} name={args.name} />);\r\n    let person = [{\r\n      image: (<Pic photos={match?.user?.photos} name={match?.user?.name} />),\r\n      info: (<InfoWithButton />)\r\n    }]\r\n\r\n    let present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: \"Photos\",\r\n            accessor: \"image\"\r\n          },\r\n          {\r\n            Header: \"Info\",\r\n            accessor: \"info\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"text-justify text-wrap text-center float-center\">\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.get(-1)}> ⬅️ </button>\r\n          <button type=\"button\" disabled={true} className=\"btn btn-secondary\"> {this.index + 1} of {CashService.getBookmarks()?.length} </button>\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.get(1)}> ➡️ </button>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <ReactTable\r\n            data={person}\r\n            columns={present}\r\n            sortable={false}\r\n            defaultPageSize={1}\r\n            showPagination={false}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Notes;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport CashService from './services/CashService';\nimport AppSettingsService from './settings/AppSettingsService';\nimport PollService from './services/PollService';\nimport NotesService from './notes/NotesService';\nimport Home from './Home';\nimport PhoneForm from './auth/PhoneForm';\nimport PhoneToken from './auth/PhoneToken';\nimport ConfirmCode from './auth/confirmCode';\nimport UserView from './userView/userView';\nimport Friends from './userView/friends';\nimport OneFriend from './userView/OneFriend';\nimport MoreFriends from './userView/MoreFriends';\nimport FriendRequests from './userView/FriendRequests';\nimport AppSettings from './settings/AppSettings';\nimport Header from './building-blocks/header';\nimport Chat from './chat/chat.js';\nimport Notes from './notes/Notes';\nimport store from './store';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nconst App = () => {\n  return (\n    <div className=\"container\" style={{ paddingTop: 10 }}>\n\n      <Router>\n        <Header beanId=\"header1\" />\n        <Switch>\n          < Route exact path=\"/\" component={Home} />\n          < Route path=\"/user\" render={() => <UserView data={store} />} />\n          < Route path=\"/phone\" component={PhoneForm} />\n          < Route path=\"/phone-token\" component={PhoneToken} />\n          < Route path=\"/friend\" component={OneFriend} />\n          < Route path=\"/chat\" render={() => <Chat beanId=\"chat1\"/>} />\n          < Route path=\"/notes\" render={() => <Notes beanId=\"notes1\"/>} />\n          < Route path=\"/pals\" render={() => <Friends data={store.updates} />} />\n          < Route path=\"/more-pals\" render={() => <MoreFriends data={store.updates} />} />\n          < Route path=\"/pal-requests\" render={() => <FriendRequests data={store.updates} />} />\n          < Route path=\"/settings\"render={() => <AppSettings beanId=\"appSettings1\"/>} />\n          < Route path=\"/confirm-token\" component={ConfirmCode} />\n          < Route path=\"*\" component={Home} />\n        </Switch>\n      </Router>\n    </div >\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render( <App/> , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}