{"version":3,"sources":["services/Constants.js","services/AjaxService.js","services/CashService.js","settings/AppSettingsService.js","services/BeanContextAware.js","store.js","services/PollService.js","notes/NotesService.js","Home.js","building-blocks/RenderForm.js","auth/PhoneForm.js","auth/PhoneToken.js","auth/confirmCode.js","settings/Checkbox.js","building-blocks/Info.js","building-blocks/PicWrapper.js","userView/SelectDistanceFilter.js","userView/SelectMinAgeFilter.js","userView/SelectMaxAgeFilter.js","settings/SelectPollInterval.js","settings/SelectTextColor.js","settings/SelectBackgroundColor.js","userView/userView.js","services/MatchDecoratorService.js","building-blocks/OnePicWrapper.js","userView/friends.js","building-blocks/BtnLink.js","userView/OneFriend.js","userView/MoreFriends.js","userView/FriendRequests.js","settings/AppSettings.js","building-blocks/header.js","chat/enterText.js","chat/messageWrapper.js","chat/Select.js","chat/CyrilicEmojiStrategy.js","chat/chat.js","notes/Notes.js","App.js","serviceWorker.js","index.js"],"names":["ipAdress","Const","URLS","BASE_URL","AUTH","PHONE","GET_TOKEN","UPDATES","PROFILE","USER","MATCH","SEND_MESSAGE","SEND_LOCATION","NEW_FRIENDS","SEND_SEEN","FAST_MATCH","LIKE","PASS","STORAGE","STORAGE_TOKEN","STORAGE_BOOKMARKS","STORAGE_SETTINGS","UPDATE_POLL_INTERVAL","LOCAL_CASH_VAR_NAME","AUTH_HEADER_NAME","PHONE_HEADER_NAME","VERSION","execute","method","url","data","headers","axios","doPost","getHeaders","doPut","doGet","doDelete","authHeaderName","phoneHeaderName","CashService","React","Component","props","persistAll","phone","obj","AjaxService","JSON","stringify","catch","e","console","error","loadAll","getPhone","setPhone","getToken","setToken","token","getSettings","settings","setSettings","persistSettings","persistBookmarks","arr","this","then","log","bgColor","textColor","bookmarks","cashStructureTemplate","reduce","json","value","key","applyDesignSettings","getSetting","textColors","class","applyClass","document","body","bgColors","persistSetting","settingName","settingObject","element","colors","selectedColor","forEach","color","classList","remove","add","getInputStyleClasses","updatePollInterval","isToShowPhotos","bean","state","Error","beanId","context","warn","get","reducer","combineReducers","form","reduxFormReducer","store","window","devToolsExtension","createStore","functionsQueue","addToFunctionsQ","funct","push","length","shift","funcToCall","getStore","getMatchById","id","matches","update","i","_id","addToStore","checkIfLogged","onSuccess","onFailure","getUpdates","getLastActivityDate","startUpdatePoll","AppSettingsService","mergeUpdates","updates","matchUpdate","oldMatch","newMsgs","messages","newMsgsCount","y","splice","concat","lastSeenMsg","seen","last_seen_msg_id","LAST_SEEN_MSG_INITIAL","last_activity_date","BASE_DATE","addToUnreadMessagesBadge","markLastUnreadMessages","newLastSeenMsgId","oldLastSeenMsgId","localUser","profile","ind","msg","from","mtch","header","BeanContextAware","addMsgMatch","lastDate","chat1","triggerRenderFunc","changeButtonVisibility","isVisible","exceptionCount","isToStopUpdatePoll","stopUpdatePoll","exception","seconds","pollInterval","pollIntervalObj","setInterval","clearTimeout","saveBookmark","personId","getBookmarks","indexOf","removeBookmark","index","oneFromArr","saveAllByPhone","getOne","promise","Home","hits","isLoading","to","eachComponent","input","label","type","placeholder","meta","touched","className","RenderForm","options","handleSubmit","fields","RenderFieldWrappedInstance","reduxForm","onSubmit","map","op","noCash","name","uuidv1","Field","onChange","component","PhoneForm","handleChange","event","target","phoneNumAuth","history","ifNotLogged","preventDefault","setBookmarks","authToken","processAuth","confirm","PollService","optns","withRouter","PhoneToken","handleChangeToken","doAuth","persistToken","alert","autoComplete","ConfirmCode","confirmToken","phoneNumber","status","onChangeFun","Checkbox","doChangeState","changeHandler","setState","condition","checked","defaultChecked","Info","args","person","country","pos_info","age","birth_date","substring","city","jobs","title","schools","distance_mi","bio","PicWrapper","nextPic","photos","imgSrc","personName","onClick","src","alt","SelectDistanceFilter","parentObject","distanceFilter","radius","initialRadius","cssClasses","optionTags","SelectMinAgeFilter","int","parseInt","changeState","ageFilterMin","SelectMaxAgeFilter","ageFilterMax","SelectPollInterval","interval","onSelectPollInterval","styles","SelectTextColor","selected","triggerRender","SelectBackgroundColor","UserView","saveProfile","age_filter_max","age_filter_min","distance_filter","discoverable","disableSaveButton","isButtonDisabled","getProfile","toggleShowProfile","val","toggleShowPicsCheckbox","pos","lat","lon","image","info","disabled","pointVals","pointMode","banner","control","values","point","newMsgObj","postLocation","bindMap","startPort","overlayAll","showControls","showInputs","useDynamic","precision","columns","Header","accessor","sortable","defaultPageSize","showPagination","getUserData","match","callbackFunc","userId","user","results","posInfo","region","OnePicWrapper","doClick","Friends","sortByLastActivityDate","a","b","timeA","Date","getTime","applySorting","arrToBeSorted","sortingFunc","sort","MatchDecoratorService","pathname","showUser","msgMatches","friends","persons","prsn","picProps","firstName","lastName","pageSize","BtnLink","OneFriend","NotesService","save","deleteMatch","matchId","isBookmarked","undefined","allBookmarks","location","getBookmarksAsObject","MoreFriends","getNewFriends","callBack","allFr","isMountedOk","pass","like","showMoreFriendsRefreshButton","hideMoreFriendsRefreshButton","InfoWrapper","Pic","one","FriendRequests","getFriendRequests","isActiveRecently","recently_active","style","width","height","AppSettings","findInMsgMatches","toggleFlashTabTitle","len","removeMsgMatch","isVisibleMoreFriendsTab","flashIntervalObj","startFlashTabTitle","stopFlashTabTitle","initialTitle","goChat","moreFriends1","Btn","exact","activeClassName","isVisibleNewMsgs","EnterText","createMessage","dt","created_date","toISOString","match_id","message","sent_date","timestamp","onKeyPress","oneMatch","friendId","injectEmoji","elem","srcElement","getStyles","emojiInjectorFunc","inputProps","MessageWrapper","msgDateObj","timeStr","toLocaleTimeString","dateStr","toLocaleDateString","isSeen","showDate","date","setTimeout","Select","numberMsgShown","emojis","text","face","injectEmojiFunction","emo","foundAt","replace","Chat","onFocus","ev","isOnFocus","deleteFromHeader","onBlur","prepareMessages","allMsgs","result","transformedMsg","theirs","mine","sendSeen","msgWrapped","inputStyles","addEventListener","removeEventListener","present","reorderedMessages","bordered","Notes","processUserData","step","all","formDummyMatch","App","paddingTop","path","render","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3870f003.chunk.js","sourcesContent":["let ipAdress = ' https://bender-app.herokuapp.com/';\n\nconst Const = {\n  URLS: {\n    BASE_URL: ipAdress,\n    AUTH: {\n      PHONE: ipAdress + 'requestCode',\n      GET_TOKEN: ipAdress + 'getToken/'\n    },\n    UPDATES: ipAdress + 'updates',\n    PROFILE: ipAdress + 'profile',\n    USER: ipAdress + 'user/',\n    MATCH: ipAdress +  'user/matches/',\n    SEND_MESSAGE: ipAdress + 'postMessage',\n    SEND_LOCATION: ipAdress + 'location',\n    NEW_FRIENDS: ipAdress + 'new-friends',\n    SEND_SEEN: ipAdress + 'seen/',\n    FAST_MATCH: ipAdress + 'fast-match',\n    LIKE: ipAdress + 'like/',\n    PASS: ipAdress + 'pass/',\n\n\n    //// storage api:\n    STORAGE: ipAdress + 'storage/',\n    STORAGE_TOKEN: ipAdress + 'storage/token/',\n    STORAGE_BOOKMARKS: ipAdress + 'storage/bookmarks/',\n    STORAGE_SETTINGS: ipAdress + 'storage/settings/'\n  },\n  UPDATE_POLL_INTERVAL: 20000,\n  LOCAL_CASH_VAR_NAME: '__TnDr__',\n  AUTH_HEADER_NAME: 'X-Auth-Token',\n  PHONE_HEADER_NAME: 'phone-number',\n  VERSION: '1.30'\n}\n\nexport default Const;\n","import React from 'react';\nimport axios from 'axios';\nimport Const from './Constants';\nimport CashService from './CashService';\n\nclass AjaxService extends React.Component {\n\n  execute = (method, url, data, headers) => {\n    return axios({\n      method: method,\n      url: url,\n      data: data,\n      headers: headers\n    });\n  };\n\n  doPost = (url, data, headers) => {\n    return this.execute('post', url, data, this.getHeaders(headers));\n  };\n\n  doPut = (url, data, headers) => {\n    return this.execute('put', url, data, this.getHeaders(headers));\n  };\n\n  doGet = (url, headers) => {\n    return this.execute('get', url, {}, this.getHeaders(headers));\n  };\n\n  doDelete = (url, headers) => {\n    return this.execute('delete', url, {}, this.getHeaders(headers));\n  };\n\n  getHeaders = (headers) => {\n    let authHeaderName = Const.AUTH_HEADER_NAME;\n    let phoneHeaderName = Const.PHONE_HEADER_NAME;\n    if (!headers) {\n      headers = {};\n    }\n\n    if (CashService[phoneHeaderName]) {\n      headers[phoneHeaderName] = CashService[phoneHeaderName];\n    }\n\n    if (CashService[authHeaderName]) {\n      headers[authHeaderName] = CashService[authHeaderName];\n    }\n    return headers;\n  };\n}\n\nexport default new AjaxService();\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\n\nclass CashService extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this[Const.PHONE_HEADER_NAME] = null;\n    this[Const.AUTH_HEADER_NAME] = null;\n    this.settings = { bgColor: \"bg-dark\", textColor: \"text-white\" };\n    this.bookmarks = [];\n    this.cashStructureTemplate = {\n      settings: this.settings,\n      [Const.AUTH_HEADER_NAME]: { token: this[Const.AUTH_HEADER_NAME] },\n      bookmarks: this.bookmarks\n    }\n  };\n\n  persistAll = function (phone, obj) {\n    let promise = AjaxService.doPost(Const.URLS.STORAGE + phone, {\n      'json': JSON.stringify(obj)\n    }, {});\n    promise.catch((e) => {\n      console.error(e);\n    })\n  }\n\n  loadAll = function (phone) {\n    return AjaxService.doGet(Const.URLS.STORAGE + phone, {});\n  }\n\n  getPhone = () => {\n    return this[Const.PHONE_HEADER_NAME];\n  };\n\n  setPhone = (phone) => {\n    this[Const.PHONE_HEADER_NAME] = phone;\n  };\n\n  /// token:\n  getToken = () => {\n    return this[Const.AUTH_HEADER_NAME];\n  };\n\n  setToken = (token) => {\n    this[Const.AUTH_HEADER_NAME] = token;\n  };\n\n  persistToken(token) {\n    AjaxService.doPut(Const.URLS.STORAGE_TOKEN + this.getPhone(), {\n      'json': JSON.stringify({ \"token\": token })\n    });\n  }\n\n  //// settings:\n  getSettings = () => {\n    return this.settings;\n  };\n\n  setSettings = (settings) => {\n    this.settings = settings;\n  };\n\n  persistSettings = (settings) => {\n    AjaxService.doPut(Const.URLS.STORAGE_SETTINGS + this.getPhone(), {\n      'json': JSON.stringify(settings)\n    });\n  }\n\n  /// bookmarks:\n  getBookmarks() {\n    return this.bookmarks;\n  }\n\n  setBookmarks(bookmarks) {\n    this.bookmarks = bookmarks;\n  }\n\n  getBookmarksAsObject() {\n    return this.bookmarks.reduce((json, value, key) => {\n      json[value] = key;\n      return json;\n    }, {});\n  }\n\n  persistBookmarks = function (arr) {\n    let promise = AjaxService.doPost(Const.URLS.STORAGE_BOOKMARKS + this.getPhone(), {\n      'json': JSON.stringify(arr)\n    }, {});\n\n    promise.then((data) => {\n      console.log(data);\n    }).catch((e) => {\n      console.error(e);\n    })\n  }\n}\n\nexport default new CashService();\n","import React from 'react';\r\nimport CashService from '../services/CashService';\r\nimport Const from '../services/Constants';\r\n\r\n//this singleton applies settings at startup:\r\nclass AppSettingsService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textColors = [\r\n      { \"name\": 'Gray', \"class\": 'text-muted' },\r\n      { \"name\": 'White', \"class\": 'text-white' },\r\n      { \"name\": 'Dark', \"class\": 'text-dark' },\r\n      { \"name\": 'Black', \"class\": 'text-body' }\r\n    ]\r\n\r\n    this.bgColors = [\r\n      { \"name\": 'Gray', \"class\": 'bg-secondary' },\r\n      { \"name\": 'Dark', \"class\": 'bg-dark' },\r\n      { \"name\": 'Light', \"class\": 'bg-light' }\r\n    ]\r\n\r\n    this.updatePollInterval = Const.UPDATE_POLL_INTERVAL;\r\n    this.isToShowPhotos = true;\r\n  }\r\n\r\n  applyDesignSettings = () => {\r\n    let textColor = this.getSetting(\"textColor\") || this.textColors[0]?.class;\r\n    if (textColor) {\r\n      console.log(textColor);\r\n      \r\n      this.applyClass(document.body, this.textColors, textColor);\r\n    }\r\n\r\n    let bgColor = this.getSetting(\"bgColor\") || this.bgColors[0].class;\r\n    if (bgColor) {\r\n      this.applyClass(document.body, this.bgColors, bgColor);\r\n    }\r\n  }\r\n\r\n  persistSetting = (settingName, settingObject) => {\r\n    let settings = CashService.getSettings();\r\n    if (!settings) {\r\n      settings = {};\r\n      CashService.setSettings(settings);\r\n    }\r\n    settings[settingName] = settingObject;\r\n    CashService.persistSettings(settings);\r\n  }\r\n\r\n  getSetting = (settingName) => {\r\n    let settings = CashService.getSettings();\r\n    return settings?.[settingName];\r\n  }\r\n\r\n  applyClass = (element, colors, selectedColor) => {\r\n    colors.forEach(color => {\r\n      element.classList.remove(color.class);\r\n    });\r\n\r\n    element.classList.add(selectedColor);\r\n  }\r\n\r\n  getInputStyleClasses = () => {\r\n    return \"form-control \" + (this.getSetting(\"textColor\") || \" \") +\r\n      \" \" + (this.getSetting(\"bgColor\") || \"\");\r\n  }\r\n}\r\nexport default new AppSettingsService();\r\n","import React from 'react';\n\nclass BeanContextAware extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.context= {};\n  };\n\n  add = (bean) => {\n    if (!bean || !bean.state) {\n      throw new Error(\"Not allowed 'null' values for 'bean': \" + bean + \" !\");\n    }\n    let beanId = bean.state.beanId || bean.props.beanId;\n    if (!beanId) {\n      throw new Error(\"Not allowed 'null' value for 'beanId' \" + beanId  + \" !\" );\n    }\n    if (this.context[beanId]) {\n      console.warn(\"Bean with 'beanId': \" + beanId + \"is already registered under BeanContextAware!\");\n    }\n    this.context[beanId] = bean;\n  }\n\n  get = (beanId) => {\n    if (!beanId ) {\n      throw new Error(\"Not allowed 'null' value for 'beanId' \" + beanId + \" !\" );\n    }\n    return this.context[beanId];\n  }\n\n  remove = (bean) => {\n    if (!bean) {\n      throw new Error(\"Not allowed 'null' value for 'bean' \" + bean + \" !\" );\n    }\n    if ( typeof bean === 'string' ) {\n        delete this.context[bean];\n        return;\n    }\n    let beanId = bean.state.beanId || bean.props.beanId;\n    delete this.context[beanId];\n  }\n}\nexport default new BeanContextAware();\n","import { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer // mounted under \"form\"\n})\nconst store =\n  (window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore)(reducer)\n\nconst functionsQueue = [];\n\nlet addToFunctionsQ = (funct) => {\n  functionsQueue.push(funct);\n\n  while (functionsQueue.length > 0) {\n    let funcToCall = functionsQueue.shift()\n    funcToCall();\n  }\n}\n\nstore.getStore = () => {\n  // add dummy function as a placeholder\n  addToFunctionsQ(() => { });\n  return store;\n}\n\nstore.getMatchById = (id) => {\n  if (!id) {\n    throw new Error(\"'id' is not allowed to be: \" + id);\n  }\n  let matches = store.getStore()?.update?.data?.matches || [];\n  for (var i = 0; i < matches.length; i++) {\n    if (id === matches[i]._id) {\n      return matches[i];\n    }\n  }\n  return null;\n}\n\nstore.addToStore = (key, value) => {\n  if (!key || typeof (key) != 'string') {\n    throw new Error(\"Only objects of type 'string' are allowed!\");\n  }\n\n  addToFunctionsQ(\n    function () {\n      store[key] = value;\n    }\n  );\n}\n\nexport default store;\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\nimport BeanContextAware from './BeanContextAware';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport store from '../store';\n\nclass PollService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n    this.LAST_SEEN_MSG_INITIAL = \"initial_seen_msg_id\";\n    this.BASE_DATE = \"1984-08-01T00:00:00.000Z\";\n    this.last_activity_date = this.BASE_DATE;\n    this.exceptionCount = 0;\n  };\n\n  checkIfLogged = (headers, onSuccess, onFailure) => {\n    let promise = AjaxService.doGet(Const.URLS.PROFILE, headers)\n    promise.then((data) => {\n      store.addToStore('profile', data);\n      onSuccess()\n      this.getUpdates(this.getLastActivityDate());\n      this.startUpdatePoll(AppSettingsService.updatePollInterval);\n\n    }).catch((e) => {\n      console.error(e);\n      onFailure()\n    })\n  }\n\n  mergeUpdates = (store, updates) => {\n    let matches = updates.data.matches;\n\n    for (let i = 0; i < matches.length; i++) {\n      let matchUpdate = matches[i];\n      let oldMatch = store.getMatchById(matchUpdate._id);\n      //merge brand new matches:\n      if (!oldMatch) {\n        store.getStore().update.data.matches.push(matchUpdate);\n        this.addToUnreadMessagesBadge(matchUpdate);\n        continue;\n      }\n\n      //merge new messages:\n      let newMsgs = matchUpdate.messages;\n      let newMsgsCount = newMsgs.length;\n      for (let y = oldMatch.messages.length - 1; 0 <= newMsgsCount || 0 <= y; y-- , newMsgsCount--) {\n        if (oldMatch.messages[y] && !oldMatch.messages[y]._id) {\n          oldMatch.messages.splice(y, 1);\n        }\n      }\n      oldMatch.messages = oldMatch.messages.concat(newMsgs);\n\n      /// merge seen:\n      let lastSeenMsg = matchUpdate?.seen?.last_seen_msg_id;\n      if (!!lastSeenMsg) {\n        if (!oldMatch.seen) {\n          oldMatch.seen = {};\n          oldMatch.seen.last_seen_msg_id = this.LAST_SEEN_MSG_INITIAL;\n        }\n        oldMatch.seen.last_seen_msg_id = lastSeenMsg;\n      }\n\n      /// merge last_activity_date:\n      oldMatch.last_activity_date = matchUpdate?.last_activity_date || oldMatch.last_activity_date || this.BASE_DATE;\n    }\n  }\n\n  markLastUnreadMessages = (store, updates) => {\n    let matches = updates?.data?.matches;\n\n    for (let i = 0; i < matches?.length; i++) {\n      let matchUpdate = matches[i];\n      let oldMatch = store.getMatchById(matchUpdate._id);\n\n      let newLastSeenMsgId = matchUpdate?.seen?.last_seen_msg_id;\n      let oldLastSeenMsgId = oldMatch?.seen?.last_seen_msg_id;\n      let localUser = store?.profile?.data;\n\n      newLastSeenMsgId = newLastSeenMsgId || oldLastSeenMsgId;\n      if (!newLastSeenMsgId || !localUser || !localUser._id) {\n        continue;\n      }\n      let newMsgs = matchUpdate.messages;\n\n      for (var ind = newMsgs.length - 1; 0 <= ind; ind--) {\n        let msg = newMsgs[ind];\n\n        if (!msg.from) {\n          continue;\n        }\n\n        if (localUser._id !== msg.from) {\n\n          if (msg._id !== newLastSeenMsgId) {\n            this.addToUnreadMessagesBadge(oldMatch);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  addToUnreadMessagesBadge = (mtch) => {\n    let header = BeanContextAware.get('header1');\n    if (header) {\n      header.addMsgMatch(mtch)\n    }\n  }\n\n  getUpdates = (lastDate) => {\n    let header = BeanContextAware.get('header1');\n    let chat1 = BeanContextAware.get('chat1');\n    let data = {\n      \"last_activity_date\": lastDate\n    }\n\n    let promise = AjaxService.doPost(Const.URLS.UPDATES, data, {});\n    promise.then((data) => {\n      if (store.update) {\n        this.mergeUpdates(store, data);\n      } else {\n        store.addToStore('update', data);\n      }\n\n      this.markLastUnreadMessages(store, data);\n\n      /// merge global (updates polling) last_activity_date:\n      this.last_activity_date = data.data.last_activity_date;\n\n      if (chat1) chat1.triggerRenderFunc();\n      if (header) header.changeButtonVisibility({ isVisible: true });\n\n      this.exceptionCount = 0;\n\n    }).catch((e) => {\n      console.error(e);\n\n      if (header) header.changeButtonVisibility({ isVisible: false })\n\n      if (this.isToStopUpdatePoll(e)) this.stopUpdatePoll();\n\n      this.exceptionCount++\n    })\n  }\n\n  isToStopUpdatePoll = (exception) => {\n    if (this.exceptionCount > 2) {\n      return true;\n    }\n    return false;\n  }\n\n  startUpdatePoll = (seconds) => {\n    if (!seconds) {\n      console.error(\"error null val for 'seconds'\");\n      return;\n    }\n    this.stopUpdatePoll();\n    this.pollInterval = seconds\n    this.pollIntervalObj = setInterval(\n      () => {\n        this.getUpdates(this.getLastActivityDate());\n      }, seconds\n    );\n  }\n\n  getLastActivityDate = () => {\n    return this.last_activity_date;\n  }\n\n  stopUpdatePoll = () => {\n    if (this.pollIntervalObj) {\n      clearTimeout(this.pollIntervalObj)\n    }\n  }\n}\nexport default new PollService();\n","import React from 'react';\r\nimport store from '../store';\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService';\r\nimport CashService from '../services/CashService';\r\n\r\nclass NotesService extends React.Component {\r\n\r\n  saveBookmark = function (personId) {\r\n    let bookmarks = CashService.getBookmarks();\r\n    if (bookmarks.indexOf(personId) !== -1) {\r\n      return;\r\n    }\r\n    bookmarks.push(personId);\r\n    CashService.persistBookmarks(bookmarks);\r\n  }\r\n\r\n  removeBookmark = function (personId) {\r\n    let bookmarks = CashService.getBookmarks();\r\n    for (let index = 0; index < bookmarks.length; index++) {\r\n      let oneFromArr = bookmarks[index];\r\n      if (!!personId && oneFromArr === personId) {\r\n        bookmarks.splice(index, 1);\r\n        CashService.persistBookmarks(bookmarks);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  saveAllByPhone = function (phone = CashService.getPhone()) {\r\n    CashService.persistAll(phone, CashService.cashStructureTemplate);\r\n  }\r\n\r\n  getOne = function (phone = CashService.getPhone()) {\r\n    let promise = AjaxService.doGet(Const.URLS.STORAGE + phone, {});\r\n\r\n    promise.then((data) => {\r\n      console.log(data);\r\n    }).catch((e) => {\r\n      console.error(e);\r\n    })\r\n  }\r\n\r\n  // delete = function (phone = CashService.getPhone()) {\r\n  //   let promise = AjaxService.doDelete(Const.URLS.STORAGE + phone, {});\r\n\r\n  //   promise.then((data) => {\r\n  //     console.log(data);\r\n  //   }).catch((e) => {\r\n  //     console.error(e);\r\n  //   })\r\n  // }\r\n\r\n}\r\nexport default new NotesService();","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div >\n        <h1>Welcome</h1>\n        <Link to=\"/phone\">  Login with phone</Link>\n        <p/>\n        <Link to=\"/phone-token\">  Login with phone and token</Link>\n      </div >\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport uuidv1 from 'uuid/v1';\nimport { Field, reduxForm } from 'redux-form'\nimport store from '../store'\nimport { Provider } from 'react-redux'\n\nconst eachComponent = ({ input, label, type, value, placeholder, meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input className='form-control' {...input} placeholder={placeholder} type={type} />\n      {touched && error && <span>{error}</span>}\n      <p />\n    </div>\n  </div>\n)\nlet randomizeName = (obj) => {\n  if (obj.noCash) { // prevent auto-suggest\n    obj.name = uuidv1();\n  }\n}\nclass RenderForm extends React.Component {\n\n  render() {\n    let { options } = this.props;\n    let handleSubmit = options.handleSubmit;\n    let fields = options.fields;\n\n    let RenderFieldWrapped = () => (\n      <div>\n        <form onSubmit={handleSubmit} >\n          {\n            fields.map(op => {\n              randomizeName(op)\n              return <div key={op.name}>\n                <Field name={op.name} onChange={op.onChange} component={eachComponent}\n                  type=\"input\" placeholder={op.placeholder} label={op.label} />\n                <p />\n              </div>\n            })\n          }\n          < input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n\n\n    let RenderFieldWrappedInstance = reduxForm({\n      form: 'RenderFieldWrapped'\n    })(RenderFieldWrapped);\n\n    return (\n      <div>\n        <Provider store={store}>\n          <RenderFieldWrappedInstance options={options} />\n        </Provider>\n      </div>\n    )\n  }\n}\nexport default RenderForm\n","import React from 'react';\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport CashService from '../services/CashService';\nimport PollService from '../services/PollService';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport RenderForm from '../building-blocks/RenderForm';\nimport { withRouter } from 'react-router-dom';\n\nclass PhoneForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: ''\n    };\n  }\n\n  handleChange = event => {\n    this.state.phone = event.target.value;\n  };\n\n  phoneNumAuth = function (phone) {\n    let promise = AjaxService.doPost(Const.URLS.AUTH.PHONE, {\n      'phone': phone\n    }, {});\n\n    promise.then(() => {\n      CashService.setPhone(phone);\n      this.props.history.push('/confirm-token');\n    }).catch((e) => {\n      CashService.setPhone(null);\n      console.error(e);\n    })\n  }\n\n  ifNotLogged = (phone) => {\n    CashService.setToken(null);\n    this.phoneNumAuth(phone);\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    let phone = this.state.phone;\n\n    let promise = CashService.loadAll(phone);\n    CashService.setPhone(phone);\n    promise.then((data) => {\n      console.log(data?.data);\n\n      let settings = data?.data?.settings;\n      if (settings) {\n        CashService.setSettings(settings);\n        AppSettingsService.applyDesignSettings();\n      }\n      let bookmarks = data?.data?.bookmarks;\n      if (bookmarks) {\n        CashService.setBookmarks(bookmarks);\n      }\n      let authToken = data?.data?.[Const.AUTH_HEADER_NAME]?.token;\n      this.processAuth(authToken, phone);\n    }).catch((e) => {\n      console.error(e);\n    })\n  }\n\n  processAuth = (authToken, phone) => {\n    if (authToken) {\n\n      let isToUseCurrent = window.confirm('A session with this phone numer: '\n        + phone + ' already exists.\\nUse current session?');\n\n      if (isToUseCurrent) {\n        console.log(\"use current session:\");\n        CashService.setToken(authToken);\n        PollService.checkIfLogged({},\n          () => { this.props.history.push('/user') },\n          () => { this.ifNotLogged(phone) });\n      } else {\n        this.phoneNumAuth(phone);\n      }\n\n    } else {\n      CashService.persistAll(phone, CashService.cashStructureTemplate);\n      this.phoneNumAuth(phone);\n    }\n  }\n\n  render() {\n    const optns = {\n      handleSubmit: this.handleSubmit,\n      fields: [\n        { name: 'Phone number', label: 'Phone number', \n        placeholder: 'Please, fill in ur phone number', \n        onChange: this.handleChange }\n      ]\n    }\n\n    return (\n      <div>\n        <RenderForm options={optns} />\n      </div >\n    )\n  }\n}\nexport default withRouter(PhoneForm);\n","import React from 'react';\nimport Const from '../services/Constants';\nimport CashService from '../services/CashService';\nimport PollService from '../services/PollService';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport RenderForm from '../building-blocks/RenderForm';\nimport { withRouter } from 'react-router-dom';\n\nclass PhoneToken extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      phone: '',\n      token: ''\n    };\n  }\n\n  handleChange = event => {\n    this.state.phone = event.target.value;\n  };\n\n  handleChangeToken = event => {\n    this.state.token = event.target.value;\n  };\n\n  doAuth = function (authToken, phone) {\n    let onSuccess = () => {\n      CashService.setToken(authToken);\n      CashService.persistToken(authToken);\n      this.props.history.push('/user');\n    }\n\n    let onFailure = () => {\n      window.alert('The provided token: ' + authToken\n      + ' is expired... phone: ' +phone);\n      this.props.history.push('/phone-token');\n    }\n\n    let headers = {\n      [Const.AUTH_HEADER_NAME] : authToken\n    }\n\n    PollService.checkIfLogged(headers, onSuccess, onFailure);\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    let phone = this.state.phone;\n    let authToken = this.state.token\n\n    let promise = CashService.loadAll(phone);\n    CashService.setPhone(phone);\n    promise.then((data) => {\n\n      let settings = data?.data?.settings;\n      if (settings) {\n        CashService.setSettings(settings);\n        AppSettingsService.applyDesignSettings();\n      }\n      let bookmarks = data?.data?.bookmarks;\n      if (bookmarks) {\n        CashService.setBookmarks(bookmarks);\n      }\n\n      this.doAuth(authToken, phone)\n\n    }).catch((e) => {\n      console.error(e);\n    })\n  }\n\n  render() {\n    const optns = {\n      handleSubmit: this.handleSubmit,\n      fields: [\n        { name: 'Phone number', label: 'Phone number', placeholder: 'phone number..', onChange: this.handleChange },\n        { name: 'X-token', label: 'X-token', placeholder: 'auth token..', noCash: true, onChange: this.handleChangeToken }\n      ]\n    }\n\n    return (\n      <div autoComplete=\"new-password\">\n        <RenderForm autoComplete=\"new-password\" options={optns} />\n      </div >\n    )\n  }\n}\nexport default withRouter(PhoneToken);\n","import React from 'react';\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport PollService from '../services/PollService';\nimport CashService from '../services/CashService';\nimport RenderForm from '../building-blocks/RenderForm';\nimport { withRouter } from 'react-router-dom';\n\nclass ConfirmCode extends React.Component {\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      confirmToken: ''\n    };\n  }\n\n  handleChange = event => {\n    this.state.confirmToken = event.target.value;\n    //this.setState({confirmToken: event.target.value});\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let phoneNumber = CashService.getPhone();\n    if (!phoneNumber) {\n      throw new Error(\"CashService[Const.PHONE_HEADER_NAME] is not allowed to be \" + phoneNumber);\n    }\n    let { history } = this.props;\n\n    let promise = AjaxService.doGet(Const.URLS.AUTH.GET_TOKEN + this.state.confirmToken + \"/\" + phoneNumber);\n\n    promise.then(function (value) {\n      console.log(value);\n      if (value && value.status === 200 && value.data) {\n        let token = value.data[Const.AUTH_HEADER_NAME];\n\n        let headers = {\n          [Const.AUTH_HEADER_NAME] : token\n        }\n\n        let onSuccess = function() {\n          CashService.setToken(token);\n          CashService.persistToken(token);\n          history.push('/user');\n        }\n\n        let onFailure = function() {\n          history.push('/phone');\n        }\n\n        PollService.checkIfLogged(headers, onSuccess, onFailure);\n      }\n    }).catch((e) => {\n      // delete cash[store.phoneNumber];\n      // delete store.phoneNumber;\n      // localStorage.setItem(cashVarName, JSON.stringify(cash));\n      console.log(e);\n    })\n\n  }\n\n  render() {\n    const optns = {\n      handleSubmit: this.handleSubmit,\n      fields: [\n        { name: 'Confirmation code', label: 'Confirmation code', placeholder: 'confirmation code...', \n        noCash: true, onChangeFun: this.handleChange }\n      ]\n    }\n    return (\n      <div >\n        <RenderForm options={optns} />\n      </div>\n    );\n  }\n}\nexport default withRouter(ConfirmCode)\n","import React from 'react';\n\nexport default class Checkbox extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      condition: props.condition\n    }\n\n    this.changeHandler = props.changeHandler;\n    this.defaultChecked = props.defaultChecked;\n    this.label = props.label;\n  }\n\n  doChangeState = (e) => {\n    this.changeHandler(e);\n    this.setState({\n      condition: e.target.checked\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"form-check\">\n        <input className=\"form-check-input\" type=\"checkbox\" checked={this.state.condition} onChange={this.doChangeState} /> \n        <label className=\"form-check-label\"> {this.label} </label>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nfunction Info(args) {\n  let { person } = args;\n  if (!person) {\n    return (\n      <div> </div>\n    )\n  }\n  let country = person.pos_info ? (person.pos_info.country ? person.pos_info.country.name : \"\") : \"\";\n  let age = person.birth_date ? person.birth_date.substring(0, 4) : \"\";\n  let city = person.pos_info ? (person.pos_info.city ? person.pos_info.city.name : \"\") : \"\";\n  person.jobs = person.jobs?.[0]?.title?.name || \"\";\n  person.schools = person.schools?.[0]?.name || \"\";\n  return (\n    <div className=\"text-justify text-wrap\">\n      {person.name ? (<div> <span className=\"font-weight-bold\">Name:  </span> {person.name} </div>) : null}\n      {person.birth_date ? (<div> <span className=\"font-weight-bold\">Date of Birth:  </span> {age} </div>) : null}\n      {person.distance_mi ? (<div> <span className=\"font-weight-bold\">Distance (miles):  </span> {person.distance_mi} </div>) : null}\n      {city ? (<div> <span className=\"font-weight-bold\">Location:  </span> {city}, {country}  </div>) : null}\n      {person.bio ? (<div> <span className=\"font-weight-bold\">Bio:  </span> {person.bio} </div>) : null}\n      {person.jobs ? (<div> <span className=\"font-weight-bold\">Job:  </span> {person.jobs} </div>) : null}\n      {person.schools ? (<div> <span className=\"font-weight-bold\">Schools:  </span> {person.schools} </div>) : null}\n    </div>\n  )\n}\n\nexport default Info;","import React from 'react';\nimport AppSettingsService from '../settings/AppSettingsService';\n\nclass PicWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    let { photos, name } = this.props;\n    this.personName = name;\n\n    this.isToShowPhotos = AppSettingsService.isToShowPhotos;\n    this.ind = 0;\n\n    let imgSrc = this.isToShowPhotos ? photos?.[this.ind]?.url : null;\n\n    this.state = {\n      photos: photos,\n      imgSrc: imgSrc\n    };\n  }\n\n   nextPic = () => {\n    if (!this.isToShowPhotos) {\n      return;\n    }\n    if (this.state.photos.length < 2) {\n      return;\n    }\n    if (this.ind < this.state.photos.length - 1) {\n      this.ind++;\n    } else {\n      this.ind = 0;\n    }\n    this.setState({\n      imgSrc: this.state.photos[this.ind].url\n    });\n  }\n\n  render() {\n    if (!this.state.imgSrc) {\n      return (\n        <div>\n        </div>\n      )\n    } else if (this.isToShowPhotos) {\n      return (\n        <div className=\"container-fluid px-0\">\n          <img onClick={this.nextPic} src={this.state.imgSrc} alt=\"some image\" className='img-fluid w-100' />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <label className=\"text-center\">{this.personName} </label>\n        </div>\n      );\n    }\n\n  }\n}\nexport default PicWrapper;\n","import React from 'react'\nimport AppSettingsService from '../settings/AppSettingsService';\n\nexport default class SelectDistanceFilter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      radius: props.initialRadius || 0\n    }\n    this.parentObject = props.parentObject;\n  }\n\n  changeHandler = (e) => {\n    this.parentObject.setState({ distanceFilter: e.target.value })\n  }\n\n  render() {\n    let cssClasses = AppSettingsService.getInputStyleClasses()\n    let optionTags = [];\n    for (let value = 1; value < 100; value++) {\n      optionTags.push(<option key={value} value={value}>{value}</option>)\n    }\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Distance filter (mi):</label>\n          <select\n            className={cssClasses}\n            value={this.state.radius}\n            onChange={this.changeHandler}>\n            {optionTags}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react'\nimport AppSettingsService from '../settings/AppSettingsService';\n\nexport default class SelectMinAgeFilter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ageFilterMin: props.ageFilterMin || 18\n    }\n    this.parentObject = props.parentObject;\n  }\n\n  changeHandler = (e) => {\n    console.log(e.target.value)\n    let int = parseInt(e.target.value)\n    this.parentObject.changeState({ ageFilterMin: int })\n  }\n\n  render() {\n    let cssClasses = AppSettingsService.getInputStyleClasses()\n    let optionTags = [];\n    for (let value = 18; value < 50; value++) {\n      optionTags.push(<option key={value} value={value}>{value}</option>);\n    }\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Min age:</label>\n          <select\n            className={cssClasses}\n            value={this.state.ageFilterMin}\n            onChange={this.changeHandler}>\n            {optionTags}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react'\nimport AppSettingsService from '../settings/AppSettingsService';\n\nexport default class SelectMaxAgeFilter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ageFilterMax: props.ageFilterMax || 1000\n    }\n    this.parentObject = props.parentObject;\n  }\n\n  changeHandler = (e) => {\n    console.log(e.target.value)\n    let int = parseInt(e.target.value)\n    this.parentObject.changeState({ ageFilterMax: int })\n  }\n\n  render() {\n    let cssClasses = AppSettingsService.getInputStyleClasses()\n    let optionTags = [];\n    for (let value = 18; value < 55; value++) {\n      optionTags.push(<option key={value} value={value}>{value}</option>);\n    }\n    optionTags.push(<option key={1000} value={1000}>{\"55+\"}</option>);\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Maximal age:</label>\n          <select\n            className={cssClasses}\n            value={this.state.ageFilterMax}\n            onChange={this.changeHandler}>\n            {optionTags}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectPollInterval extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      interval: AppSettingsService.updatePollInterval\n    }\n  }\n\n  changeHandler = (e) => {\n    this.setState({\n      interval: e.target.value\n    })\n    AppSettingsService.updatePollInterval = e.target.value;\n    this.props.onSelectPollInterval(e.target.value);\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Poll interval for getting updates to be every:</label>\n          <select\n            className={this.props.styles}\n            value={this.state.interval}\n            onChange={this.changeHandler}>\n            <option value=\"10000\">10 sec</option>\n            <option value=\"20000\">20 sec</option>\n            <option value=\"40000\">40 sec</option>\n            <option value=\"50000\">50 sec</option>\n            <option value=\"60000\">1 min</option>\n            <option value=\"300000\">5 min</option>\n            <option value=\"600000\">10 min</option>\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectTextColor extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: AppSettingsService.getSetting(\"textColor\") || AppSettingsService.textColors[0]\n    }\n  }\n\n  changeHandler = (event) => {\n    let color = event.target.value;\n\n    AppSettingsService.applyClass(document.body, AppSettingsService.textColors, color);\n    AppSettingsService.persistSetting(\"textColor\", color);\n\n    this.setState({\n      selected: color\n    })\n    this.props.triggerRender();\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Select text color:</label>\n          <select\n            className={this.props.styles}\n            value={this.state.selected}\n            onChange={this.changeHandler}>\n            {AppSettingsService.textColors.map(\n              (color) => {\n                return (<option key={color.name} value={color.class}>{color.name}</option>);\n              }\n            )}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}","import React, { Component } from 'react';\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectBackgroundColor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: AppSettingsService.getSetting(\"bgColor\") || AppSettingsService.bgColors[0]\n    }\n  }\n\n  changeHandler = (event) => {\n    let color = event.target.value;\n\n    AppSettingsService.applyClass(document.body, AppSettingsService.bgColors, color);\n    AppSettingsService.persistSetting(\"bgColor\", color);\n\n    this.setState({\n      selected: color\n    })\n    this.props.triggerRender();\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Select background color:</label>\n          <select className={this.props.styles}\n            value={this.state.selected}\n            onChange={this.changeHandler}>\n            {AppSettingsService.bgColors.map(\n              (color) => {\n                return (<option key={color.name} value={color.class}>{color.name}</option>);\n              }\n            )}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport LocationPicker from \"react-leaflet-location-picker\";\nimport { withRouter } from 'react-router-dom'\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport Checkbox from '../settings/Checkbox';\nimport Info from \"../building-blocks/Info\";\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport AjaxService from '../services/AjaxService';\nimport store from '../store';\nimport Const from '../services/Constants';\nimport SelectDistanceFilter from './SelectDistanceFilter';\nimport SelectMinAgeFilter from './SelectMinAgeFilter';\nimport SelectMaxAgeFilter from './SelectMaxAgeFilter';\n\n\nimport PollService from '../services/PollService';\n\nimport SelectPollInterval from '../settings/SelectPollInterval';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport SelectTextColor from '../settings/SelectTextColor';\nimport SelectBackgroundColor from '../settings/SelectBackgroundColor';\n\n\nclass UserView extends React.Component {\n  constructor(props) {\n    super(props);\n\n\n\n    this.state = {\n      styles: AppSettingsService.getInputStyleClasses(),\n      isToShowPhotos: AppSettingsService.isToShowPhotos,\n\n      profile: this.props?.data?.profile?.data,\n      hits: [],\n      error: null,\n      distanceFilter: null,\n      ageFilterMax: null,\n      ageFilterMin: null,\n      discoverable: false,\n      isButtonDisabled: false\n    };\n    //this.isButtonDisabled = false;\n    this.isLoading = false;\n  }\n\n  saveProfile = () => {\n    let data = {\n      age_filter_max: this.state.ageFilterMax,\n      age_filter_min: this.state.ageFilterMin,\n      distance_filter: this.state.distanceFilter,\n      discoverable: this.state.discoverable\n    }\n    AjaxService.doPost(Const.URLS.PROFILE, data, {})\n  }\n\n  disableSaveButton = () => {\n    if (this.state.ageFilterMax < this.state.ageFilterMin) {\n      this.setState({ isButtonDisabled: true })\n      return;\n    }\n    this.setState({ isButtonDisabled: false })\n  }\n\n  getProfile = () => {\n    this.isLoading = true\n    let promise = AjaxService.doGet(Const.URLS.PROFILE, {})\n    promise.then((data) => {\n      if (!data?.data) return;\n\n      store.addToStore('profile', data);\n      this.setState({\n        distanceFilter: data.data.distance_filter,\n        ageFilterMax: data.data.age_filter_max,\n        ageFilterMin: data.data.age_filter_min,\n        discoverable: data.data.discoverable,\n        profile: data.data\n      }, () => { this.isLoading = false })\n    }).catch((e) => {\n      console.error(e);\n      this.isLoading = false\n    })\n  }\n\n  componentWillMount() {\n    if (this.isLoading) {\n      return;\n    }\n    this.getProfile();\n  }\n\n  changeState = (obj) => {\n    this.setState(obj, () => { this.disableSaveButton() });\n  }\n\n  toggleShowProfile = (event) => {\n    this.setState({\n      discoverable: event?.target?.checked\n    })\n  }\n\n  onSelectPollInterval = (val) => {\n    PollService.startUpdatePoll(val);\n    this.setState({\n      pollInterval: val\n    })\n  }\n\n  triggerRender = () => {\n    this.setState({\n      styles: AppSettingsService.getInputStyleClasses()\n    })\n  }\n\n  toggleShowPicsCheckbox = (event) => {\n    AppSettingsService.isToShowPhotos = event.target.checked;\n    this.setState({\n      isToShowPhotos: AppSettingsService.isToShowPhotos\n    })\n  }\n\n  render() {\n    var profile = this.state?.profile\n    if (!profile) {\n      return (\n        <div></div>\n      )\n    }\n\n    let pos = profile?.pos ? [profile?.pos?.lat, profile?.pos?.lon] : [0, 0];\n\n    let postLocation = (args) => {\n      let newMsgObj = {\n        lat: args[0],\n        lon: args[1]\n      }\n      AjaxService.doPost(Const.URLS.SEND_LOCATION, newMsgObj, {})\n    }\n\n    let UserData = () => {\n      return (\n        <div>\n          <Info person={profile} />\n          <br />\n          <SelectDistanceFilter initialRadius={this.state.distanceFilter} parentObject={this} />\n          <SelectMinAgeFilter ageFilterMin={this.state.ageFilterMin} parentObject={this} />\n          <SelectMaxAgeFilter ageFilterMax={this.state.ageFilterMax} parentObject={this} />\n          <Checkbox label=\"public profile\" condition={this.state.discoverable} changeHandler={this.toggleShowProfile} />\n          <br />\n          <button type=\"button\" className=\"btn btn-primary\" disabled={this.state.isButtonDisabled} onClick={this.saveProfile}> Save </button>\n          <br />\n          <br />\n          <div>\n            <p />\n            <p />\n            <SelectPollInterval styles={this.state.styles} onSelectPollInterval={this.onSelectPollInterval} />\n            <SelectBackgroundColor styles={this.state.styles} triggerRender={this.triggerRender} />\n            <SelectTextColor styles={this.state.styles} triggerRender={this.triggerRender} />\n            <Checkbox label=\"show photos\" condition={this.state.isToShowPhotos} changeHandler={this.toggleShowPicsCheckbox} />\n          </div>\n        </div>\n      )\n    }\n\n    let person = [{\n      image: (<PicWrapper photos={profile.photos} name={profile.name} />),\n      info: (<UserData />)\n    }]\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    let pointVals = [pos];\n    const pointMode = {\n      banner: false,\n      control: {\n        values: pointVals,\n        onClick: point => {\n          pointVals = [point]\n          pointMode.control.values = [point];\n          postLocation(point);\n        },\n        //  onRemove: point => { }\n      }\n    };\n\n    const options = {\n      bindMap: true,\n      startPort: \"default\",\n      overlayAll: true,\n      showControls: false,\n      showInputs: false,\n      useDynamic: true,\n      pointMode: pointMode,\n      precision: 6\n    };\n\n    return (\n      <div>\n        <ReactTable\n          data={person}\n          columns={present}\n          sortable={false}\n          defaultPageSize={1}\n          showPagination={false}\n        />\n        <br />\n        <LocationPicker {...options} />\n        <br />\n        <span className=\"float-right\"> ver: {Const.VERSION}</span>\n        <br />\n        <p />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(UserView);","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\n\nclass MatchDecoratorService extends React.Component {\n\n  getUserData = (match, callbackFunc) => {\n    console.log(match);\n    \n    let userId = match?.person?._id;\n    let person = match.person || {};\n    let promise = AjaxService.doGet(Const.URLS.USER + userId, {});\n    promise.then((data) => {\n\n      let user = data?.data?.results;\n      match.user = user;\n      \n      person.distance_mi = user?.distance_mi;\n      person.name = user?.name || person?.name\n      person.birth_date = user?.birth_date || person?.birth_date\n      person.bio = user?.bio || person?.bio\n      person.jobs = user?.jobs || person.jobs\n      person.schools = user?.schools || person.schools\n      let posInfo = {city:{name: user?.city?.name }, \n          country:{name: user?.city?.region }};\n      person.pos_info = person?.pos_info || posInfo;\n\n      callbackFunc(match);\n    }).catch((e) => {\n      console.error(e);\n      person.error = e\n      callbackFunc(match);\n    })\n  }\n\n}\nexport default new MatchDecoratorService();\n","import React from 'react';\n\nclass OnePicWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgSrc: props.src\n    };\n    this.condition = props.condition;\n    this.changeHandler = props.changeHandler;\n    this.match = props.match;\n  }\n\n  componentWillUnmount() {\n  }\n  componentDidMount() {\n  }\n\n  doClick = (e) => {\n    this.changeHandler(e, this.match);\n  }\n\n  render() {\n    if (this.condition) {\n      return (\n        <div className=\"container-fluid px-0\">\n          <img onClick={this.doClick} src={this.state.imgSrc} alt=\"new\" className='img-fluid w-100' />\n        </div>\n      );\n    } else {\n      return (\n        <div onClick={this.doClick}>\n          <label className=\"text-center\">{this.match.person.name}</label>\n        </div>\n      );\n    }\n\n  }\n}\nexport default OnePicWrapper;\n","import React from 'react';\nimport store from '../store';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport MatchDecoratorService from '../services/MatchDecoratorService';\nimport \"react-table/react-table.css\";\nimport OnePicWrapper from '../building-blocks/OnePicWrapper';\nimport ReactTable from \"react-table\";\nimport { withRouter } from 'react-router-dom';\n\nclass Friends extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showUser: false,\n      isVisible: false,\n      msgMatches: [],\n      sortingFunc: this.sortByLastActivityDate\n    };\n  }\n\n  sortByLastActivityDate = (a, b) => {\n    let timeA = new Date(a.last_activity_date).getTime();\n    let timeB = new Date(b.last_activity_date).getTime();\n    return timeB - timeA;\n  }\n\n  applySorting = (arrToBeSorted, sortingFunc) => {\n    try {\n      arrToBeSorted.sort(sortingFunc);\n    } catch (e) {\n      console.error(e);\n    }\n    return arrToBeSorted;\n  }\n\n  getUserData = (event, match) => {\n    let clBack = (match) => {\n      this.props.history.push({\n        pathname: '/friend',\n        state: { args: match }\n      })\n    }\n    MatchDecoratorService.getUserData(match, clBack);\n  }\n\n  render() {\n    let dt = store.getStore();\n\n    let friends = dt.update.data.matches;\n\n    this.applySorting(friends, this.state.sortingFunc);\n\n    let persons = friends.map(match => {\n      let prsn = match.person\n      let obj;\n      if (prsn) {\n        let picProps = {\n          condition: AppSettingsService.isToShowPhotos,\n          src: prsn.photos[0].url,\n          match: match,\n          changeHandler: this.getUserData\n        }\n      obj = {\n        firstName: prsn.name,\n        lastName: prsn.birth_date,\n        image: (<OnePicWrapper { ...picProps}/>)\n      }\n    }\n      return { ...obj };\n    });\n\n    const present = [\n      {\n        columns: [\n          {\n            Header: \"Image\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"First Name\",\n            accessor: \"firstName\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            sortable={false}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Friends);","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types'\r\n\r\nBtnLink.propTypes = {\r\n    label: PropTypes.string,\r\n    data: PropTypes.object,\r\n    pathname: PropTypes.string\r\n};\r\n\r\nfunction BtnLink(props) {\r\n    return (\r\n        <div>\r\n            <Link to={{ pathname: props.pathname, state: { data: props.data } }}>\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                    {props.label}\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BtnLink\r\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport BtnLink from \"../building-blocks/BtnLink\";\nimport Info from \"../building-blocks/Info\";\nimport NotesService from '../notes/NotesService';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport CashService from '../services/CashService';\nimport AjaxService from '../services/AjaxService';\nimport Const from '../services/Constants';\n\nclass OneFriend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.allBookmarks = null;\n  }\n\n  remove = (userId) => {\n    NotesService.removeBookmark(userId);\n  }\n\n  save = (userId) => {\n    NotesService.saveBookmark(userId);\n  }\n\n  deleteMatch = (matchId) => {\n    AjaxService.doDelete(Const.URLS.MATCH + matchId, {});\n  }\n\n  isBookmarked = (userId) => {\n    return this.allBookmarks[userId] !== undefined && this.allBookmarks[userId] !== null;\n  }\n\n  render() {\n    let { args } = this.props.location.state;\n    console.log(args);\n\n    this.allBookmarks = CashService.getBookmarksAsObject();\n    let InfoWithButton = () => (\n      <div>\n        <BtnLink label=\" ✍️ \" data={args} pathname=\"/chat\" />\n        <div className=\"mt-1\">\n          {!this.isBookmarked(args.person._id) ? <button type=\"button\" className=\"btn btn-success\"\n            onClick={() => this.save(args.person._id)}> <span>&#9734;</span> </button> : null}\n\n          {this.isBookmarked(args.person._id) ? <button type=\"button\" className=\"btn btn-danger\"\n            onClick={() => this.remove(args.person._id)}> <span>&#9734;</span></button> : null}\n\n          <button type=\"button\" className=\"btn btn-danger ml-2 float-right\" onClick={() => this.deleteMatch(args.id)}> ✖️ </button>\n        </div>\n        <Info person={args.person} />\n      </div>\n    )\n    let person = [{\n      image: (<PicWrapper photos={args.person.photos} name={args.person.name} />),\n      info: (<InfoWithButton />)\n    }]\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable\n            data={person}\n            columns={present}\n            sortable={false}\n            defaultPageSize={1}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default OneFriend;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport AjaxService from '../services/AjaxService';\nimport NotesService from '../notes/NotesService';\nimport CashService from '../services/CashService';\nimport Const from '../services/Constants';\nimport BeanContextAware from '../services/BeanContextAware';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport BtnLink from \"../building-blocks/BtnLink\";\nimport Info from \"../building-blocks/Info\";\n\nclass MoreFriends extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      beanId: props.beanId,\n      allFr: []\n    };\n\n    this.isMountedOk = true;\n    this.allBookmarks = null;\n  }\n\n  getBookmarksAsObject = () => {\n    this.allBookmarks = CashService.getBookmarksAsObject();\n  }\n\n  componentDidMount() {\n    BeanContextAware.add(this);\n    this.getNewFriends(this.getBookmarksAsObject);\n    this.isMountedOk = true;\n    let header = BeanContextAware.get('header1');\n    if (header) {\n      header.showMoreFriendsRefreshButton()\n    }\n  }\n\n  componentWillUnmount() {\n    BeanContextAware.remove(this);\n    this.isMountedOk = false;\n    let header = BeanContextAware.get('header1');\n    if (header) {\n      header.hideMoreFriendsRefreshButton()\n    }\n  }\n\n  getNewFriends = (callBack) => {\n    let promise = AjaxService.doGet(Const.URLS.NEW_FRIENDS, {})\n    promise.then((data) => {\n      let allFr = data?.data?.results;\n      if (!this.isMountedOk) {\n        return;\n      }\n      callBack()\n      this.setState({ allFr: allFr });\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  pass = (userId) => {\n    let promise = AjaxService.doGet(Const.URLS.PASS + userId, {})\n    promise.then((data) => {\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  like = (userId) => {\n    let promise = AjaxService.doGet(Const.URLS.LIKE + userId, {})\n    promise.then((data) => {\n      console.log(data);\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  isBookmarked = (userId) => {\n    return this.allBookmarks[userId] !== undefined && this.allBookmarks[userId] !== null;\n  }\n\n  render() {\n    let InfoWrapper = (args) => {\n      let { person } = args;\n      let isBookmarked = this.isBookmarked(person?._id);\n      return (\n        <div className=\"text-justify text-wrap\">\n          <div>\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => this.like(person._id)}> 👍 </button>\n            <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.pass(person._id)}> 👎 </button>\n\n            {!isBookmarked ? <button type=\"button\" className=\"btn btn-primary float-right ml-1\"\n              onClick={() => NotesService.saveBookmark(person?._id)}> 📑 </button> : null}\n            {isBookmarked ? <button type=\"button\" className=\"btn btn-danger float-right ml-1\"\n              onClick={() => NotesService.removeBookmark(person?._id)}> 📑 </button> : null}\n          </div>\n          <Info person={person} />\n        </div>\n      )\n    }\n\n    let Pic = args => (<PicWrapper photos={args.photos} name={args.name} />)\n\n    let allFr = this.state.allFr;\n\n    let persons = allFr.map(one => {\n      let obj = {\n        info: (<InfoWrapper person={one} />),\n        image: (<Pic photos={one.photos} name={one.name} />)\n      }\n      return { ...obj };\n    });\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            sortable={false}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\nexport default MoreFriends;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport AjaxService from '../services/AjaxService'\nimport Const from '../services/Constants';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\n\nclass FriendRequests extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allFr: [],\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n    this.isMountedOk = true;\n  }\n\n  componentDidMount() {\n    this.isMountedOk = true;\n    this.getFriendRequests();\n  }\n\n  componentWillUnmount() {\n    this.isMountedOk = false;\n  }\n\n  getFriendRequests = () => {\n    let promise = AjaxService.doGet(Const.URLS.FAST_MATCH, {})\n    promise.then((data) => {\n      if (!this.isMountedOk || !data?.data?.data?.results) {\n        return;\n      }\nconsole.log(data.data)\n      this.setState({\n        allFr: data.data.data.results\n      })\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  render() {\n    let Info = args => <div className=\"text-justify text-wrap\"> {args.info} </div>;\n    let Pic = args => (<PicWrapper photos={args.photos} />);\n\n    let allFr = this.state.allFr;\n\n    let persons = allFr.map(one => {\n      let isActiveRecently = one?.user?.recently_active ? \"🕐\" : \"\"\n      console.log(isActiveRecently);\n      let obj = {\n        info: (<Info info={isActiveRecently} />),\n        image: (<Pic photos={one.user.photos} />)\n      }\n      return { ...obj };\n    });\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n           {\n             Header: \"Recently Active\",\n             accessor: \"info\"\n           }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div className=\"text-center p-1 \">\n        </div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            sortable={false}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            showPagination={false}\n            style={{\n              width: '100%',\n              height: '30%',\n            }}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\nexport default FriendRequests;","import React from 'react';\r\nimport PollService from '../services/PollService';\r\nimport Const from '../services/Constants';\r\nimport SelectPollInterval from './SelectPollInterval';\r\nimport AppSettingsService from './AppSettingsService';\r\nimport SelectTextColor from './SelectTextColor';\r\nimport SelectBackgroundColor from './SelectBackgroundColor';\r\nimport Checkbox from './Checkbox';\r\n\r\nclass AppSettings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      styles: AppSettingsService.getInputStyleClasses(),\r\n      isToShowPhotos: AppSettingsService.isToShowPhotos\r\n    };\r\n  }\r\n\r\n  onSelectPollInterval = (val) => {\r\n    PollService.startUpdatePoll(val);\r\n    this.setState({\r\n      pollInterval: val\r\n    })\r\n  }\r\n\r\n  triggerRender = () => {\r\n    this.setState({\r\n      styles: AppSettingsService.getInputStyleClasses()\r\n    })\r\n  }\r\n\r\n  toggleShowPicsCheckbox = (event) => { \r\n    AppSettingsService.isToShowPhotos = event.target.checked;\r\n    this.setState({\r\n      isToShowPhotos: AppSettingsService.isToShowPhotos\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <span className=\"float-right\"> ver: {Const.VERSION}</span> \r\n        <p/>\r\n        <SelectPollInterval styles={this.state.styles} onSelectPollInterval={this.onSelectPollInterval} />\r\n        <SelectBackgroundColor styles={this.state.styles} triggerRender={this.triggerRender} />\r\n        <SelectTextColor styles={this.state.styles} triggerRender={this.triggerRender} />\r\n        <Checkbox label=\"show photos\" condition={this.state.isToShowPhotos} changeHandler={this.toggleShowPicsCheckbox} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default AppSettings;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport BeanContextAware from '../services/BeanContextAware';\nimport CashService from '../services/CashService';\n//import Const from '../services/Constants'\nimport store from '../store';\nimport MatchDecoratorService from '../services/MatchDecoratorService';\nimport { withRouter } from 'react-router-dom';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      beanId: props.beanId,\n      showUser: false,\n      isVisible: false,\n      isVisibleMoreFriendsTab: false,\n      msgMatches: []\n    };\n    this.initialTitle = document.title;\n  }\n\n  changeState = (obj) => {\n    this.setState(obj);\n  }\n\n  addMsgMatch = (mtch) => {\n    var pos = this.findInMsgMatches(mtch);\n    if (pos > -1) { // if found - do not add it again\n      return;\n    }\n    let msgMatches = this.state.msgMatches;\n    this.state.msgMatches.push(mtch);\n    this.setState({\n      msgMatches: msgMatches\n    })\n    this.toggleFlashTabTitle();\n  }\n\n  findInMsgMatches = (mtch) => {\n    let msgMatches = this.state.msgMatches\n    for (var i = 0, len = msgMatches.length; i < len; i++) {\n      if (msgMatches[i].id === mtch.id)\n        return i;\n    }\n    return -1;\n  }\n\n  removeMsgMatch = (mtch) => {\n    var pos = this.findInMsgMatches(mtch);\n    if (pos > -1) {\n      let msgMatches = this.state.msgMatches\n      msgMatches.splice(pos, 1);\n      this.setState(\n        { msgMatches: msgMatches },\n        () => this.toggleFlashTabTitle()\n      )\n    }\n  }\n\n  showMoreFriendsRefreshButton = () => {\n    this.setState({isVisibleMoreFriendsTab:true});\n  }\n\n  hideMoreFriendsRefreshButton = () => {\n    this.setState({isVisibleMoreFriendsTab:false});\n  }\n\n  changeButtonVisibility = (obj) => {\n    this.setState(obj);\n  }\n\n  componentDidMount() {\n    BeanContextAware.add(this);\n  }\n\n  componentWillUnmount() {\n    BeanContextAware.remove(this);\n  }\n\n  toggleFlashTabTitle = () => {\n    if (this.state.msgMatches.length > 0 && !this.flashIntervalObj) {\n      this.startFlashTabTitle();\n    } else if (this.state.msgMatches.length === 0) {\n      this.stopFlashTabTitle();\n    }\n  }\n\n  startFlashTabTitle = () => {\n    this.flashIntervalObj = setInterval(\n      () => {\n        if (this.initialTitle === document.title) {\n          document.title = \"(\" + this.state.msgMatches.length + \") \" + this.initialTitle;\n        } else {\n          document.title = this.initialTitle;\n        }\n      }, 800\n    );\n  }\n\n  stopFlashTabTitle = () => {\n    clearTimeout(this.flashIntervalObj);\n    this.flashIntervalObj = null;\n    document.title = this.initialTitle;\n  }\n\n  getUserData = (match) => {\n    let clBack = (match) => {\n      this.props.history.push({\n        pathname: '/friend',\n        state: { args: match }\n      })\n    }\n    MatchDecoratorService.getUserData(match, clBack);\n  }\n\n  goChat = (match) => {\n    this.props.history.push({\n      pathname: '/chat',\n      state: { data: match }\n    })\n  }\n\n  getNewFriends = () => {\n    let moreFriends1 = BeanContextAware.get('moreFriends1');\n    if (this.state.isVisible && moreFriends1?.isMountedOk) {\n      moreFriends1.getNewFriends(moreFriends1.getBookmarksAsObject)\n    }\n  }\n\n  render() {\n    let Btn = (props) => (\n      <div>\n        <NavLink exact activeClassName=\"active\" to={props.to}>\n          <button type=\"button\" className=\"btn btn-primary\">\n            {props.label}\n          </button>\n        </NavLink>\n      </div>\n    )\n    let isVisibleNewMsgs = this.state.msgMatches.length ? true : false;\n\n    let BtnBadge = (props) => {\n      let mtch = props.data;\n      if (!mtch.messages || mtch.messages.length === 0) {\n        return (\n          <div>\n            <button onClick={() => { this.removeMsgMatch(mtch); this.getUserData(mtch) }} className=\"btn btn-primary\" >\n            💌 {this.state.msgMatches.length} </button>\n          </div>\n        )\n      } else {\n        return (\n          <div>\n            <button onClick={() => this.goChat(mtch)} className=\"btn btn-primary\" >\n            💌 {this.state.msgMatches.length} </button>\n          </div>\n        )\n      }\n    }\n    let localUser = store?.profile?.data;\n    return (\n      <nav>\n        <div className=\"text-center\">\n          {this.state.isVisible ? <span className=\"float-left\"> {CashService.getPhone()} </span> : null}\n          <div className=\"btn-group\">\n            {false ? <Btn to=\"/home\" label=\"🏠\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/user\" label=\"👦\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/pals\" label=\"🤝\" /> : null}\n            {this.state.isVisible ? (this.state.isVisibleMoreFriendsTab ?\n                      <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.getNewFriends()}> 🌍 </button> : \n                                  <Btn to=\"/more-pals\" label=\" 🌍 \" />) : null}\n            {this.state.isVisible ? <Btn to=\"/pal-requests\" label=\"👋\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/notes\" label=\"📑\" /> : null}\n            {(!this.state.isVisible && !!localUser)? <Btn to=\"/settings\" label=\"🛠️\" /> : null}\n            {false ? <Btn to=\"/logout\" label=\"|->\" /> : null}\n            {(this.state.isVisible && isVisibleNewMsgs) ? <BtnBadge data={this.state.msgMatches[0]} /> : null}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(Header);///  {this.state.isVisible ? <Btn to=\"/more-pals\" label=\"🌍\" /> : null} this.getNewFriends(this.getBookmarksAsObject);       <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.getNewFriends(this.getBookmarksAsObject)}> 🔃 </button>","import React from 'react';\r\nimport store from '../store'\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService';\r\nimport AppSettingsService from '../settings/AppSettingsService';\r\n\r\nclass EnterText extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: '',\r\n            store: props.data,\r\n            friendId: props.friendId,\r\n            triggerRenderFunc: props.triggerRenderFunc\r\n        }\r\n        this.getStyles = AppSettingsService.getInputStyleClasses;\r\n        const dummyEmojiInjector = (msg) => { return msg;}\r\n        this.injectEmoji = props.emojiInjectorFunc || dummyEmojiInjector;\r\n    }\r\n\r\n    createMessage = (match, store) => {\r\n        var dt = new Date();\r\n        return {\r\n            created_date: dt.toISOString(),\r\n            from: store.profile.data._id,\r\n            match_id: match.id,\r\n            message: this.state.value,\r\n            sent_date: dt.toISOString(),\r\n            timestamp: dt.getTime(),\r\n            to: match.person._id\r\n        }\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.key !== 'Enter') {\r\n            return;\r\n        }\r\n\r\n        let matches = store?.update?.data?.matches || [];\r\n        for (let i = 0; i < matches.length; i++) {\r\n            const oneMatch = matches[i];\r\n\r\n            if (oneMatch.person._id === this.state.friendId) {\r\n                let newMsgObj = this.createMessage(oneMatch, this.state.store);\r\n                this.injectEmoji(newMsgObj);\r\n                AjaxService.doPost(Const.URLS.SEND_MESSAGE, newMsgObj, {});\r\n                matches[i].messages.push(newMsgObj);\r\n                this.state.triggerRenderFunc();\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ value: '' });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        var elem = e.srcElement || e.target;\r\n        this.setState({ value: elem.value })\r\n    }\r\n\r\n    render() {\r\n        let inputProps = {\r\n            placeholder: 'Write...',\r\n            value: this.state.value,\r\n            onChange: this.onChange,\r\n            className: this.getStyles(),\r\n            onKeyPress: this.onKeyPress\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <input {...inputProps} type=\"text\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EnterText;\r\n","import React from 'react';\r\n\r\nclass MessageWrapper extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      let { msg } = this.props;\r\n      let msgDateObj = new Date(msg.timestamp);\r\n\r\n      let timeStr = msgDateObj.toLocaleTimeString();\r\n      let dateStr = msgDateObj.toLocaleDateString()\r\n      if (dateStr !== new Date().toLocaleDateString()) {\r\n        timeStr = timeStr + \",  \" + dateStr;\r\n      }\r\n\r\n      this.state = {\r\n          isSeen: msg.isSeen,\r\n          showDate: false,\r\n          date: timeStr\r\n      };\r\n    }\r\n\r\n    render() {\r\n        let { msg } = this.props;\r\n\r\n        let showHideDate = () => {\r\n            this.setState({ showDate: true });\r\n            setTimeout(\r\n                () => {\r\n                    this.setState({ showDate: false });\r\n                }, 5000);\r\n        }\r\n\r\n        return (\r\n            <div onClick={showHideDate}>\r\n                <p className=\"text-justify text-wrap\" >  {msg.message} </p>\r\n                {this.state.isSeen ? (<span className=\"badge badge-secondary text-justify text-wrap\">seen</span>) : null}\r\n                {this.state.showDate ? (<span className=\"badge small\" >  {this.state.date} </span>) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MessageWrapper;\r\n","import React, { Component } from 'react'\nimport BeanContextAware from '../services/BeanContextAware'\n\nexport default class Select extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      numberMsgShown: 10,\n      getStyles: props.getStyles\n    }\n  }\n\n  changeHandler = (e) => {\n    let chat1 = BeanContextAware.get('chat1');\n      this.setState({\n        numberMsgShown: e.target.value\n      })\n      if (chat1) {\n        chat1.changeState({ numberMsgShown: parseInt(e.target.value)});\n      }\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Number of messages to show:</label>\n          <select\n            className={this.state.getStyles()}\n            value={this.state.numberMsgShown}\n            onChange={this.changeHandler}>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n            <option value=\"50\">50</option>\n            <option value=\"70\">70</option>\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","\r\nconst emojis = [\r\n    {text:':)', face:'😃'},\r\n    {text:';)', face:'😉'},\r\n    {text:':(', face:'😞'},\r\n    {text:':*', face:'😘'},\r\n    {text:':P', face:'😛'},{text:':p', face:'😛'},{text:':П', face:'😛'},{text:':п', face:'😛'},\r\n    {text:':D', face:'😀'},{text:':Д', face:'😀'},{text:':д', face:'😀'}\r\n];\r\n\r\nexport const injectEmojiFunction = (msg) => {\r\n    if (!msg?.message) {\r\n        return msg;\r\n    }\r\n \r\n    for (let i = 0; i < emojis.length; i++) {\r\n        let emo = emojis[i];\r\n        let foundAt = msg.message.indexOf(emo.text);\r\n        while (foundAt > -1) {\r\n            msg.message = msg.message.replace(emo.text, emo.face);\r\n            foundAt = msg.message.indexOf(emo.text);\r\n        }\r\n    }\r\n    return msg;\r\n}\r\n","import React from 'react';\r\nimport ReactTable from \"react-table\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport store from '../store'\r\nimport EnterText from './enterText'\r\nimport MessageWrapper from './messageWrapper'\r\nimport BeanContextAware from '../services/BeanContextAware'\r\nimport Select from './Select'\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService'\r\nimport AppSettingsService from '../settings/AppSettingsService';\r\nimport { injectEmojiFunction } from './CyrilicEmojiStrategy';\r\n\r\nclass Chat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    let match = props.location.state.data;\r\n    let friendId = match.person._id;\r\n    let lastSeenMsg = match.seen ? match.seen.last_seen_msg_id : null;\r\n    this.state = {\r\n      lastSeenMsg: lastSeenMsg,\r\n      numberMsgShown: 10,\r\n      matchId: match.id,\r\n      store: store,\r\n      match: match,\r\n      friendId: friendId,\r\n      messages: match.messages\r\n    };\r\n    this.inputStyles = AppSettingsService.getInputStyleClasses;\r\n    this.isOnFocus = true;\r\n    this.isMountedOk = true;\r\n  }\r\n\r\n  onFocus = (ev) => {\r\n    this.isOnFocus = true;\r\n    this.deleteFromHeader();\r\n  }\r\n\r\n  onBlur = (ev) => {\r\n    this.isOnFocus = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    BeanContextAware.add(this);\r\n    window.addEventListener(\"focus\", this.onFocus);\r\n    window.addEventListener(\"blur\", this.onBlur);\r\n    this.isMountedOk = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    BeanContextAware.remove(this);\r\n    window.removeEventListener(\"focus\", this.onFocus);\r\n    window.removeEventListener(\"blur\", this.onBlur);\r\n    this.isMountedOk = false;\r\n  }\r\n\r\n  prepareMessages = (allMsgs, friendId, numberMsgShown) => {\r\n    let result = [];\r\n    result.length = numberMsgShown;\r\n\r\n    for (let ind = allMsgs.length - 1; 0 <= numberMsgShown; numberMsgShown-- , ind--) {\r\n\r\n      let msg = allMsgs[ind];\r\n\r\n      if (!msg) {\r\n        msg = {};\r\n      }\r\n\r\n      let transformedMsg = {};\r\n      result[numberMsgShown] = transformedMsg;\r\n\r\n      if (msg.from === friendId) {\r\n        transformedMsg.theirs = (<MessageWrapper msg={msg} />);\r\n      }\r\n      else {\r\n        transformedMsg.mine = (<MessageWrapper msg={msg} />);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  //call it to start render() in order to visualize the change\r\n  triggerRenderFunc = () => {\r\n    let match = store.getMatchById(this.state.match._id)\r\n    let lastSeenMsg = match.seen ? match.seen.last_seen_msg_id : null;\r\n    if (this.isMountedOk) {\r\n      this.setState({\r\n        lastSeenMsg: lastSeenMsg,\r\n        match: match,\r\n        messages: match.messages\r\n      })\r\n    }\r\n  }\r\n\r\n  changeState = (obj) => {\r\n    this.setState(obj)\r\n  }\r\n\r\n  sendSeen = (allMsgs) => {\r\n    if (!this.state.lastSeenMsg) {\r\n      console.log(\"empty value of 'lastSeenMsg'..\");\r\n    }\r\n\r\n    //clear notification for new friends, who have not send message:\r\n    if (!allMsgs || !allMsgs?.length) {\r\n      this.deleteFromHeader();\r\n      return;\r\n    }\r\n\r\n    for (let index = allMsgs.length - 1; 0 <= index; index--) {\r\n\r\n      let msgWrapped = allMsgs[index];\r\n\r\n      if (!msgWrapped || !msgWrapped.theirs) {\r\n        continue;\r\n      }\r\n      let msg = msgWrapped.theirs.props.msg;\r\n\r\n      if (msg._id !== this.state.lastSeenMsg) {\r\n        AjaxService.doGet(Const.URLS.SEND_SEEN + msg.match_id + \"/\" + msg._id, {});\r\n        let match = this.state.match;\r\n        if (match.seen) {\r\n          match.seen.last_seen_msg_id = msg._id;\r\n        }\r\n\r\n        this.deleteFromHeader();\r\n        return;\r\n      }\r\n      if (msgWrapped.theirs) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteFromHeader = () => {\r\n    let header = BeanContextAware.get('header1');\r\n    if (header && this.isOnFocus) {\r\n      header.removeMsgMatch(this.state.match);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: this.state.match.person.name,\r\n            accessor: \"theirs\"\r\n          },\r\n          {\r\n            Header: \"Me\",\r\n            accessor: \"mine\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n    var reorderedMessages = this.prepareMessages(this.state.messages, this.state.friendId, this.state.numberMsgShown);\r\n\r\n    this.sendSeen(reorderedMessages);\r\n\r\n    let inputProps = {\r\n      data: this.state.store,\r\n      friendId: this.state.match.person._id,\r\n      triggerRenderFunc: this.triggerRenderFunc,\r\n      emojiInjectorFunc: injectEmojiFunction\r\n    }\r\n\r\n    if (this.isMountedOk) {\r\n      return (\r\n        <div><Select getStyles={this.inputStyles} />\r\n          <div>\r\n            <ReactTable\r\n              data={reorderedMessages}\r\n              columns={present}\r\n              defaultPageSize={reorderedMessages.length}\r\n              pageSize={reorderedMessages.length}\r\n              showPagination={false}\r\n              bordered={false}\r\n              sortable={false}\r\n  \r\n            />\r\n            <div>\r\n              <EnterText {...inputProps} />\r\n            </div>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      )\r\n    } \r\n    return (\r\n      <div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\nexport default withRouter(Chat);\r\n","import React from 'react';\r\nimport \"react-table/react-table.css\"\r\nimport ReactTable from \"react-table\";\r\nimport Info from \"../building-blocks/Info\";\r\nimport PicWrapper from \"../building-blocks/PicWrapper\";\r\nimport NotesService from './NotesService';\r\nimport CashService from '../services/CashService';\r\nimport AjaxService from '../services/AjaxService';\r\nimport Const from '../services/Constants';\r\nimport MatchDecoratorService from '../services/MatchDecoratorService';\r\n\r\nclass Notes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      match: null\r\n    };\r\n    this.index = 0;\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.allBookmarks = CashService.getBookmarksAsObject();\r\n    let all = CashService.getBookmarks();\r\n\r\n    let id = all[this.index]\r\n    if (!id) {\r\n      return;\r\n    }\r\n    let mtch = this.formDummyMatch(id);\r\n\r\n    MatchDecoratorService.getUserData(mtch, this.processUserData);\r\n  }\r\n\r\n  saveAllByPhone = function () {\r\n    NotesService.saveAllByPhone();\r\n  }\r\n\r\n  getOne = function () {\r\n    NotesService.getOne();\r\n  }\r\n\r\n  getBookmarks = function () {\r\n    NotesService.getBookmarks();\r\n  }\r\n\r\n  removeBookmark = function (userId) {\r\n    NotesService.removeBookmark(userId);\r\n    this.index--;\r\n  }\r\n\r\n  formDummyMatch(id) {\r\n    return {\r\n      person: { _id: id }\r\n    }\r\n  }\r\n\r\n  pass = (userId) => {\r\n    let promise = AjaxService.doGet(Const.URLS.PASS + userId, {})\r\n    promise.then((data) => {\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  like = (userId) => {\r\n    let promise = AjaxService.doGet(Const.URLS.LIKE + userId, {})\r\n    promise.then((data) => {\r\n      console.log(data);\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  processUserData = (match) => {\r\n    if (!!match?.person?.error) {\r\n      try {\r\n        console.log('User id: ' + match?.person?._id + \" will be removed from Bookmarks list\");\r\n        NotesService.removeBookmark(match?.person?._id);\r\n        this.match = null;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    this.match = match;\r\n    this.setState({\r\n      match: match\r\n    })\r\n  }\r\n\r\n  get = (step) => {\r\n    let all = CashService.getBookmarks();\r\n\r\n    this.index = this.index + step;\r\n\r\n    if (this.index < 0) {\r\n      this.index = all.length - 1;\r\n    } else if (this.index > all.length - 1) {\r\n      this.index = 0;\r\n    }\r\n    \r\n    let id = all[this.index];\r\n\r\n    if (!id) {\r\n      console.error(\"'id' is \" + id);\r\n      return;\r\n    }\r\n    let mtch = this.formDummyMatch(id);\r\n    MatchDecoratorService.getUserData(mtch, this.processUserData);\r\n  }\r\n\r\n  isBookmarked = (userId) => {\r\n    return this.allBookmarks[userId] !== undefined && this.allBookmarks[userId] !== null;\r\n  }\r\n\r\n  render() {\r\n    if (!this.match) {\r\n      return (\r\n        <div>\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.get(-1)}> ⬅️ </button>\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.get(1)}> ➡️ </button>\r\n        </div>\r\n      )\r\n    }\r\n    let match = this.match;\r\n\r\n    let InfoWithButton = () => {\r\n      let userId = match?.person?._id;\r\n      let isBookmarked = this.isBookmarked(userId);\r\n      return (\r\n\r\n        <div>\r\n          <div className=\"text-justify text-wrap\">\r\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => this.like(userId)}> 👍 </button>\r\n            <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.pass(userId)}> 👎 </button>\r\n\r\n            {!isBookmarked ? <button type=\"button\" className=\"btn btn-primary float-right ml-1\"\r\n              onClick={() => NotesService.saveBookmark(userId)}> 📑 </button> : null}\r\n\r\n            {isBookmarked ? <button type=\"button\" className=\"btn btn-danger float-right ml-1\"\r\n              onClick={() => NotesService.removeBookmark(userId)}> 📑 </button> : null}\r\n\r\n          </div>\r\n          <Info person={match?.person} />\r\n        </div>\r\n      )\r\n    }\r\n    let Pic = args => (<PicWrapper photos={args.photos} name={args.name} />);\r\n    let person = [{\r\n      image: (<Pic photos={match?.user?.photos} name={match?.user?.name} />),\r\n      info: (<InfoWithButton />)\r\n    }]\r\n\r\n    let present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: \"Photos\",\r\n            accessor: \"image\"\r\n          },\r\n          {\r\n            Header: \"Info\",\r\n            accessor: \"info\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"text-justify text-wrap text-center float-center\">\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.get(-1)}> ⬅️ </button>\r\n          <button type=\"button\" disabled={true} className=\"btn btn-secondary\"> {this.index + 1} of {CashService.getBookmarks()?.length} </button>\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.get(1)}> ➡️ </button>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <ReactTable\r\n            data={person}\r\n            columns={present}\r\n            sortable={false}\r\n            defaultPageSize={1}\r\n            showPagination={false}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Notes;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport CashService from './services/CashService';\nimport AppSettingsService from './settings/AppSettingsService';\nimport PollService from './services/PollService';\nimport NotesService from './notes/NotesService';\nimport Home from './Home';\nimport PhoneForm from './auth/PhoneForm';\nimport PhoneToken from './auth/PhoneToken';\nimport ConfirmCode from './auth/confirmCode';\nimport UserView from './userView/userView';\nimport Friends from './userView/friends';\nimport OneFriend from './userView/OneFriend';\nimport MoreFriends from './userView/MoreFriends';\nimport FriendRequests from './userView/FriendRequests';\nimport AppSettings from './settings/AppSettings';\nimport Header from './building-blocks/header';\nimport Chat from './chat/chat.js';\nimport Notes from './notes/Notes';\nimport store from './store';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nconst App = () => {\n  return (\n    <div className=\"container\" style={{ paddingTop: 10 }}>\n\n      <Router>\n        <Header beanId=\"header1\" />\n        <Switch>\n          < Route exact path=\"/\" component={Home} />\n          < Route path=\"/user\" render={() => <UserView data={store} />} />\n          < Route path=\"/phone\" component={PhoneForm} />\n          < Route path=\"/phone-token\" component={PhoneToken} />\n          < Route path=\"/friend\" component={OneFriend} />\n          < Route path=\"/chat\" render={() => <Chat beanId=\"chat1\"/>} />\n          < Route path=\"/notes\" render={() => <Notes beanId=\"notes1\"/>} />\n          < Route path=\"/pals\" render={() => <Friends data={store.updates} />} />\n          < Route path=\"/more-pals\" render={() => <MoreFriends data={store.updates} beanId=\"moreFriends1\"/>} />\n          < Route path=\"/pal-requests\" render={() => <FriendRequests data={store.updates} />} />\n          < Route path=\"/settings\"render={() => <AppSettings beanId=\"appSettings1\"/>} />\n          < Route path=\"/confirm-token\" component={ConfirmCode} />\n          < Route path=\"*\" component={Home} />\n        </Switch>\n      </Router>\n    </div >\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render( <App/> , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}