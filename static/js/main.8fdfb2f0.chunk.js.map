{"version":3,"sources":["services/Constants.js","services/AjaxService.js","services/CashService.js","settings/AppSettingsService.js","services/BeanContextAware.js","store.js","services/PollService.js","notes/NotesService.js","Home.js","building-blocks/RenderForm.js","auth/PhoneForm.js","auth/confirmCode.js","building-blocks/Info.js","building-blocks/PicWrapper.js","userView/userView.js","services/MatchDecoratorService.js","building-blocks/OnePicWrapper.js","userView/friends.js","building-blocks/BtnLink.js","userView/oneFriend.js","userView/MoreFriends.js","userView/FriendRequests.js","settings/SelectPollInterval.js","settings/SelectTextColor.js","settings/SelectBackgroundColor.js","settings/Checkbox.js","settings/AppSettings.js","building-blocks/header.js","chat/enterText.js","chat/messageWrapper.js","chat/Select.js","chat/chat.js","notes/Notes.js","App.js","serviceWorker.js","index.js"],"names":["ipAdress","Const","URLS","BASE_URL","AUTH","PHONE","GET_TOKEN","UPDATES","PROFILE","USER","SEND_MESSAGE","SEND_LOCATION","NEW_FRIENDS","SEND_SEEN","FAST_MATCH","LIKE","PASS","STORAGE","STORAGE_TOKEN","STORAGE_BOOKMARKS","STORAGE_SETTINGS","LOCAL_CASH_VAR_NAME","AUTH_HEADER_NAME","PHONE_HEADER_NAME","VERSION","execute","method","url","data","headers","axios","doPost","getHeaders","doPut","doGet","doDelete","authHeaderName","phoneHeaderName","CashService","React","Component","settings","bgColor","textColor","bookmarks","cashStructureTemplate","token","persistAll","phone","obj","console","log","AjaxService","JSON","stringify","catch","e","error","loadAll","getPhone","setPhone","getToken","setToken","getSettings","setSettings","persistSettings","persistBookmarks","arr","this","then","reduce","json","value","key","props","applyDesignSettings","getSetting","textColors","class","applyClass","document","body","bgColors","persistSetting","settingName","settingObject","element","colors","selectedColor","forEach","color","classList","remove","add","getInputStyleClasses","updatePollInterval","isToShowPhotos","bean","state","Error","beanId","context","warn","get","reducer","combineReducers","form","reduxFormReducer","store","window","devToolsExtension","createStore","functionsQueue","addToFunctionsQ","funct","push","length","shift","funcToCall","getStore","getMatchById","id","matches","update","i","_id","addToStore","checkIfLogged","onSuccess","onFailure","getUpdates","getLastActivityDate","startUpdatePoll","AppSettingsService","mergeUpdates","updates","matchUpdate","oldMatch","addToUnreadMessagesBadge","newMsgs","messages","newMsgsCount","y","splice","concat","lastSeenMsg","seen","last_seen_msg_id","lastActivityDate","last_activity_date","markLastUneadMessages","newLastSeenMsgId","oldLastSeenMsgId","localUser","profile","ind","msg","from","mtch","header","BeanContextAware","addMsgMatch","lastDate","chat1","triggerRenderFunc","changeButtonVisibility","isVisible","stopUpdatePoll","seconds","pollInterval","pollIntervalObj","setInterval","clearTimeout","sanitizeStore22deleteeee","bookmarked","saveBookmark","personId","getBookmarks","indexOf","removeBookmark","index","oneFromArr","saveAllByPhone","getOne","promise","delete","Home","hits","isLoading","to","eachComponent","input","label","type","placeholder","meta","touched","className","RenderForm","options","handleSubmit","fields","RenderFieldWrappedInstance","reduxForm","onSubmit","map","op","name","Field","onChange","onChangeFun","component","PhoneForm","handleChange","event","target","phoneNumAuth","history","ifNotLogged","preventDefault","result","setBookmarks","authToken","processAuth","confirm","PollService","optns","withRouter","ConfirmCode","confirmToken","phoneNumber","status","persistToken","Info","args","person","country","pos_info","age","birth_date","substring","city","jobs","title","schools","distance_mi","bio","PicWrapper","click","photos","setState","imgSrc","personName","firstPic","onClick","src","alt","UserView","pos","lat","lon","image","info","pointVals","pointMode","banner","control","values","point","newMsgObj","postLocation","onRemove","bindMap","startPort","overlayAll","showControls","showInputs","useDynamic","precision","columns","Header","accessor","sortable","defaultPageSize","showPagination","getUserData","match","callbackFunc","userId","user","results","posInfo","region","OnePicWrapper","doClick","changeHandler","condition","Friends","sortByLastActivityDate","a","b","timeA","Date","getTime","applySorting","arrToBeSorted","sortingFunc","sort","MatchDecoratorService","pathname","showUser","msgMatches","friends","persons","prsn","picProps","firstName","lastName","pageSize","BtnLink","OneFriend","NotesService","save","isBookmarked","undefined","allBookmarks","location","getBookmarksAsObject","disabled","MoreFriends","getNewFriends","callBack","allFr","isMountedOk","pass","like","InfoWrapper","Pic","one","FriendRequests","getFriendRequests","abortController","AbortController","style","width","height","SelectPollInterval","interval","onSelectPollInterval","styles","SelectTextColor","selected","triggerRender","SelectBackgroundColor","Checkbox","doChangeState","checked","defaultChecked","AppSettings","val","toggleShowPicsCheckbox","changeState","findInMsgMatches","toggleFlashTabTitle","len","removeMsgMatch","flashIntervalObj","startFlashTabTitle","stopFlashTabTitle","initialTitle","goChat","Btn","exact","activeClassName","isVisibleNewMsgs","EnterText","createMessage","dt","created_date","toISOString","match_id","message","sent_date","timestamp","onKeyPress","oneMatch","friendId","elem","srcElement","getStyles","inputProps","MessageWrapper","msgDateObj","timeStr","toLocaleTimeString","dateStr","toLocaleDateString","isSeen","showDate","date","setTimeout","Select","numberMsgShown","parseInt","Chat","onFocus","ev","isOnFocus","deleteFromHeader","onBlur","prepareMessages","allMsgs","transformedMsg","theirs","mine","sendSeen","msgWrapped","matchId","inputStyles","addEventListener","removeEventListener","present","reorderedMessages","bordered","Notes","processUserData","getNext","all","formDummyMatch","App","paddingTop","path","render","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fdfb2f0.chunk.js","sourcesContent":["let ipAdress = 'http://localhost:8484/';\n\nconst Const = {\n  URLS: {\n    BASE_URL: ipAdress,\n    AUTH: {\n      PHONE: ipAdress + 'requestCode',\n      GET_TOKEN: ipAdress + 'getToken/'\n    },\n    UPDATES: ipAdress + 'updates',\n    PROFILE: ipAdress + 'profile',\n    USER: ipAdress + 'user/',\n    SEND_MESSAGE: ipAdress + 'postMessage',\n    SEND_LOCATION: ipAdress + 'location',\n    NEW_FRIENDS: ipAdress + 'new-friends',\n    SEND_SEEN: ipAdress + 'seen/',\n    FAST_MATCH: ipAdress + 'fast-match',\n    LIKE: ipAdress + 'like/',\n    PASS: ipAdress + 'pass/',\n\n\n    //// storage api:\n    STORAGE: ipAdress + 'storage/',\n    STORAGE_TOKEN: ipAdress + 'storage/token/',\n    STORAGE_BOOKMARKS: ipAdress + 'storage/bookmarks/',\n    STORAGE_SETTINGS: ipAdress + 'storage/settings/'\n  },\n  LOCAL_CASH_VAR_NAME: '__TnDr__',\n  AUTH_HEADER_NAME: 'X-Auth-Token',\n  PHONE_HEADER_NAME: 'phone-number',\n  VERSION: '1.14'\n}\n\nexport default Const;\n","import React from 'react';\nimport axios from 'axios';\nimport Const from './Constants';\nimport CashService from './CashService';\n\nclass AjaxService extends React.Component {\n\n  execute = (method, url, data, headers) => {\n    return axios({\n      method: method,\n      url: url,\n      data: data,\n      headers: headers\n    });\n  };\n\n  doPost = (url, data, headers) => {\n    return this.execute('post', url, data, this.getHeaders(headers));\n  };\n\n  doPut = (url, data, headers) => {\n    return this.execute('put', url, data, this.getHeaders(headers));\n  };\n\n  doGet = (url, headers) => {\n    return this.execute('get', url, {}, this.getHeaders(headers));\n  };\n\n  doDelete = (url, headers) => {\n    return this.execute('delete', url, {}, this.getHeaders(headers));\n  };\n\n  getHeaders = (headers) => {\n    let authHeaderName = Const.AUTH_HEADER_NAME;\n    let phoneHeaderName = Const.PHONE_HEADER_NAME;\n    if (!headers) {\n      headers = {};\n    }\n\n    if (CashService[phoneHeaderName]) {\n      headers[phoneHeaderName] = CashService[phoneHeaderName];\n    }\n\n    if (CashService[authHeaderName]) {\n      headers[authHeaderName] = CashService[authHeaderName];\n    }\n    return headers;\n  };\n}\n\nexport default new AjaxService();\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\n\nclass CashService extends React.Component {\n\n  [Const.PHONE_HEADER_NAME] = null;\n  [Const.AUTH_HEADER_NAME] = null;\n  settings = { bgColor: \"bg-dark\", textColor: \"text-white\" };\n  bookmarks = [];\n\n  cashStructureTemplate = {\n    settings: this.settings,\n    [Const.AUTH_HEADER_NAME]: { token: this[Const.AUTH_HEADER_NAME] },\n    bookmarks: this.bookmarks\n  }\n\n  persistAll = function (phone, obj) {\n    console.log(obj);\n\n    let promise = AjaxService.doPost(Const.URLS.STORAGE + phone, {\n      'json': JSON.stringify(obj)\n    }, {});\n    promise.catch((e) => {\n      console.error(e);\n    })\n  }\n\n  loadAll = function (phone) {\n    return AjaxService.doGet(Const.URLS.STORAGE + phone, {});\n  }\n\n  getPhone = () => {\n    return this[Const.PHONE_HEADER_NAME];\n  };\n\n  setPhone = (phone) => {\n    this[Const.PHONE_HEADER_NAME] = phone;\n  };\n\n  /// token:\n  getToken = () => {\n    return this[Const.AUTH_HEADER_NAME];\n  };\n\n  setToken = (token) => {\n    this[Const.AUTH_HEADER_NAME] = token;\n  };\n\n  persistToken(token) {\n    AjaxService.doPut(Const.URLS.STORAGE_TOKEN + this.getPhone(), {\n      'json': JSON.stringify({ \"token\": token })\n    });\n  }\n\n  //// settings:\n  getSettings = () => {\n    return this.settings;\n  };\n\n  setSettings = (settings) => {\n    this.settings = settings;\n  };\n\n  persistSettings = (settings) => {\n    AjaxService.doPut(Const.URLS.STORAGE_SETTINGS + this.getPhone(), {\n      'json': JSON.stringify(settings)\n    });\n  }\n\n  getBookmarks() {\n    return this.bookmarks;\n  }\n\n  setBookmarks(bookmarks) {\n    this.bookmarks = bookmarks;\n  }\n  getBookmarksAsObject() {\n    return this.bookmarks.reduce((json, value, key) => {\n      json[value] = key;\n      return json;\n    }, {});\n  }\n  persistBookmarks = function (arr) {\n    let promise = AjaxService.doPost(Const.URLS.STORAGE_BOOKMARKS + this.getPhone(), {\n      'json': JSON.stringify(arr)\n    }, {});\n\n    promise.then((data) => {\n      console.log(data);\n    }).catch((e) => {\n      console.error(e);\n    })\n  }\n\n}\n\nexport default new CashService();\n","import React from 'react';\r\nimport CashService from '../services/CashService';\r\nimport Const from '../services/Constants';\r\n\r\n//this singleton applies settings at startup:\r\nclass AppSettingsService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textColors = [\r\n      { \"name\": 'Gray', \"class\": 'text-muted' },\r\n      { \"name\": 'White', \"class\": 'text-white' },\r\n      { \"name\": 'Dark', \"class\": 'text-dark' },\r\n      { \"name\": 'Black', \"class\": 'text-body' }\r\n    ]\r\n\r\n    this.bgColors = [\r\n      { \"name\": 'Gray', \"class\": 'bg-secondary' },\r\n      { \"name\": 'Dark', \"class\": 'bg-dark' },\r\n      { \"name\": 'Light', \"class\": 'bg-light' }\r\n    ]\r\n\r\n    this.updatePollInterval = 20000;\r\n    this.isToShowPhotos = true;\r\n  }\r\n\r\n  applyDesignSettings = () => {\r\n    let textColor = this.getSetting(\"textColor\") || this.textColors[0]?.class;\r\n    if (textColor) {\r\n      console.log(textColor);\r\n      \r\n      this.applyClass(document.body, this.textColors, textColor);\r\n    }\r\n\r\n    let bgColor = this.getSetting(\"bgColor\") || this.bgColors[0].class;\r\n    if (bgColor) {\r\n      this.applyClass(document.body, this.bgColors, bgColor);\r\n    }\r\n  }\r\n\r\n  persistSetting = (settingName, settingObject) => {\r\n    let settings = CashService.getSettings();\r\n    if (!settings) {\r\n      settings = {};\r\n      CashService.setSettings(settings);\r\n    }\r\n    settings[settingName] = settingObject;\r\n    CashService.persistSettings(settings);\r\n  }\r\n\r\n  getSetting = (settingName) => {\r\n    let settings = CashService.getSettings();\r\n    return settings?.[settingName];\r\n  }\r\n\r\n  applyClass = (element, colors, selectedColor) => {\r\n    colors.forEach(color => {\r\n      element.classList.remove(color.class);\r\n    });\r\n\r\n    element.classList.add(selectedColor);\r\n  }\r\n\r\n  getInputStyleClasses = () => {\r\n    return \"form-control \" + (this.getSetting(\"textColor\") || \" \") +\r\n      \" \" + (this.getSetting(\"bgColor\") || \"\");\r\n  }\r\n}\r\nexport default new AppSettingsService();\r\n","import React from 'react';\n\nclass BeanContextAware extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.context= {};\n  };\n\n  add = (bean) => {\n    if (!bean || !bean.state) {\n      throw new Error(\"Not allowed 'null' values for 'bean': \" + bean + \" !\");\n    }\n    let beanId = bean.state.beanId || bean.props.beanId;\n    if (!beanId) {\n      throw new Error(\"Not allowed 'null' value for 'beanId' \" + beanId  + \" !\" );\n    }\n    if (this.context[beanId]) {\n      console.warn(\"Bean with 'beanId': \" + beanId + \"is already registered under BeanContextAware!\");\n    }\n    this.context[beanId] = bean;\n  }\n\n  get = (beanId) => {\n    if (!beanId ) {\n      throw new Error(\"Not allowed 'null' value for 'beanId' \" + beanId + \" !\" );\n    }\n    return this.context[beanId];\n  }\n\n  remove = (bean) => {\n    if (!bean) {\n      throw new Error(\"Not allowed 'null' value for 'bean' \" + bean + \" !\" );\n    }\n    if ( typeof bean === 'string' ) {\n        delete this.context[bean];\n        return;\n    }\n    let beanId = bean.state.beanId || bean.props.beanId;\n    delete this.context[beanId];\n  }\n}\nexport default new BeanContextAware();\n","import { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer // mounted under \"form\"\n})\nconst store =\n  (window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore)(reducer)\n\nconst functionsQueue = [];\n\nlet addToFunctionsQ = (funct) => {\n  functionsQueue.push(funct);\n\n  while (functionsQueue.length > 0) {\n    let funcToCall = functionsQueue.shift()\n    funcToCall();\n  }\n}\n\nstore.getStore = () => {\n  // add dummy function as a placeholder\n  addToFunctionsQ(() => { });\n  return store;\n}\n\nstore.getMatchById = (id) => {\n  if (!id) {\n    throw new Error(\"'id' is not allowed to be: \" + id);\n  }\n  let matches = store.getStore().update.data.matches\n  for (var i = 0; i < matches.length; i++) {\n    if (id === matches[i]._id) {\n      return matches[i];\n    }\n  }\n  return null;\n}\n\nstore.addToStore = (key, value) => {\n  if (!key || typeof (key) != 'string') {\n    throw new Error(\"Only objects of type 'string' are allowed!\");\n  }\n\n  addToFunctionsQ(\n    function () {\n      store[key] = value;\n    }\n  );\n}\n\nexport default store;\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\nimport BeanContextAware from './BeanContextAware';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport store from '../store';\n\nclass PollService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n\n    this.last_activity_date = \"1984-08-01T00:00:00.000Z\";\n  };\n\n  checkIfLogged = (headers, onSuccess, onFailure) => {\n    let promise = AjaxService.doGet(Const.URLS.PROFILE, headers)\n    promise.then((data) => {\n      store.addToStore('profile', data);\n      onSuccess()\n      this.getUpdates(this.getLastActivityDate());\n      this.startUpdatePoll(AppSettingsService.updatePollInterval);\n\n    }).catch((e) => {\n      console.error(e);\n      onFailure()\n    })\n  }\n\n  mergeUpdates = (store, updates) => {\n    let matches = updates.data.matches;\n\n    for (let i = 0; i < matches.length; i++) {\n      let matchUpdate = matches[i];\n      let oldMatch = store.getMatchById(matchUpdate._id);\n      //merge brand new matches:\n      if (!oldMatch) {\n        store.getStore().update.data.matches.push(matchUpdate);\n        this.addToUnreadMessagesBadge(matchUpdate);\n        break;\n      }\n\n      //merge new messages:\n      let newMsgs = matchUpdate.messages;\n      let newMsgsCount = newMsgs.length;\n      for (let y = oldMatch.messages.length - 1; 0 <= newMsgsCount || 0 <= y; y-- , newMsgsCount--) {\n        if (oldMatch.messages[y] && !oldMatch.messages[y]._id) {\n          oldMatch.messages.splice(y, 1);\n        }\n      }\n      oldMatch.messages = oldMatch.messages.concat(newMsgs);\n\n      /// merge seen:\n      let lastSeenMsg = matchUpdate.seen ? matchUpdate.seen.last_seen_msg_id : null;\n      if (lastSeenMsg) {\n        if (!oldMatch.seen) {\n          oldMatch.seen = {};\n        }\n        oldMatch.seen.last_seen_msg_id = lastSeenMsg;\n      }\n\n      /// merge last_activity_date:\n      let lastActivityDate = matchUpdate.last_activity_date ? matchUpdate.last_activity_date : null;\n      if (lastActivityDate) {\n        oldMatch.last_activity_date = lastActivityDate;\n      }\n    }\n  }\n\n  markLastUneadMessages = (store, updates) => {\n    let matches = updates.data.matches;\n\n    for (let i = 0; i < matches.length; i++) {\n      let matchUpdate = matches[i];\n      let oldMatch = store.getMatchById(matchUpdate._id);\n\n      let newLastSeenMsgId = matchUpdate.seen ? matchUpdate.seen.last_seen_msg_id : null;\n      let oldLastSeenMsgId = oldMatch.seen ? oldMatch.seen.last_seen_msg_id : null;\n      var localUser = store.profile.data;\n\n      newLastSeenMsgId = newLastSeenMsgId || oldLastSeenMsgId;\n      if (!newLastSeenMsgId || !localUser || !localUser._id) {\n        continue;\n      }\n      let newMsgs = matchUpdate.messages;\n\n      for (var ind = newMsgs.length - 1; 0 <= ind; ind--) {\n        let msg = newMsgs[ind];\n\n        if (!msg.from) {\n          continue;\n        }\n\n        if (localUser._id !== msg.from) {\n\n          if (msg._id !== newLastSeenMsgId) {\n            this.addToUnreadMessagesBadge(oldMatch);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  addToUnreadMessagesBadge = (mtch) => {\n    let header = BeanContextAware.get('header1');\n    if (header) {\n      header.addMsgMatch(mtch)\n    }\n  }\n\n  getUpdates = (lastDate) => {\n    let header = BeanContextAware.get('header1');\n    let chat1 = BeanContextAware.get('chat1');\n    let data = {\n      \"last_activity_date\": lastDate\n    }\n\n    let promise = AjaxService.doPost(Const.URLS.UPDATES, data, {});\n    promise.then((data) => {\n      if (store.update) {\n        this.mergeUpdates(store, data);\n      } else {\n        store.addToStore('update', data);\n      }\n\n      this.markLastUneadMessages(store, data);\n\n      /// merge global (updates polling) last_activity_date:\n      this.last_activity_date = data.data.last_activity_date;\n\n      if (chat1) {\n        chat1.triggerRenderFunc();\n      }\n      if (header) {\n        header.changeButtonVisibility({ isVisible: true });\n      }\n    }).catch((e) => {\n      if (header) {\n        console.log(\"get updates errror \");\n        header.changeButtonVisibility({ isVisible: false })\n      }\n      this.stopUpdatePoll();\n      console.log(e);\n    })\n  }\n\n  startUpdatePoll = (seconds) => {\n    if (!seconds) {\n      console.error(\"error null val for 'seconds'\");\n      return;\n    }\n    this.stopUpdatePoll();\n    this.pollInterval = seconds\n    this.pollIntervalObj = setInterval(\n      () => {\n        this.getUpdates(this.getLastActivityDate());\n      }, seconds\n    );\n  }\n\n  getLastActivityDate = () => {\n    return this.last_activity_date;\n  }\n\n  stopUpdatePoll = () => {\n    if (this.pollIntervalObj) {\n      clearTimeout(this.pollIntervalObj)\n    }\n  }\n}\nexport default new PollService();\n","import React from 'react';\r\nimport store from '../store';\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService';\r\nimport CashService from '../services/CashService';\r\n\r\nclass NotesService extends React.Component {\r\n\r\n  sanitizeStore22deleteeee = function () {\r\n    if (!store.bookmarked) {\r\n      store.bookmarked = []\r\n    }\r\n  }\r\n\r\n  saveBookmark = function (personId) {\r\n    let bookmarks = CashService.getBookmarks();\r\n    if (bookmarks.indexOf(personId) !== -1) {\r\n      return;\r\n    }\r\n    bookmarks.push(personId);\r\n    CashService.persistBookmarks(bookmarks);\r\n  }\r\n\r\n  removeBookmark = function (personId) {\r\n    let bookmarks = CashService.getBookmarks();\r\n    for (let index = 0; index < bookmarks.length; index++) {\r\n      let oneFromArr = bookmarks[index];\r\n      if (!!personId && oneFromArr === personId) {\r\n        bookmarks.splice(index, 1);\r\n        CashService.persistBookmarks(bookmarks);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  saveAllByPhone = function (phone = CashService.getPhone()) {\r\n    CashService.persistAll(phone, CashService.cashStructureTemplate);\r\n  }\r\n\r\n  getOne = function (phone = CashService.getPhone()) {\r\n    let promise = AjaxService.doGet(Const.URLS.STORAGE + phone, {});\r\n\r\n    promise.then((data) => {\r\n      console.log(data);\r\n    }).catch((e) => {\r\n      console.error(e);\r\n    })\r\n  }\r\n\r\n  delete = function (phone = CashService.getPhone()) {\r\n    let promise = AjaxService.doDelete(Const.URLS.STORAGE + phone, {});\r\n\r\n    promise.then((data) => {\r\n      console.log(data);\r\n    }).catch((e) => {\r\n      console.error(e);\r\n    })\r\n  }\r\n\r\n}\r\nexport default new NotesService;","import React, {Component} from 'react';\nimport {  Link} from 'react-router-dom';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n\n    <div >\n    <h1>Welcome</h1>\n          <Link to=\"/phone\">  Login with phone</Link>\n            </div >\n     )}\n  }\n\n  export default Home;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport store from '../store'\nimport {Provider } from 'react-redux'\n\nconst eachComponent = ({ input, label, type, value, placeholder,  meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input className='form-control' {...input}  placeholder={placeholder}  type={type}/>\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n)\n\nclass RenderForm extends React.Component {\n\n  render() {\n    let {options} = this.props;\n    let handleSubmit = options.handleSubmit;\n    let fields = options.fields;\n    let RenderFieldWrapped = () => (\n      <div>  <form onSubmit={handleSubmit} >\n        {fields.map(op => (\n          <div key={op.name}>\n              <Field name={op.name} onChange={op.onChangeFun} component={eachComponent}\n                            type=\"input\" placeholder={op.placeholder} label={op.name}/>\n          </div>\n      ))\n    }\n  < input className=\"btn btn-primary\"  type = \"submit\"  value = \"Submit\" / >\n     </form>\n     </div>)\n\n\n    let RenderFieldWrappedInstance = reduxForm({\n      form: 'RenderFieldWrapped'\n    })(RenderFieldWrapped);\n\n    return (\n      <div>\n        <Provider store={store}>\n          <RenderFieldWrappedInstance options={options} />\n        </Provider>\n      </div>\n    )\n  }\n}\nexport default RenderForm\n","import React from 'react';\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport CashService from '../services/CashService';\nimport PollService from '../services/PollService';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport RenderForm from '../building-blocks/RenderForm';\nimport { withRouter } from 'react-router-dom';\n\nclass PhoneForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: ''\n    };\n  }\n\n  handleChange = event => {\n    this.state.phone = event.target.value;\n  };\n\n  phoneNumAuth = function (phone) {\n    let promise = AjaxService.doPost(Const.URLS.AUTH.PHONE, {\n      'phone': phone\n    }, {});\n\n    promise.then(() => {\n      CashService.setPhone(phone);\n      this.props.history.push('/confirm-token');\n    }).catch((e) => {\n      CashService.setPhone(null);\n      console.error(e);\n    })\n  }\n\n  ifNotLogged = (phone) => {\n    CashService.setToken(null);\n    this.phoneNumAuth(phone);\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n \n    let phone = this.state.phone;\n\n    let promise = CashService.loadAll(phone);\n    CashService.setPhone(phone);\n    promise.then((data) => {\n      console.log(data?.data?.result);\n\n      let settings = data?.data?.result?.settings;\n      if (settings) {\n        CashService.setSettings(settings);\n        AppSettingsService.applyDesignSettings();\n      }\n      let bookmarks = data?.data?.result?.bookmarks;\n      if (bookmarks) {\n        CashService.setBookmarks(bookmarks);\n      }\n      let authToken = data?.data?.result?.[Const.AUTH_HEADER_NAME]?.token;\n      this.processAuth(authToken, phone);\n    }).catch((e) => {\n      console.error(e);\n    })\n  }\n\n  processAuth = (authToken, phone) => {\n    if (authToken) {\n\n      let isToUseCurrent = window.confirm('A session with this phone numer: ' \n          + phone + ' already exists.\\nUse current session?');\n\n      if (isToUseCurrent) {\n        console.log(\"use current session:\");\n        CashService.setToken(authToken);\n        PollService.checkIfLogged({},\n          () => { this.props.history.push('/user') },\n          () => {this.ifNotLogged(phone)});\n      } else {\n        this.phoneNumAuth(phone);\n      }\n\n    } else {\n      CashService.persistAll(phone, CashService.cashStructureTemplate);\n      this.phoneNumAuth(phone);\n    }\n  }\n\n  render() {\n    const optns = {\n      handleSubmit: this.handleSubmit,\n      fields: [\n        { name: 'Phone number', placeholder: 'Please, fill in ur phone number', onChangeFun: this.handleChange }\n      ]\n    }\n\n    return (\n      <div>\n        <RenderForm options={optns} />\n      </div >\n    )\n  }\n}\nexport default withRouter(PhoneForm);\n","import React from 'react';\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport PollService from '../services/PollService';\nimport CashService from '../services/CashService';\nimport RenderForm from '../building-blocks/RenderForm';\n//import './index.css';\nimport { withRouter } from 'react-router-dom';\n\nclass ConfirmCode extends React.Component {\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      confirmToken: ''\n    };\n  }\n\n  handleChange = event => {\n    this.state.confirmToken = event.target.value;\n    //this.setState({confirmToken: event.target.value});\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let phoneNumber = CashService.getPhone();\n    if (!phoneNumber) {\n      throw new Error(\"CashService[Const.PHONE_HEADER_NAME] is not allowed to be \" + phoneNumber);\n    }\n    let { history } = this.props;\n\n    let promise = AjaxService.doGet(Const.URLS.AUTH.GET_TOKEN + this.state.confirmToken + \"/\" + phoneNumber);\n\n    promise.then(function (value) {\n      console.log(value);\n      if (value && value.status === 200 && value.data) {\n        let token = value.data[Const.AUTH_HEADER_NAME];\n\n        let headers = {\n          [Const.AUTH_HEADER_NAME] : token\n        }\n\n        let onSuccess = function() {\n          CashService.setToken(token);\n          CashService.persistToken(token);\n          history.push('/user');\n        }\n\n        let onFailure = function() {\n          history.push('/phone');\n        }\n\n        PollService.checkIfLogged(headers, onSuccess, onFailure);\n      }\n    }).catch((e) => {\n      // delete cash[store.phoneNumber];\n      // delete store.phoneNumber;\n      // localStorage.setItem(cashVarName, JSON.stringify(cash));\n      console.log(e);\n    })\n\n  }\n\n  render() {\n    const optns = {\n      handleSubmit: this.handleSubmit,\n      fields: [\n        { name: 'Confirmation code', placeholder: 'Please, enter your confirmation code:', onChangeFun: this.handleChange }\n      ]\n    }\n    return (\n      <div >\n        <RenderForm options={optns} />\n      </div>\n    );\n  }\n}\nexport default withRouter(ConfirmCode)\n","import React from 'react';\n\nfunction Info(args) {\n  let { person } = args;\n  if (!person) {\n    return (\n      <div> </div>\n    )\n  }\n  let country = person.pos_info ? (person.pos_info.country ? person.pos_info.country.name : \"\") : \"\";\n  let age = person.birth_date ? person.birth_date.substring(0, 4) : \"\";\n  let city = person.pos_info ? (person.pos_info.city ? person.pos_info.city.name : \"\") : \"\";\n  person.jobs = person.jobs?.[0]?.title?.name || \"\";\n  person.schools = person.schools?.[0]?.name || \"\";\n  return (\n    <div className=\"text-justify text-wrap\">\n      {person.name ? (<div> <span className=\"font-weight-bold\">Name:  </span> {person.name} </div>) : null}\n      {person.birth_date ? (<div> <span className=\"font-weight-bold\">Date of Birth:  </span> {age} </div>) : null}\n      {person.distance_mi ? (<div> <span className=\"font-weight-bold\">Distance (miles):  </span> {person.distance_mi} </div>) : null}\n      {city ? (<div> <span className=\"font-weight-bold\">Location:  </span> {city}, {country}  </div>) : null}\n      {person.bio ? (<div> <span className=\"font-weight-bold\">Bio:  </span> {person.bio} </div>) : null}\n      {person.jobs ? (<div> <span className=\"font-weight-bold\">Job:  </span> {person.jobs} </div>) : null}\n      {person.schools ? (<div> <span className=\"font-weight-bold\">Schools:  </span> {person.schools} </div>) : null}\n    </div>\n  )\n}\n\nexport default Info;","import React from 'react';\nimport AppSettingsService from '../settings/AppSettingsService';\n\nclass PicWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    let { photos, name  } = this.props;\n    this.personName = name;\n    this.isToShowPhotos = AppSettingsService.isToShowPhotos;\n    this.ind = 0;\n    let firstPic = this.isToShowPhotos ? photos[this.ind].url : null;\n    this.state = {\n      photos: photos,\n      imgSrc: firstPic\n    };\n  }\n\n  componentWillUnmount() {\n  }\n  componentDidMount() {\n  }\n\n  click = () => {\n    if (!this.isToShowPhotos) {\n      return;\n    }\n    if (this.state.photos.length < 2) {\n      return;\n    }\n    if (this.ind < this.state.photos.length - 1) {\n      this.ind++;\n    } else {\n      this.ind = 0;\n    }\n    this.setState({\n      imgSrc: this.state.photos[this.ind].url\n    });\n  }\n\n  render() {\n    if (this.isToShowPhotos) {\n      return (\n        <div className=\"container-fluid px-0\">\n          <img onClick={this.click} src={this.state.imgSrc} alt=\"some image\" className='img-fluid w-100'/>\n        </div>\n      );\n    } else  {\n      return (\n        <div>\n          <label className=\"text-center\">{this.personName} </label>\n        </div>\n      );\n    }\n\n  }\n}\nexport default PicWrapper;\n","import React from 'react';\nimport LocationPicker from \"react-leaflet-location-picker\";\nimport { withRouter } from 'react-router-dom'\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport Info from \"../building-blocks/Info\";\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport AjaxService from '../services/AjaxService'\nimport Const from '../services/Constants'\n\nclass UserView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      profile: this.props?.data?.profile?.data,\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n  }\n  render() {\n    var profile = this.state?.profile\n    if (!profile) {\n      return (\n        <div></div>\n      )\n    }\n    let pos = profile?.pos ? [profile.pos.lat, profile.pos.lon] : [0, 0]\n\n    let postLocation = (args) => {\n      let newMsgObj = {\n        lat: args[0],\n        lon: args[1]\n      }\n      AjaxService.doPost(Const.URLS.SEND_LOCATION, newMsgObj, {})\n    }\n\n    let person = [{\n      image: (<PicWrapper photos={profile.photos} name={profile.name} />),\n      info: (<Info person={profile} />)\n    }]\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    let pointVals = [pos];\n    const pointMode = {\n      banner: false,\n      control: {\n        values: pointVals,\n        onClick: point => {\n          pointVals = [point]\n          pointMode.control.values = [point];\n          console.log(pointVals);\n          postLocation(point);\n        },\n        onRemove: point =>\n          console.log(\"I've just been clicked for removal :(\", point)\n      }\n    };\n\n    const options = {\n      bindMap: true,\n      startPort: \"default\",\n      overlayAll: true,\n      showControls: false,\n      showInputs: false,\n      useDynamic: true,\n      pointMode: pointMode,\n      precision: 6\n    };\n\n    return (\n      <div>\n        <div>\n          <ReactTable\n            data={person}\n            columns={present}\n            sortable={false}\n            defaultPageSize={1}\n            showPagination={false}\n          />\n          <br />\n        </div><LocationPicker {...options} />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(UserView);\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\n\nclass MatchDecoratorService extends React.Component {\n\n  getUserData = (match, callbackFunc) => {\n    let userId = match?.person?._id;\n    let person = match.person || {};\n    let promise = AjaxService.doGet(Const.URLS.USER + userId, {});\n    promise.then((data) => {\n\n      let user = data?.data?.results;\n      match.user = user;\n      \n      person.distance_mi = user?.distance_mi;\n      person.name = user?.name || person?.name\n      person.birth_date = user?.birth_date || person?.birth_date\n      person.bio = user?.bio || person?.bio\n      person.jobs = user?.jobs || person.jobs\n      person.schools = user?.schools || person.schools\n      let posInfo = {city:{name: user?.city?.name }, \n          country:{name: user?.city?.region }};\n      person.pos_info = person?.pos_info || posInfo;\n\n      callbackFunc(match);\n    }).catch((e) => {\n      console.error(e);\n      person.error = e\n      callbackFunc(match);\n    })\n  }\n\n}\nexport default new MatchDecoratorService();\n","import React from 'react';\n\nclass OnePicWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgSrc: props.src\n    };\n    this.condition = props.condition;\n    this.changeHandler = props.changeHandler;\n    this.match = props.match;\n  }\n\n  componentWillUnmount() {\n  }\n  componentDidMount() {\n  }\n\n  doClick = (e) => {\n    this.changeHandler(e, this.match);\n  }\n\n  render() {\n    if (this.condition) {\n      return (\n        <div className=\"container-fluid px-0\">\n          <img onClick={this.doClick} src={this.state.imgSrc} alt=\"new\" className='img-fluid w-100' />\n        </div>\n      );\n    } else {\n      return (\n        <div onClick={this.doClick}>\n          <label className=\"text-center\">{this.match.person.name}</label>\n        </div>\n      );\n    }\n\n  }\n}\nexport default OnePicWrapper;\n","import React from 'react';\nimport store from '../store';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport MatchDecoratorService from '../services/MatchDecoratorService';\nimport \"react-table/react-table.css\";\nimport OnePicWrapper from '../building-blocks/OnePicWrapper';\nimport ReactTable from \"react-table\";\nimport { withRouter } from 'react-router-dom';\n\nclass Friends extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showUser: false,\n      isVisible: false,\n      msgMatches: [],\n      sortingFunc: this.sortByLastActivityDate\n    };\n  }\n\n  sortByLastActivityDate = (a, b) => {\n    let timeA = new Date(a.last_activity_date).getTime();\n    let timeB = new Date(b.last_activity_date).getTime();\n    return timeB - timeA;\n  }\n\n  applySorting = (arrToBeSorted, sortingFunc) => {\n    try {\n      arrToBeSorted.sort(sortingFunc);\n    } catch (e) {\n      console.error(e);\n    }\n    return arrToBeSorted;\n  }\n\n  getUserData = (event, match) => {\n    let clBack = (match) => {\n      this.props.history.push({\n        pathname: '/friend',\n        state: { args: match }\n      })\n    }\n    MatchDecoratorService.getUserData(match, clBack);\n  }\n\n  render() {\n    let dt = store.getStore();\n\n    let friends = dt.update.data.matches;\n\n    this.applySorting(friends, this.state.sortingFunc);\n\n    let persons = friends.map(match => {\n      let prsn = match.person\n      let obj;\n      if (prsn) {\n        let picProps = {\n          condition: AppSettingsService.isToShowPhotos,\n          src: prsn.photos[0].url,\n          match: match,\n          changeHandler: this.getUserData\n        }\n      obj = {\n        firstName: prsn.name,\n        lastName: prsn.birth_date,\n        image: (<OnePicWrapper { ...picProps}/>)\n      }\n    }\n      return { ...obj };\n    });\n\n    const present = [\n      {\n        columns: [\n          {\n            Header: \"Image\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"First Name\",\n            accessor: \"firstName\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            sortable={false}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Friends);","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types'\r\n\r\nBtnLink.propTypes = {\r\n    label: PropTypes.string,\r\n    data: PropTypes.object,\r\n    pathname: PropTypes.string\r\n};\r\n\r\nfunction BtnLink(props) {\r\n    return (\r\n        <div>\r\n            <Link to={{ pathname: props.pathname, state: { data: props.data } }}>\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                    {props.label}\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BtnLink\r\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport BtnLink from \"../building-blocks/BtnLink\";\nimport Info from \"../building-blocks/Info\";\nimport NotesService from '../notes/NotesService';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport CashService from '../services/CashService';\n\nclass OneFriend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.allBookmarks = null;\n  }\n\n  remove = (userId) => {\n    NotesService.removeBookmark(userId);\n  }\n\n  save = (userId) => {\n    NotesService.saveBookmark(userId);\n  }\n\n  isBookmarked = (userId) => {\n    return this.allBookmarks[userId] !== undefined && this.allBookmarks[userId] !== null;\n  }\n\n  render() {\n    let { args } = this.props.location.state;\n    this.allBookmarks = CashService.getBookmarksAsObject();\n    let InfoWithButton = () => (\n      <div>\n        <BtnLink label=\"Chat\" data={args} pathname=\"/chat\" />\n        <div className=\"mt-1\">\n          {!this.isBookmarked(args.person._id) ? <button type=\"button\" className=\"btn btn-success\"\n            onClick={() => this.save(args.person._id)}> <span>&#9734;</span> </button> : null}\n\n          {this.isBookmarked(args.person._id) ? <button type=\"button\" className=\"btn btn-danger\"\n            onClick={() => this.remove(args.person._id)}> <span>&#9734;</span></button> : null}\n\n          <button type=\"button\" disabled={true} className=\"btn btn-danger ml-2 float-right\" onClick={this.isBookmarked}> Unlike </button>\n        </div>\n        <Info person={args.person} />\n      </div>\n    )\n    let person = [{\n      image: (<PicWrapper photos={args.person.photos} name={args.person.name} />),\n      info: (<InfoWithButton />)\n    }]\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable\n            data={person}\n            columns={present}\n            sortable={false}\n            defaultPageSize={1}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default OneFriend;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport AjaxService from '../services/AjaxService';\nimport NotesService from '../notes/NotesService';\nimport CashService from '../services/CashService';\nimport Const from '../services/Constants';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport BtnLink from \"../building-blocks/BtnLink\";\nimport Info from \"../building-blocks/Info\";\n\nclass MoreFriends extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allFr: []\n    };\n    //  this.abortController = new AbortController();\n    this.isMountedOk = true;\n    this.allBookmarks = null;\n  }\n\n  getBookmarksAsObject = () => {\n    this.allBookmarks = CashService.getBookmarksAsObject();\n  }\n\n  componentDidMount() {\n    this.getNewFriends(this.getBookmarksAsObject);\n    this.isMountedOk = true;\n  }\n\n  componentWillUnmount() {\n    this.isMountedOk = false;\n  }\n\n  getNewFriends = (callBack) => {\n    let promise = AjaxService.doGet(Const.URLS.NEW_FRIENDS, {})\n    promise.then((data) => {\n      let allFr = data?.data?.results;\n      if (!this.isMountedOk) {\n        return;\n      }\n      callBack()\n      this.setState({ allFr: allFr });\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  pass = (userId) => {\n    let promise = AjaxService.doGet(Const.URLS.PASS + userId, {})\n    promise.then((data) => {\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  like = (userId) => {\n    let promise = AjaxService.doGet(Const.URLS.LIKE + userId, {})\n    promise.then((data) => {\n      console.log(data);\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  isBookmarked = (userId) => {\n    return this.allBookmarks[userId] !== undefined && this.allBookmarks[userId] !== null;\n  }\n\n  render() {\n    let InfoWrapper = (args) => {\n      let { person } = args;\n\n      return (\n        <div className=\"text-justify text-wrap\">\n          <div>\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => this.like(person._id)}> Like </button>\n            <button type=\"button\" className=\"btn btn-danger ml-2\" onClick={() => this.pass(person._id)}> Pass </button>\n\n            {!this.isBookmarked(person?._id) ? <button type=\"button\" className=\"btn btn-primary float-right ml-2\"\n              onClick={() => NotesService.saveBookmark(person?._id)}> <span>&#9734;</span> </button> : null}\n            {this.isBookmarked(person?._id) ? <button type=\"button\" className=\"btn btn-danger float-right ml-2\"\n              onClick={() => NotesService.removeBookmark(person?._id)}> <span>&#9734;</span> </button> : null}\n          </div>\n          <Info person={person} />\n        </div>\n      )\n    }\n\n    let Pic = args => (<PicWrapper photos={args.photos} name={args.name} />)\n\n    let allFr = this.state.allFr;\n\n    let persons = allFr.map(one => {\n      let obj = {\n        info: (<InfoWrapper person={one} />),\n        image: (<Pic photos={one.photos} name={one.name} />)\n      }\n      return { ...obj };\n    });\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div className=\"text-justify text-center\">\n          <BtnLink label=\"Friend Requests\" data={null} pathname=\"/pal-requests\" />\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.getNewFriends(this.getBookmarksAsObject)}> Reload </button>\n        </div>\n\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            sortable={false}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\nexport default MoreFriends;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport AjaxService from '../services/AjaxService'\nimport Const from '../services/Constants';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\n\n\n\nclass FriendRequests extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allFr: [],\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n    this.abortController = new AbortController();\n    this.isMountedOk = true;\n  }\n\n  componentDidMount() {\n    this.isMountedOk = true;\n    this.getFriendRequests();\n  }\n\n  componentWillUnmount() {\n    this.isMountedOk = false;\n  }\n\n  getFriendRequests = () => {\n    let promise = AjaxService.doGet(Const.URLS.FAST_MATCH, {})\n    promise.then((data) => {\n      if (!this.isMountedOk || !data?.data?.data?.results) {\n        return;\n      }\n\n      this.setState({\n        allFr: data.data.data.results\n      })\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n\n\n  render() {\n    let Info = args => <div className=\"text-justify text-wrap\"> {args.info} </div>;\n    let Pic = args => (<PicWrapper photos={args.photos} />);\n\n    let allFr = this.state.allFr;\n\n    let persons = allFr.map(one => {\n      let obj = {\n        info: (<Info info={one.user._id} />),\n        image: (<Pic photos={one.user.photos} />)\n      }\n      return { ...obj };\n    });\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div className=\"text-center p-1 \">\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.getFriendRequests()}> Reload </button>\n        </div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            sortable={false}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            showPagination={false}\n            style={{\n              width: '100%',\n              height: '30%',\n            }}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\nexport default FriendRequests;\n\n//{\"status\":200,\"match\":false,\"likes_remaining\":100,\"X-Padding\":\"{*meta*:{*code*:200,*requestId*:*59a45921351e3d43b07028b5*},*response*:{*venue*:{*id*:*412d2800f964a520df0c1fe3*,*name*:*Central Park*,*contact*:{*phone*:*2123106600*,*formattedPhone*:*(212) 310-6600*,*twitter*:*centralparknyc*,*instagram*:*centralparknyc*,*facebook*:*37965424481*,*facebookUsername*:*centralparknyc*,*facebookName*:*Central Park*},*location*:{*address*:*59th St to 110th St*,*crossStreet*:*5th Ave to Central Park West*,*lat*:40.78408342593807,*lng*:-73.96485328674316,*postalCode*:*10028*,*cc*:*US*,*city*:*New York*,*state*:*NY*,*country*:*United States*,*formattedAddress*:[*59th St to 110th St (5th Ave to Central Park West)*,*New York, NY 10028*,*United States*]},*canonicalUrl*:*https://foursquare.com/v/central-park/412d2800f964a520df0c1fe3*,*categories*:[{*id*:*4bf58dd8d48988d163941735*,*name*:*Park*,*pluralName*:*Parks*,*shortName*:*Park*,*icon*:{*prefix*:*https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_*,*suffix*:*.png*},*primary*:true}],*verified*:true,*stats*:{*checkinsCount*:364591,*usersCount*:311634,*tipCount*:1583,*visitsCount*:854553},*url*:*http://www.centralparknyc.org*,*likes*:{*count*:17370,*summary*:*17370 Likes*},*rating*:9.8,*ratingColor*:*00B551*,*ratingSignals*:18854,*beenHere*:{*count*:0,*unconfirmedCount*:0,*marked*:false,*lastCheckinExpiredAt*:0},*photos*:{*count*:26681,*groups*:[{*type*:*venue*,*name*:*Venue photos*,*count*:26681,*items*:[{*id*:*513bd223e4b0e8ef8292ee54*,*createdAt*:1362874915,*source*:{*name*:*Instagram*,*url*:*http://instagram.com*},*prefix*:*https://igx.4sqi.net/img/general/*,*suffix*:*/655018_Zp3vA90Sy4IIDApvfAo5KnDItoV0uEDZeST7bWT-qzk.jpg*,*width*:612,*height*:612,*user*:{*id*:*123456*,*firstName*:*J\"}\n\n// Request URL: https://api.gotinder.com/v2/fast-match/teasers?locale=en-GB\n// Request Method: GET\n// Status Code: 200 \n// Remote Address: 52.85.7.7:443\n// Referrer Policy: origin\n// access-control-allow-credentials: true\n// access-control-allow-headers: Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,platform,app-version,X-Auth-Token,x-accountkit-validation-code,token,fast-match-count,x-supported-image-formats,device_id,install-id,persistent-device-id,promo-code,campaign-name,app-session-id,app-session-time-elapsed,user-session-id,user-session-time-elapsed,advertising-id,encoded-device-carrier,encoded-device-model,x-external-token,x-refresh-token,x-recovery-token,x-access-token,Java-Script-Enabled,Color-Depth,Java-Enabled,Screen-Height,Screen-width,Time-Zone-Offset,language,Underage-Token,tinder-version\n// access-control-allow-methods: GET, POST, PUT, DELETE, OPTIONS\n// access-control-allow-origin: https://tinder.com\n// cache-control: no-cache, no-store, must-revalidate\n// content-encoding: gzip\n// content-type: application/json; charset=utf-8\n// date: Sat, 21 Dec 2019 08:10:56 GMT\n// status: 200\n// vary: Accept-Encoding\n// via: 1.1 db06bf8d1de11ce1e98664ab021137c1.cloudfront.net (CloudFront)\n// x-amz-cf-id: ZPmygL5V4uLR1bFn1hrRT1nwhOul1uN8HfDk3xyIve5KVifB_4OPdQ==\n// x-amz-cf-pop: SOF50-C1\n// x-cache: Miss from cloudfront\n// x-request-id: 829bc5c1-5531-45fd-a5fd-f13027f65d69\n\n\n// :authority: api.gotinder.com\n// :method: GET\n// :path: /v2/fast-match/teasers?locale=en-GB\n// :scheme: https\n// accept: application/json\n// accept-encoding: gzip, deflate, br\n// accept-language: en-GB,en-US;q=0.9,en;q=0.8,bg;q=0.7\n// app-session-id: d7e147fc-9d4d-42a8-bb7d-7a567c141aea\n// app-session-time-elapsed: 1733647\n// app-version: 1021800\n// origin: https://tinder.com\n// persistent-device-id: 4f54539a-f43e-4ca2-b273-49912acdecfc\n// platform: web\n// referer: https://tinder.com/\n// sec-fetch-mode: cors\n// sec-fetch-site: cross-site\n// tinder-version: 2.18.0\n// user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36\n// user-session-id: 062576c6-4aa3-4dd7-841b-eb1b88e6530d\n// user-session-time-elapsed: 1726069\n// x-auth-token: 5e7d4468-72f4-49da-974c-94796b697905\n// x-supported-image-formats: webp,jpeg","import React, { Component } from 'react'\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectPollInterval extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      interval: AppSettingsService.updatePollInterval\n    }\n  }\n\n  changeHandler = (e) => {\n    this.setState({\n      interval: e.target.value\n    })\n    AppSettingsService.updatePollInterval = e.target.value;\n    this.props.onSelectPollInterval(e.target.value);\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Poll interval for getting updates to be every:</label>\n          <select\n            className={this.props.styles}\n            value={this.state.interval}\n            onChange={this.changeHandler}>\n            <option value=\"10000\">10 sec</option>\n            <option value=\"20000\">20 sec</option>\n            <option value=\"40000\">40 sec</option>\n            <option value=\"50000\">50 sec</option>\n            <option value=\"60000\">1 min</option>\n            <option value=\"300000\">5 min</option>\n            <option value=\"600000\">10 min</option>\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectTextColor extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: AppSettingsService.getSetting(\"textColor\") || AppSettingsService.textColors[0]\n    }\n  }\n\n  changeHandler = (event) => {\n    let color = event.target.value;\n\n    AppSettingsService.applyClass(document.body, AppSettingsService.textColors, color);\n    AppSettingsService.persistSetting(\"textColor\", color);\n\n    this.setState({\n      selected: color\n    })\n    this.props.triggerRender();\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Select text color:</label>\n          <select\n            className={this.props.styles}\n            value={this.state.selected}\n            onChange={this.changeHandler}>\n            {AppSettingsService.textColors.map(\n              (color) => {\n                return (<option key={color.name} value={color.class}>{color.name}</option>);\n              }\n            )}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}","import React, { Component } from 'react';\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectBackgroundColor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: AppSettingsService.getSetting(\"bgColor\") || AppSettingsService.bgColors[0]\n    }\n  }\n\n  changeHandler = (event) => {\n    let color = event.target.value;\n\n    AppSettingsService.applyClass(document.body, AppSettingsService.bgColors, color);\n    AppSettingsService.persistSetting(\"bgColor\", color);\n\n    this.setState({\n      selected: color\n    })\n    this.props.triggerRender();\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Select background color:</label>\n          <select className={this.props.styles}\n            value={this.state.selected}\n            onChange={this.changeHandler}>\n            {AppSettingsService.bgColors.map(\n              (color) => {\n                return (<option key={color.name} value={color.class}>{color.name}</option>);\n              }\n            )}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Checkbox extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      condition: props.condition\n    }\n\n    this.changeHandler = props.changeHandler;\n    this.defaultChecked = props.defaultChecked;\n    this.label = props.label;\n  }\n\n  doChangeState = (e) => {\n    this.changeHandler(e);\n    this.setState({\n      condition: e.target.checked\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"form-check\">\n        <input className=\"form-check-input\" type=\"checkbox\" checked={this.state.condition} onChange={this.doChangeState} /> \n        <label className=\"form-check-label\"> {this.label} </label>\n      </div>\n    )\n  }\n}","import React from 'react';\r\nimport PollService from '../services/PollService';\r\nimport SelectPollInterval from './SelectPollInterval';\r\nimport AppSettingsService from './AppSettingsService';\r\nimport SelectTextColor from './SelectTextColor';\r\nimport SelectBackgroundColor from './SelectBackgroundColor';\r\nimport Checkbox from './Checkbox';\r\n\r\nclass AppSettings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      styles: AppSettingsService.getInputStyleClasses(),\r\n      isToShowPhotos: AppSettingsService.isToShowPhotos\r\n    };\r\n  }\r\n\r\n  onSelectPollInterval = (val) => {\r\n    PollService.startUpdatePoll(val);\r\n    this.setState({\r\n      pollInterval: val\r\n    })\r\n  }\r\n\r\n  triggerRender = () => {\r\n    this.setState({\r\n      styles: AppSettingsService.getInputStyleClasses()\r\n    })\r\n  }\r\n\r\n  toggleShowPicsCheckbox = (event) => { \r\n    AppSettingsService.isToShowPhotos = event.target.checked;\r\n    this.setState({\r\n      isToShowPhotos: AppSettingsService.isToShowPhotos\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SelectPollInterval styles={this.state.styles} onSelectPollInterval={this.onSelectPollInterval} />\r\n        <SelectBackgroundColor styles={this.state.styles} triggerRender={this.triggerRender} />\r\n        <SelectTextColor styles={this.state.styles} triggerRender={this.triggerRender} />\r\n        <Checkbox label=\"show photos\" condition={this.state.isToShowPhotos} changeHandler={this.toggleShowPicsCheckbox} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default AppSettings;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport BeanContextAware from '../services/BeanContextAware';\nimport CashService from '../services/CashService';\nimport Const from '../services/Constants'\nimport MatchDecoratorService from '../services/MatchDecoratorService';\nimport { withRouter } from 'react-router-dom';\n\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      beanId: props.beanId,\n      showUser: false,\n      isVisible: false,\n      msgMatches: []\n    };\n    this.initialTitle = document.title;\n  }\n\n  changeState = (obj) => {\n    this.setState(obj);\n  }\n\n  addMsgMatch = (mtch) => {\n    var pos = this.findInMsgMatches(mtch);\n    if (pos > -1) { // if found - do not add it again\n      return;\n    }\n    let msgMatches = this.state.msgMatches;\n    this.state.msgMatches.push(mtch);\n    this.setState({\n      msgMatches: msgMatches\n    })\n    this.toggleFlashTabTitle();\n  }\n\n  findInMsgMatches = (mtch) => {\n    let msgMatches = this.state.msgMatches\n    for (var i = 0, len = msgMatches.length; i < len; i++) {\n      if (msgMatches[i].id === mtch.id)\n        return i;\n    }\n    return -1;\n  }\n\n  removeMsgMatch = (mtch) => {\n    var pos = this.findInMsgMatches(mtch);\n    if (pos > -1) {\n      let msgMatches = this.state.msgMatches\n      msgMatches.splice(pos, 1);\n      this.setState(\n        { msgMatches: msgMatches },\n        () => this.toggleFlashTabTitle()\n      )\n    }\n  }\n\n  changeButtonVisibility = (obj) => {\n    this.setState(obj);\n  }\n\n  componentDidMount() {\n    BeanContextAware.add(this);\n  }\n\n  componentWillUnmount() {\n    BeanContextAware.remove(this);\n  }\n\n  toggleFlashTabTitle = () => {\n    if (this.state.msgMatches.length > 0 && !this.flashIntervalObj) {\n      this.startFlashTabTitle();\n    } else if (this.state.msgMatches.length == 0) {\n      this.stopFlashTabTitle();\n    }\n  }\n\n  startFlashTabTitle = () => {\n    this.flashIntervalObj = setInterval(\n      () => {\n        if (this.initialTitle === document.title) {\n          document.title = \"(\" + this.state.msgMatches.length + \") \" + this.initialTitle;\n        } else {\n          document.title = this.initialTitle;\n        }\n      }, 1000\n    );\n  }\n\n  stopFlashTabTitle = () => {\n    clearTimeout(this.flashIntervalObj);\n    this.flashIntervalObj = null;\n    document.title = this.initialTitle;\n  }\n\n  getUserData = (match) => {\n    let clBack = (match) => {\n      this.props.history.push({\n        pathname: '/friend',\n        state: { args: match }\n      })\n    }\n    MatchDecoratorService.getUserData(match, clBack);\n  }\n\n  goChat = (match) => {\n    this.props.history.push({\n      pathname: '/chat',\n      state: { data: match }\n    })\n  }\n\n  render() {\n    let Btn = (props) => (\n      <div>\n        <NavLink exact activeClassName=\"active\" to={props.to}>\n          <button type=\"button\" className=\"btn btn-primary\">\n            {props.label}\n          </button>\n        </NavLink>\n      </div>\n    )\n    let isVisibleNewMsgs = this.state.msgMatches.length ? true : false;\n\n    let BtnBadge = (props) => {\n      let mtch = props.data;\n      if (!mtch.messages || mtch.messages.length == 0) {\n        return (\n          <div>\n            <button onClick={() => { this.removeMsgMatch(mtch); this.getUserData(mtch) }} className=\"btn btn-primary\" >\n              New: {this.state.msgMatches.length} </button>\n          </div>\n        )\n      } else {\n        return (\n          <div>\n            <button onClick={() => this.goChat(mtch)} className=\"btn btn-primary\" >\n              New: {this.state.msgMatches.length} </button>\n          </div>\n        )\n      }\n    }\n\n    return (\n      <nav>\n        <div className=\"text-center\">\n          {this.state.isVisible ? <span className=\"float-left\"> {CashService.getPhone()} </span> : null}\n          <div className=\"btn-group\">\n            {!this.state.isVisible ? <Btn to=\"/home\" label=\"Home\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/user\" label=\"User\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/pals\" label=\"Pals\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/more-pals\" label=\"Get Pals\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/notes\" label=\"Notes\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/settings\" label=\"Settings\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/logout\" label=\"|->\" /> : null}\n            {(this.state.isVisible && isVisibleNewMsgs) ? <BtnBadge data={this.state.msgMatches[0]} /> : null}\n          </div>\n          {this.state.isVisible ? <span className=\"float-right\"> ver: {Const.VERSION}</span> : null}\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(Header);","import React from 'react';\r\nimport store from '../store'\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService';\r\nimport AppSettingsService from '../settings/AppSettingsService';\r\n\r\nclass EnterText extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: '',\r\n            store: props.data,\r\n            friendId: props.friendId,\r\n            triggerRenderFunc: props.triggerRenderFunc\r\n        }\r\n        this.getStyles = AppSettingsService.getInputStyleClasses;\r\n    }\r\n\r\n    createMessage = (match, store) => {\r\n        var dt = new Date();\r\n        return {\r\n            created_date: dt.toISOString(),\r\n            from: store.profile.data._id,\r\n            match_id: match.id,\r\n            message: this.state.value,\r\n            sent_date: dt.toISOString(),\r\n            timestamp: dt.getTime(),\r\n            to: match.person._id\r\n        }\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.key !== 'Enter') {\r\n            return;\r\n        }\r\n\r\n        let matches = store.update.data.matches;\r\n        for (let index = 0; index < matches.length; index++) {\r\n            const oneMatch = matches[index];\r\n\r\n            if (oneMatch.person._id === this.state.friendId) {\r\n                let newMsgObj = this.createMessage(oneMatch, this.state.store);\r\n                AjaxService.doPost(Const.URLS.SEND_MESSAGE, newMsgObj, {})\r\n                store.update.data.matches[index].messages.push(newMsgObj);\r\n                this.state.triggerRenderFunc();\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ value: '' });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        var elem = e.srcElement || e.target;\r\n        this.setState({ value: elem.value })\r\n    }\r\n\r\n    render() {\r\n        let inputProps = {\r\n            placeholder: 'Write...',\r\n            value: this.state.value,\r\n            onChange: this.onChange,\r\n            className: this.getStyles(),\r\n            onKeyPress: this.onKeyPress\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <input {...inputProps} type=\"text\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EnterText;\r\n","import React from 'react';\r\n\r\nclass MessageWrapper extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      let { msg } = this.props;\r\n      let msgDateObj = new Date(msg.timestamp);\r\n\r\n      let timeStr = msgDateObj.toLocaleTimeString();\r\n      let dateStr = msgDateObj.toLocaleDateString()\r\n      if (dateStr !== new Date().toLocaleDateString()) {\r\n        timeStr = timeStr + \",  \" + dateStr;\r\n      }\r\n\r\n      this.state = {\r\n          isSeen: msg.isSeen,\r\n          showDate: false,\r\n          date: timeStr\r\n      };\r\n    }\r\n\r\n    render() {\r\n        let { msg } = this.props;\r\n\r\n        let showHideDate = () => {\r\n            this.setState({ showDate: true });\r\n            setTimeout(\r\n                () => {\r\n                    this.setState({ showDate: false });\r\n                }, 5000);\r\n        }\r\n\r\n        return (\r\n            <div onClick={showHideDate}>\r\n                <p className=\"text-justify text-wrap\" >  {msg.message} </p>\r\n                {this.state.isSeen ? (<span className=\"badge badge-secondary text-justify text-wrap\">seen</span>) : null}\r\n                {this.state.showDate ? (<span className=\"badge small\" >  {this.state.date} </span>) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MessageWrapper;\r\n","import React, { Component } from 'react'\nimport BeanContextAware from '../services/BeanContextAware'\n\nexport default class Select extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      numberMsgShown: 10,\n      getStyles: props.getStyles\n    }\n  }\n\n  changeHandler = (e) => {\n    let chat1 = BeanContextAware.get('chat1');\n      this.setState({\n        numberMsgShown: e.target.value\n      })\n      if (chat1) {\n        chat1.changeState({ numberMsgShown: parseInt(e.target.value)});\n      }\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Number of messages to show:</label>\n          <select\n            className={this.state.getStyles()}\n            value={this.state.numberMsgShown}\n            onChange={this.changeHandler}>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n            <option value=\"50\">50</option>\n            <option value=\"70\">70</option>\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactTable from \"react-table\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport store from '../store'\r\nimport EnterText from './enterText'\r\nimport MessageWrapper from './messageWrapper'\r\nimport BeanContextAware from '../services/BeanContextAware'\r\nimport Select from './Select'\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService'\r\nimport AppSettingsService from '../settings/AppSettingsService';\r\n\r\nclass Chat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    let match = props.location.state.data;\r\n    let friendId = match.person._id;\r\n    let lastSeenMsg = match.seen ? match.seen.last_seen_msg_id : null;\r\n    this.state = {\r\n      lastSeenMsg: lastSeenMsg,\r\n      numberMsgShown: 10,\r\n      matchId: match.id,\r\n      store: store,\r\n      match: match,\r\n      friendId: friendId,\r\n      messages: match.messages\r\n    };\r\n    this.inputStyles = AppSettingsService.getInputStyleClasses;\r\n    this.isOnFocus = true;\r\n    this.isMountedOk = true;\r\n  }\r\n\r\n  onFocus = (ev) => {\r\n    this.isOnFocus = true;\r\n    this.deleteFromHeader();\r\n  }\r\n\r\n  onBlur = (ev) => {\r\n    this.isOnFocus = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    BeanContextAware.add(this);\r\n    window.addEventListener(\"focus\", this.onFocus);\r\n    window.addEventListener(\"blur\", this.onBlur);\r\n    this.isMountedOk = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    BeanContextAware.remove(this);\r\n    window.removeEventListener(\"focus\", this.onFocus);\r\n    window.removeEventListener(\"blur\", this.onBlur);\r\n    this.isMountedOk = false;\r\n  }\r\n\r\n  prepareMessages = (allMsgs, friendId, numberMsgShown) => {\r\n    let result = [];\r\n    result.length = numberMsgShown;\r\n\r\n    for (let ind = allMsgs.length - 1; 0 <= numberMsgShown; numberMsgShown-- , ind--) {\r\n\r\n      let msg = allMsgs[ind];\r\n\r\n      if (!msg) {\r\n        msg = {};\r\n      }\r\n\r\n      let transformedMsg = {};\r\n      result[numberMsgShown] = transformedMsg;\r\n\r\n      if (msg.from === friendId) {\r\n        transformedMsg.theirs = (<MessageWrapper msg={msg} />);\r\n      }\r\n      else {\r\n        transformedMsg.mine = (<MessageWrapper msg={msg} />);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  //call it to start render() in order to visualize the change\r\n  triggerRenderFunc = () => {\r\n    let match = store.getMatchById(this.state.match._id)\r\n    let lastSeenMsg = match.seen ? match.seen.last_seen_msg_id : null;\r\n    if (this.isMountedOk) {\r\n      this.setState({\r\n        lastSeenMsg: lastSeenMsg,\r\n        match: match,\r\n        messages: match.messages\r\n      })\r\n    }\r\n  }\r\n\r\n  changeState = (obj) => {\r\n    this.setState(obj)\r\n  }\r\n\r\n  sendSeen = (allMsgs) => {\r\n    if (!this.state.lastSeenMsg) {\r\n      console.log(\"empty value of 'lastSeenMsg'..\");\r\n    }\r\n\r\n    //clear notification for new friends, who have not send message:\r\n    if (!allMsgs || !allMsgs.length) {\r\n      this.deleteFromHeader();\r\n      return;\r\n    }\r\n\r\n    for (let index = allMsgs.length - 1; 0 <= index; index--) {\r\n\r\n      let msgWrapped = allMsgs[index];\r\n\r\n      if (!msgWrapped || !msgWrapped.theirs) {\r\n        continue;\r\n      }\r\n      let msg = msgWrapped.theirs.props.msg;\r\n\r\n      if (msg._id !== this.state.lastSeenMsg) {\r\n        AjaxService.doGet(Const.URLS.SEND_SEEN + msg.match_id + \"/\" + msg._id, {});\r\n        let match = this.state.match;\r\n        if (match.seen) {\r\n          match.seen.last_seen_msg_id = msg._id;\r\n        }\r\n\r\n        this.deleteFromHeader();\r\n        return;\r\n      }\r\n      if (msgWrapped.theirs) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteFromHeader = () => {\r\n    let header = BeanContextAware.get('header1');\r\n    if (header && this.isOnFocus) {\r\n      header.removeMsgMatch(this.state.match);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: this.state.match.person.name,\r\n            accessor: \"theirs\"\r\n          },\r\n          {\r\n            Header: \"Me\",\r\n            accessor: \"mine\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n    var reorderedMessages = this.prepareMessages(this.state.messages, this.state.friendId, this.state.numberMsgShown);\r\n\r\n    this.sendSeen(reorderedMessages);\r\n    let inputProps = {\r\n      data: this.state.store,\r\n      friendId: this.state.match.person._id,\r\n      triggerRenderFunc: this.triggerRenderFunc\r\n    }\r\n    if (this.isMountedOk) {\r\n      return (\r\n        <div><Select getStyles={this.inputStyles} />\r\n          <div>\r\n            <ReactTable\r\n              data={reorderedMessages}\r\n              columns={present}\r\n              defaultPageSize={reorderedMessages.length}\r\n              pageSize={reorderedMessages.length}\r\n              showPagination={false}\r\n              bordered={false}\r\n              sortable={false}\r\n  \r\n            />\r\n            <div>\r\n              <EnterText {...inputProps} />\r\n            </div>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      )\r\n    } \r\n    return (\r\n      <div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\nexport default withRouter(Chat);\r\n","import React from 'react';\r\nimport \"react-table/react-table.css\"\r\nimport ReactTable from \"react-table\";\r\nimport Info from \"../building-blocks/Info\";\r\nimport PicWrapper from \"../building-blocks/PicWrapper\";\r\nimport NotesService from './NotesService';\r\nimport CashService from '../services/CashService';\r\nimport AjaxService from '../services/AjaxService';\r\nimport Const from '../services/Constants';\r\nimport MatchDecoratorService from '../services/MatchDecoratorService';\r\n\r\nclass Notes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      match: null\r\n    };\r\n    this.index = 0;\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.isMountedOk = true;\r\n  // }\r\n\r\n  componentWillMount() {\r\n    this.allBookmarks = CashService.getBookmarksAsObject();\r\n    let all = CashService.getBookmarks();\r\n\r\n    let id = all[this.index]\r\n    if (!id) {\r\n      return;\r\n    }\r\n    let mtch = this.formDummyMatch(id);\r\n\r\n    MatchDecoratorService.getUserData(mtch, this.processUserData);\r\n  }\r\n\r\n  saveAllByPhone = function () {\r\n    NotesService.saveAllByPhone();\r\n  }\r\n\r\n  getOne = function () {\r\n    NotesService.getOne();\r\n  }\r\n\r\n  getBookmarks = function () {\r\n    NotesService.getBookmarks();\r\n  }\r\n\r\n  delete = function () {\r\n    NotesService.delete();\r\n  }\r\n\r\n  formDummyMatch(id) {\r\n    return {\r\n      person: { _id: id }\r\n    }\r\n  }\r\n\r\n\r\n  pass = (userId) => {\r\n    let promise = AjaxService.doGet(Const.URLS.PASS + userId, {})\r\n    promise.then((data) => {\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  like = (userId) => {\r\n    let promise = AjaxService.doGet(Const.URLS.LIKE + userId, {})\r\n    promise.then((data) => {\r\n      console.log(data);\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  processUserData = (match) => {\r\n    if (!!match?.person?.error) {\r\n      try {\r\n        console.log('User id' + this.match?.person?._id + \" will be removed from Bookmarks list\");\r\n        NotesService.removeBookmark(this.match?.person?._id);\r\n        this.match = null;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    this.match = match;\r\n    this.setState({\r\n      match: match\r\n    })\r\n  }\r\n\r\n  getNext = () => {\r\n    let all = CashService.getBookmarks();\r\n\r\n    if (this.index < all.length - 1) {\r\n      this.index++;\r\n    } else {\r\n      this.index = 0;\r\n    }\r\n    let id = all[this.index]\r\n    let mtch = this.formDummyMatch(id);\r\n    MatchDecoratorService.getUserData(mtch, this.processUserData);\r\n  }\r\n\r\n  isBookmarked = (userId) => {\r\n    return this.allBookmarks[userId] !== undefined && this.allBookmarks[userId] !== null;\r\n  }\r\n\r\n  render() {\r\n    if (!this.match) {\r\n      return (\r\n        <div><button type=\"button\" className=\"btn btn-primary\" onClick={this.getNext}> next </button></div>\r\n      )\r\n    }\r\n    let match = this.match;\r\n\r\n    let InfoWithButton = () => {\r\n      let userId = match?.person?._id;\r\n      return (\r\n\r\n        <div>\r\n          <div className=\"text-justify text-wrap\">\r\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => this.like(userId)}> Like </button>\r\n            <button type=\"button\" className=\"btn btn-danger ml-2\" onClick={() => this.pass(userId)}> Pass </button>\r\n\r\n            {!this.isBookmarked(userId) ? <button type=\"button\" className=\"btn btn-primary float-right ml-2\"\r\n              onClick={() => NotesService.saveBookmark(userId)}> <span>&#9734;</span> </button> : null}\r\n\r\n            {this.isBookmarked(userId) ? <button type=\"button\" className=\"btn btn-danger float-right ml-2\"\r\n              onClick={() => NotesService.removeBookmark(userId)}> <span>&#9734;</span> </button> : null}\r\n\r\n          </div>\r\n          <Info person={match?.person} />\r\n        </div>\r\n      )\r\n    }\r\n    let Pic = args => (<PicWrapper photos={args.photos} name={args.name} />);\r\n    let person = [{\r\n      image: (<Pic photos={match?.user?.photos} name={match?.user?.name} />),\r\n      info: (<InfoWithButton />)\r\n    }]\r\n\r\n    let present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: \"Photos\",\r\n            accessor: \"image\"\r\n          },\r\n          {\r\n            Header: \"Info\",\r\n            accessor: \"info\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"text-justify text-wrap text-center float-center\">\r\n          <button type=\"button\" disabled={true} className=\"btn btn-primary\" onClick={this.getNext}> prev </button>\r\n          <button type=\"button\" disabled={true} className=\"btn btn-secondary\"> all: {CashService.getBookmarks()?.length} </button>\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={this.getNext}> next </button>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <ReactTable\r\n            data={person}\r\n            columns={present}\r\n            sortable={false}\r\n            defaultPageSize={1}\r\n            showPagination={false}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Notes;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport CashService from './services/CashService';\nimport AppSettingsService from './settings/AppSettingsService';\nimport PollService from './services/PollService';\nimport NotesService from './notes/NotesService';\nimport Home from './Home';\nimport PhoneForm from './auth/PhoneForm';\nimport ConfirmCode from './auth/confirmCode';\nimport UserView from './userView/userView';\nimport Friends from './userView/friends';\nimport OneFriend from './userView/oneFriend';\nimport MoreFriends from './userView/MoreFriends';\nimport FriendRequests from './userView/FriendRequests';\nimport AppSettings from './settings/AppSettings';\nimport Header from './building-blocks/header';\nimport Chat from './chat/chat.js';\nimport Notes from './notes/Notes';\nimport store from './store';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nconst App = () => {\n  return (\n    <div className=\"container\" style={{ paddingTop: 10 }}>\n\n      <Router>\n        <Header beanId=\"header1\" />\n        <Switch>\n          < Route exact path=\"/\" component={Home} />\n          < Route path=\"/user\" render={() => <UserView data={store} />} />\n          < Route path=\"/phone\" component={PhoneForm} />\n          < Route path=\"/friend\" component={OneFriend} />\n          < Route path=\"/chat\" render={() => <Chat beanId=\"chat1\"/>} />\n          < Route path=\"/notes\" render={() => <Notes beanId=\"notes1\"/>} />\n          < Route path=\"/pals\" render={() => <Friends data={store.updates} />} />\n          < Route path=\"/more-pals\" render={() => <MoreFriends data={store.updates} />} />\n          < Route path=\"/pal-requests\" render={() => <FriendRequests data={store.updates} />} />\n          < Route path=\"/settings\"render={() => <AppSettings beanId=\"appSettings1\"/>} />\n          < Route path=\"/confirm-token\" component={ConfirmCode} />\n          < Route path=\"*\" component={Home} />\n        </Switch>\n      </Router>\n    </div >\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render( <App/> , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}