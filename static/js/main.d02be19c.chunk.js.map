{"version":3,"sources":["services/Constants.js","services/CashService.js","settings/AppSettingsService.js","services/AjaxService.js","services/BeanContextAware.js","store.js","services/PollService.js","Home.js","building-blocks/RenderForm.js","auth/PhoneForm.js","auth/confirmCode.js","building-blocks/Info.js","building-blocks/PicWrapper.js","userView/userView.js","services/MatchDecoratorService.js","userView/friends.js","building-blocks/BtnLink.js","userView/oneFriend.js","userView/MoreFriends.js","userView/FriendRequests.js","settings/SelectPollInterval.js","settings/SelectTextColor.js","settings/SelectBackgroundColor.js","settings/AppSettings.js","building-blocks/header.js","chat/enterText.js","chat/messageWrapper.js","chat/Select.js","chat/chat.js","App.js","serviceWorker.js","index.js"],"names":["ipAdress","Const","URLS","BASE_URL","AUTH","PHONE","GET_TOKEN","UPDATES","PROFILE","USER","SEND_MESSAGE","SEND_LOCATION","NEW_FRIENDS","SEND_SEEN","FAST_MATCH","LIKE","PASS","LOCAL_CASH_VAR_NAME","AUTH_HEADER_NAME","PHONE_HEADER_NAME","lsobj","result","cashVarName","ls","localStorage","getItem","setItem","JSON","stringify","parse","error","console","log","removeItem","getLocalStorage","setLocalStorage","obj","Error","private_____persistLocalStorage","parseLocalStorage","React","Component","props","applySettingsFromLocalStorage","CashService","textColor","getSetting","textColors","applyClass","document","body","bgColor","bgColors","persistSetting","settingName","settingObject","phone","settings","element","colors","selectedColor","forEach","color","classList","remove","class","add","getInputStyleClasses","updatePollInterval","execute","method","url","data","headers","axios","doPost","getHeaders","doGet","authHeaderName","phoneHeaderName","bean","state","beanId","context","warn","get","reducer","combineReducers","form","reduxFormReducer","store","window","devToolsExtension","createStore","functionsQueue","addToFunctionsQ","funct","push","length","shift","funcToCall","getStore","getMatchById","id","matches","update","i","_id","addToStore","key","value","checkIfLogged","onSuccess","onFailure","AjaxService","then","getUpdates","getLastActivityDate","startUpdatePoll","AppSettingsService","catch","e","mergeUpdates","updates","matchUpdate","oldMatch","addToUnreadMessagesBadge","newMsgs","messages","newMsgsCount","y","splice","concat","lastSeenMsg","seen","last_seen_msg_id","lastActivityDate","last_activity_date","markLastUneadMessages","newLastSeenMsgId","oldLastSeenMsgId","localUser","profile","ind","msg","from","mtch","header","BeanContextAware","addMsgMatch","lastDate","chat1","triggerRenderFunc","changeButtonVisibility","isVisible","stopUpdatePoll","seconds","pollInterval","pollIntervalObj","setInterval","clearTimeout","Home","hits","isLoading","to","eachComponent","input","label","type","placeholder","meta","touched","className","RenderForm","options","this","handleSubmit","fields","RenderFieldWrappedInstance","reduxForm","onSubmit","map","op","name","Field","onChange","onChangeFun","component","PhoneForm","handleChange","event","target","sendPhoneNum","history","preventDefault","isToUseCurrentSession","PollService","confirm","optns","withRouter","ConfirmCode","confirmToken","phoneNumber","status","token","Info","args","person","country","pos_info","age","birth_date","substring","city","distance_mi","bio","education","job","PicWrapper","click","photos","setState","imgSrc","isToShowPic","onClick","src","alt","UserView","pos","lat","lon","image","info","pointVals","pointMode","banner","control","values","point","newMsgObj","postLocation","onRemove","bindMap","startPort","overlayAll","showControls","showInputs","useDynamic","precision","columns","Header","accessor","sortable","defaultPageSize","showPagination","style","width","height","getTdProps","rowInfo","column","instance","handleOriginal","getUserData","match","callbackFunc","userId","user","results","Friends","sortByLastActivityDate","a","b","timeA","Date","getTime","applySorting","arrToBeSorted","sortingFunc","sort","MatchDecoratorService","pathname","showUser","msgMatches","friends","Pic","arg","persons","prsn","firstName","lastName","pageSize","BtnLink","OneFriend","location","MoreFriends","getNewFriends","allFr","pass","like","abortController","AbortController","InfoWrapper","one","FriendRequests","getFriendRequests","abort","SelectPollInterval","changeHandler","interval","onSelectPollInterval","styles","SelectTextColor","selected","triggerRender","SelectBackgroundColor","AppSettings","val","changeState","findInMsgMatches","toggleFlashTabTitle","len","removeMsgMatch","flashIntervalObj","startFlashTabTitle","stopFlashTabTitle","initialTitle","title","goChat","Btn","exact","activeClassName","isVisibleNewMsgs","EnterText","createMessage","dt","created_date","toISOString","match_id","message","sent_date","timestamp","onKeyPress","index","oneMatch","friendId","elem","srcElement","getStyles","inputProps","MessageWrapper","msgDateObj","timeStr","toLocaleTimeString","dateStr","toLocaleDateString","isSeen","showDate","date","setTimeout","Select","numberMsgShown","parseInt","Chat","prepareMessages","allMsgs","transformedMsg","theirs","mine","sendSeen","msgWrapped","deleteFromHeader","matchId","inputStyles","present","reorderedMessages","bordered","App","paddingTop","path","render","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d02be19c.chunk.js","sourcesContent":["let ipAdress = 'http://localhost:8484/';\n\nconst Const = {\n  URLS: {\n    BASE_URL: ipAdress,\n    AUTH: {\n      PHONE: ipAdress + 'requestCode',\n      GET_TOKEN: ipAdress + 'getToken/'\n    },\n    UPDATES: ipAdress + 'updates',\n    PROFILE: ipAdress + 'profile',\n    USER: ipAdress + 'user/',\n    SEND_MESSAGE: ipAdress + 'postMessage',\n    SEND_LOCATION: ipAdress + 'location',\n    NEW_FRIENDS: ipAdress + 'new-friends',\n    SEND_SEEN: ipAdress + 'seen/',\n    FAST_MATCH: ipAdress + 'fast-match',\n    LIKE: ipAdress + 'like/',\n    PASS: ipAdress + 'pass/'\n  },\n  LOCAL_CASH_VAR_NAME: '__TnDr__',\n  AUTH_HEADER_NAME: 'X-Auth-Token',\n  PHONE_HEADER_NAME: 'phone-number'\n}\n\nexport default Const;\n","import React from 'react';\nimport Const from './Constants';\n\nclass CashService extends React.Component {\n\n  [Const.PHONE_HEADER_NAME] = null;\n  [Const.AUTH_HEADER_NAME] = null;\n\n  lsobj = (() => {\n    let cashVarName = Const.LOCAL_CASH_VAR_NAME;\n    let ls = localStorage.getItem(cashVarName);\n    if (!ls) {\n      ls = {}\n      localStorage.setItem(cashVarName, JSON.stringify(ls));\n      return ls;\n    }\n    let result;\n    try {\n      result = JSON.parse(ls);\n    } catch (error) {\n      console.log(error);\n      localStorage.removeItem(cashVarName);\n    }\n    return result;\n  })();\n\n  getLocalStorage = () => {\n    return this.lsobj;\n  };\n\n  setLocalStorage = (obj) => {\n    if (typeof obj !== 'object') {\n      throw new Error(\"'obj' must be of type 'object'! \");\n    }\n    this.private_____persistLocalStorage(obj);\n    this.lsobj = obj;\n  };\n\n  parseLocalStorage = () => {\n    let ls = localStorage.getItem(Const.LOCAL_CASH_VAR_NAME);\n    return JSON.parse(ls);\n  };\n\n  private_____persistLocalStorage = (obj) => {\n    localStorage.setItem(Const.LOCAL_CASH_VAR_NAME, JSON.stringify(obj));\n  };\n\n}\n\nexport default new CashService();\n","import React from 'react';\r\nimport CashService from '../services/CashService';\r\nimport Const from '../services/Constants';\r\n\r\n//this singleton applies settings at startup:\r\nclass AppSettingsService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textColors = [\r\n      { \"name\": 'Gray', \"class\": 'text-muted' },\r\n      { \"name\": 'White', \"class\": 'text-white' },\r\n      { \"name\": 'Dark', \"class\": 'text-dark' },\r\n      { \"name\": 'Black', \"class\": 'text-body' }\r\n    ]\r\n\r\n    this.bgColors = [\r\n      { \"name\": 'Gray', \"class\": 'bg-secondary' },\r\n      { \"name\": 'Dark', \"class\": 'bg-dark' },\r\n      { \"name\": 'Light', \"class\": 'bg-light' }\r\n    ]\r\n\r\n    this.updatePollInterval = 20000;\r\n  }\r\n\r\n  applySettingsFromLocalStorage = () => {\r\n    let ls = CashService.getLocalStorage();\r\n    let phone = CashService[Const.PHONE_HEADER_NAME];\r\n\r\n    if (!ls[phone]) {\r\n      return;\r\n    }\r\n\r\n    let textColor = this.getSetting(\"textColor\") || this.textColors[0];\r\n    this.applyClass(document.body, this.textColors, textColor);\r\n\r\n    let bgColor = this.getSetting(\"bgColor\") || this.bgColors[0];\r\n    this.applyClass(document.body, this.bgColors, bgColor);\r\n  }\r\n\r\n  persistSetting = (settingName, settingObject) => {\r\n    let ls = CashService.getLocalStorage();\r\n    let phone = CashService[Const.PHONE_HEADER_NAME];\r\n\r\n    if (!phone || !ls[phone]) {\r\n      return;\r\n    }\r\n\r\n    let settings = ls[phone][\"settings\"];\r\n    if (!settings) {\r\n      settings = {};\r\n    }\r\n\r\n    settings[settingName] = settingObject;\r\n    ls[phone][\"settings\"] = settings;\r\n    CashService.setLocalStorage(ls);\r\n  }\r\n\r\n  getSetting = (settingName) => {\r\n    let ls = CashService.getLocalStorage();\r\n    let phone = CashService[Const.PHONE_HEADER_NAME];\r\n\r\n    if (!phone || !ls[phone]) {\r\n      return;\r\n    }\r\n    let settings = ls[phone][\"settings\"];\r\n    if (!settings) {\r\n      return;\r\n    }\r\n    return settings[settingName];\r\n  }\r\n\r\n  applyClass = (element, colors, selectedColor) => {\r\n    colors.forEach(color => {\r\n      element.classList.remove(color.class);\r\n    });\r\n\r\n    element.classList.add(selectedColor);\r\n  }\r\n\r\n  getInputStyleClasses = () => {\r\n    return \"form-control \" + (this.getSetting(\"textColor\") || \" \") +\r\n      \" \" + (this.getSetting(\"bgColor\") || \"\");\r\n  }\r\n}\r\nexport default new AppSettingsService();\r\n","import React from 'react';\nimport axios from 'axios';\nimport Const from './Constants';\nimport CashService from './CashService';\n\nclass AjaxService extends React.Component {\n\n  execute = (method, url, data, headers) => {\n    return axios({\n      method: method,\n      url: url,\n      data: data,\n      headers: headers\n    });\n  };\n\n  doPost = (url, data, headers) => {\n    return this.execute('post', url, data, this.getHeaders(headers));\n  };\n\n  doGet = (url, headers) => {\n    return this.execute('get', url, {}, this.getHeaders(headers));\n  };\n\n  getHeaders = (headers) => {\n    let authHeaderName = Const.AUTH_HEADER_NAME;\n    let phoneHeaderName = Const.PHONE_HEADER_NAME;\n    if (!headers) {\n      headers = {};\n    }\n\n    if (CashService[phoneHeaderName]) {\n      headers[phoneHeaderName] = CashService[phoneHeaderName];\n    }\n\n    if (CashService[authHeaderName]) {\n      headers[authHeaderName] = CashService[authHeaderName];\n    }\n    return headers;\n  };\n}\n\nexport default new AjaxService();\n","import React from 'react';\n\nclass BeanContextAware extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.context= {};\n  };\n\n  add = (bean) => {\n    if (!bean || !bean.state) {\n      throw new Error(\"Not allowed 'null' values for 'bean': \" + bean + \" !\");\n    }\n    let beanId = bean.state.beanId || bean.props.beanId;\n    if (!beanId) {\n      throw new Error(\"Not allowed 'null' value for 'beanId' \" + beanId  + \" !\" );\n    }\n    if (this.context[beanId]) {\n      console.warn(\"Bean with 'beanId': \" + beanId + \"is already registered under BeanContextAware!\");\n    }\n    this.context[beanId] = bean;\n  }\n\n  get = (beanId) => {\n    if (!beanId ) {\n      throw new Error(\"Not allowed 'null' value for 'beanId' \" + beanId + \" !\" );\n    }\n    return this.context[beanId];\n  }\n\n  remove = (bean) => {\n    if (!bean) {\n      throw new Error(\"Not allowed 'null' value for 'bean' \" + bean + \" !\" );\n    }\n    if ( typeof bean === 'string' ) {\n        delete this.context[bean];\n        return;\n    }\n    let beanId = bean.state.beanId || bean.props.beanId;\n    delete this.context[beanId];\n  }\n}\nexport default new BeanContextAware();\n","import { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer // mounted under \"form\"\n})\nconst store =\n  (window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore)(reducer)\n\nconst functionsQueue = [];\n\nlet addToFunctionsQ = (funct) => {\n  functionsQueue.push(funct);\n\n  while (functionsQueue.length > 0) {\n    let funcToCall = functionsQueue.shift()\n    funcToCall();\n  }\n}\n\nstore.getStore = () => {\n  // add dummy function as a placeholder\n  addToFunctionsQ(() => { });\n  return store;\n}\n\nstore.getMatchById = (id) => {\n  if (!id) {\n    throw new Error(\"'id' is not allowed to be: \" + id);\n  }\n  let matches = store.getStore().update.data.matches\n  for (var i = 0; i < matches.length; i++) {\n    if (id === matches[i]._id) {\n      return matches[i];\n    }\n  }\n  return null;\n}\n\nstore.addToStore = (key, value) => {\n  if (!key || typeof (key) != 'string') {\n    throw new Error(\"Only objects of type 'string' are allowed!\");\n  }\n\n  addToFunctionsQ(\n    function () {\n      store[key] = value;\n    }\n  );\n}\n\nexport default store;\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\nimport BeanContextAware from './BeanContextAware';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport store from '../store';\n\nclass PollService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n\n    this.last_activity_date = \"1984-08-01T00:00:00.000Z\";\n  };\n\n  checkIfLogged = (headers, onSuccess, onFailure) => {\n    let promise = AjaxService.doGet(Const.URLS.PROFILE, headers)\n    promise.then((data) => {\n      store.addToStore('profile', data);\n      onSuccess()\n      this.getUpdates(this.getLastActivityDate());\n      this.startUpdatePoll(AppSettingsService.updatePollInterval);\n\n    }).catch((e) => {\n      console.error(e);\n      onFailure()\n    })\n  }\n\n  mergeUpdates = (store, updates) => {\n    let matches = updates.data.matches;\n\n    for (let i = 0; i < matches.length; i++) {\n      let matchUpdate = matches[i];\n      let oldMatch = store.getMatchById(matchUpdate._id);\n      //merge brand new matches:\n      if (!oldMatch) {\n        store.getStore().update.data.matches.push(matchUpdate);\n        this.addToUnreadMessagesBadge(matchUpdate);\n        break;\n      }\n\n      //merge new messages:\n      let newMsgs = matchUpdate.messages;\n      let newMsgsCount = newMsgs.length;\n      for (let y = oldMatch.messages.length - 1; 0 <= newMsgsCount || 0 <= y; y-- , newMsgsCount--) {\n        if (oldMatch.messages[y] && !oldMatch.messages[y]._id) {\n          oldMatch.messages.splice(y, 1);\n        }\n      }\n      oldMatch.messages = oldMatch.messages.concat(newMsgs);\n\n      /// merge seen:\n      let lastSeenMsg = matchUpdate.seen ? matchUpdate.seen.last_seen_msg_id : null;\n      if (lastSeenMsg) {\n        if (!oldMatch.seen) {\n          oldMatch.seen = {};\n        }\n        oldMatch.seen.last_seen_msg_id = lastSeenMsg;\n      }\n\n      /// merge last_activity_date:\n      let lastActivityDate = matchUpdate.last_activity_date ? matchUpdate.last_activity_date : null;\n      if (lastActivityDate) {\n        oldMatch.last_activity_date = lastActivityDate;\n      }\n    }\n  }\n\n  markLastUneadMessages = (store, updates) => {\n    let matches = updates.data.matches;\n\n    for (let i = 0; i < matches.length; i++) {\n      let matchUpdate = matches[i];\n      let oldMatch = store.getMatchById(matchUpdate._id);\n\n      let newLastSeenMsgId = matchUpdate.seen ? matchUpdate.seen.last_seen_msg_id : null;\n      let oldLastSeenMsgId = oldMatch.seen ? oldMatch.seen.last_seen_msg_id : null;\n      var localUser = store.profile.data;\n\n      newLastSeenMsgId = newLastSeenMsgId || oldLastSeenMsgId;\n      if (!newLastSeenMsgId || !localUser || !localUser._id) {\n        continue;\n      }\n      let newMsgs = matchUpdate.messages;\n\n      for (var ind = newMsgs.length - 1; 0 <= ind; ind--) {\n        let msg = newMsgs[ind];\n\n        if (!msg.from) {\n          continue;\n        }\n\n        if (localUser._id !== msg.from) {\n\n          if (msg._id !== newLastSeenMsgId) {\n            this.addToUnreadMessagesBadge(oldMatch);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  addToUnreadMessagesBadge = (mtch) => {\n    let header = BeanContextAware.get('header1');\n    if (header) {\n      header.addMsgMatch(mtch)\n    }\n  }\n\n  getUpdates = (lastDate) => {\n    let header = BeanContextAware.get('header1');\n    let chat1 = BeanContextAware.get('chat1');\n    let data = {\n      \"last_activity_date\": lastDate\n    }\n\n    let promise = AjaxService.doPost(Const.URLS.UPDATES, data, {});\n    promise.then((data) => {\n      if (store.update) {\n        this.mergeUpdates(store, data);\n      } else {\n        console.log(data);\n        \n        store.addToStore('update', data);\n      }\n\n      this.markLastUneadMessages(store, data);\n\n      /// merge global (updates polling) last_activity_date:\n      this.last_activity_date = data.data.last_activity_date;\n\n      if (chat1) {\n        chat1.triggerRenderFunc();\n      }\n      if (header) {\n        header.changeButtonVisibility({ isVisible: true });\n      }\n    }).catch((e) => {\n      if (header) {\n        console.log(\"get updates errror \");\n        header.changeButtonVisibility({ isVisible: false })\n      }\n      this.stopUpdatePoll();\n      console.log(e);\n    })\n  }\n\n  startUpdatePoll = (seconds) => {\n    if (!seconds) {\n      console.error(\"error null val for 'seconds'\");\n      return;\n    }\n    this.stopUpdatePoll();\n    this.pollInterval = seconds\n    this.pollIntervalObj = setInterval(\n      () => {\n        this.getUpdates(this.getLastActivityDate());\n      }, seconds\n    );\n  }\n\n  getLastActivityDate = () => {\n    return this.last_activity_date;\n  }\n\n  stopUpdatePoll = () => {\n    if (this.pollIntervalObj) {\n      clearTimeout(this.pollIntervalObj)\n    }\n  }\n}\nexport default new PollService();\n","import React, {Component} from 'react';\nimport {  Link} from 'react-router-dom';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n\n    <div >\n    <h1>Welcome</h1>\n          <Link to=\"/phone\">  Login with phone</Link>\n            </div >\n     )}\n  }\n\n  export default Home;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport store from '../store'\nimport {Provider } from 'react-redux'\n\nconst eachComponent = ({ input, label, type, value, placeholder,  meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input className='form-control' {...input}  placeholder={placeholder}  type={type}/>\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n)\n\nclass RenderForm extends React.Component {\n\n  render() {\n    let {options} = this.props;\n    let handleSubmit = options.handleSubmit;\n    let fields = options.fields;\n    let RenderFieldWrapped = () => (\n      <div>  <form onSubmit={handleSubmit} >\n        {fields.map(op => (\n          <div key={op.name}>\n              <Field name={op.name} onChange={op.onChangeFun} component={eachComponent}\n                            type=\"input\" placeholder={op.placeholder} label={op.name}/>\n          </div>\n      ))\n    }\n  < input className=\"btn btn-primary\"  type = \"submit\"  value = \"Submit\" / >\n     </form>\n     </div>)\n\n\n    let RenderFieldWrappedInstance = reduxForm({\n      form: 'RenderFieldWrapped'\n    })(RenderFieldWrapped);\n\n    return (\n      <div>\n        <Provider store={store}>\n          <RenderFieldWrappedInstance options={options} />\n        </Provider>\n      </div>\n    )\n  }\n}\nexport default RenderForm\n","import React from 'react';\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport CashService from '../services/CashService';\nimport PollService from '../services/PollService';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport RenderForm from '../building-blocks/RenderForm';\nimport { withRouter } from 'react-router-dom';\n\nclass PhoneForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: ''\n    };\n  }\n\n  handleChange = event => {\n    this.state.phone = event.target.value;\n  };\n\n  sendPhoneNum = function (phone) {\n    let promise = AjaxService.doPost(Const.URLS.AUTH.PHONE, {\n      'phone': phone\n    }, {});\n\n    promise.then(() => {\n      CashService[Const.PHONE_HEADER_NAME] = phone;\n      this.props.history.push('/confirm-token');\n    }).catch((e) => {\n      CashService[Const.PHONE_HEADER_NAME] = null;\n      console.error(e);\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let { history } = this.props;\n    let phone = this.state.phone;\n\n    let ls = CashService.getLocalStorage();\n    if (this.isToUseCurrentSession(phone)) {\n      console.log(\"use current session:\");\n      CashService[Const.PHONE_HEADER_NAME] = phone;\n      CashService[Const.AUTH_HEADER_NAME] = ls[phone][Const.AUTH_HEADER_NAME];\n      AppSettingsService.applySettingsFromLocalStorage();\n      PollService.checkIfLogged({}, () => { history.push('/user') }, () => { history.push('/confirm-token') });\n    } else {\n      //do not use current session:\n      console.log(\"do not use current session:\");\n      CashService[Const.PHONE_HEADER_NAME] = phone;\n      if (ls && ls[phone] && ls[phone][Const.AUTH_HEADER_NAME]) {\n        delete ls[phone][Const.AUTH_HEADER_NAME];\n        CashService.setLocalStorage(ls);\n        AppSettingsService.applySettingsFromLocalStorage();\n      } \n      this.sendPhoneNum(phone);\n    }\n  }\n\n  isToUseCurrentSession = (phone) => {\n    let ls = CashService.getLocalStorage();\n\n    if (!ls[phone] || !ls[phone][Const.AUTH_HEADER_NAME]) {\n      return false;\n    }\n\n    let isToUseCurrent = window.confirm('A session with this phone numer: ' + phone\n      + ' already exists.\\nUse current session?');\n    return isToUseCurrent;\n  }\n\n  render() {\n    const optns = {\n      handleSubmit: this.handleSubmit,\n      fields: [\n        { name: 'Phone number', placeholder: 'Please, fill in ur phone number', onChangeFun: this.handleChange }\n      ]\n    }\n\n    return (\n      <div>\n        <RenderForm options={optns} />\n      </div >\n    )\n  }\n}\nexport default withRouter(PhoneForm);\n","import React from 'react';\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport PollService from '../services/PollService';\nimport CashService from '../services/CashService';\nimport RenderForm from '../building-blocks/RenderForm';\n//import './index.css';\nimport { withRouter } from 'react-router-dom';\n\nclass ConfirmCode extends React.Component {\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      confirmToken: ''\n    };\n  }\n\n  handleChange = event => {\n    this.state.confirmToken = event.target.value;\n    //this.setState({confirmToken: event.target.value});\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let phoneNumber = CashService[Const.PHONE_HEADER_NAME];\n    if (!phoneNumber) {\n      throw new Error(\"CashService[Const.PHONE_HEADER_NAME] is not allowed to be \" + phoneNumber);\n    }\n    let { history } = this.props;\n    let ls = CashService.getLocalStorage();\n    let promise = AjaxService.doGet(Const.URLS.AUTH.GET_TOKEN + this.state.confirmToken + \"/\" + phoneNumber);\n\n    promise.then(function (value) {\n      console.log(value);\n      if (value && value.status === 200 && value.data) {\n        let token = value.data[Const.AUTH_HEADER_NAME];\n\n        if (!ls[phoneNumber]) {\n          ls[phoneNumber] = {};\n        }\n\n        let headers = {\n          [Const.AUTH_HEADER_NAME] : token\n        }\n\n        let onSuccess = function() {\n          ls[phoneNumber][Const.AUTH_HEADER_NAME] = token;\n          CashService.setLocalStorage(ls);\n          CashService[Const.AUTH_HEADER_NAME] = token;\n          history.push('/user');\n        }\n\n        let onFailure = function() {\n          history.push('/phone');\n        }\n\n        PollService.checkIfLogged(headers, onSuccess, onFailure);\n      }\n    }).catch((e) => {\n      // delete cash[store.phoneNumber];\n      // delete store.phoneNumber;\n      // localStorage.setItem(cashVarName, JSON.stringify(cash));\n      console.log(e);\n    })\n\n  }\n\n  render() {\n    const optns = {\n      handleSubmit: this.handleSubmit,\n      fields: [\n        { name: 'Confirmation code', placeholder: 'Please, enter your confirmation code:', onChangeFun: this.handleChange }\n      ]\n    }\n    return (\n      <div >\n        <RenderForm options={optns} />\n      </div>\n    );\n  }\n}\nexport default withRouter(ConfirmCode)\n","import React from 'react';\n\nfunction Info(args) {\n  let { person } = args;\n  let country = person.pos_info ? (person.pos_info.country ? person.pos_info.country.name : \"\") : \"\";\n  let age = person.birth_date ? person.birth_date.substring(0, 4) : \"\";\n  let city = person.pos_info ? (person.pos_info.city ? person.pos_info.city.name : \"\") : \"\";\n  return (\n    <div className=\"text-justify text-wrap\">\n      {person.name ? (<div> <span className=\"font-weight-bold\">Name:  </span> {person.name} </div>) : null}\n      {person.birth_date ? (<div> <span className=\"font-weight-bold\">Date of Birth:  </span> {age} </div>) : null}\n      {person.distance_mi ? (<div> <span className=\"font-weight-bold\">Distance (miles):  </span> {person.distance_mi} </div>) : null}\n      {person.pos_info ? (<div> <span className=\"font-weight-bold\">Location:  </span> {city}, {country}  </div>) : null}\n      {person.bio ? (<div> <span className=\"font-weight-bold\">Bio:  </span> {person.bio} </div>) : null}\n      {person.education ? (<div> <span className=\"font-weight-bold\">Job:  </span> {person.education} </div>) : null}\n      {person.job ? (<div> <span className=\"font-weight-bold\">Job:  </span> {person.job} </div>) : null}\n    </div>\n  )\n}\n\nexport default Info;","import React from 'react';\n\nclass PicWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    let { photos } = this.props;\n    this.ind = 0;\n    this.isToShowPic = true;\n    this.state = {\n      photos: photos,\n      imgSrc: photos[this.ind].url\n    };\n  }\n\n  componentWillUnmount() {\n  }\n  componentDidMount() {\n  }\n\n  click = () => {\n    if (this.state.photos.length < 2) {\n      return;\n    }\n    if (this.ind < this.state.photos.length - 1) {\n      this.ind++;\n    } else {\n      this.ind = 0;\n    }\n    this.setState({\n      imgSrc: this.state.photos[this.ind].url\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid px-0\">\n        <img onClick={this.click} src={this.state.imgSrc} alt=\"some image\" className='img-fluid w-100' />\n      </div>\n    );\n  }\n}\nexport default PicWrapper;\n","import React from 'react';\nimport LocationPicker from \"react-leaflet-location-picker\";\nimport {withRouter}from 'react-router-dom'\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport Info from \"../building-blocks/Info\";\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport AjaxService from '../services/AjaxService'\nimport Const from '../services/Constants'\n\nclass UserView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      profile: this.props.data.profile.data,\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n  }\nrender() {\n  var profile = this.state.profile\n\n  let pos = profile.pos ? [profile.pos.lat, profile.pos.lon] : [0,0]\n\n  let postLocation = (args) => {\n    let newMsgObj = {\n      lat: args[0],\n      lon: args[1]\n    }\n    AjaxService.doPost(Const.URLS.SEND_LOCATION, newMsgObj, {})\n  }\n\n  let person = [{\n    image: (<PicWrapper photos={profile.photos} />),\n    info: (<Info person={profile}/>)\n  }]\n\n  let present = [\n    {\n      columns: [\n        {\n          Header: \"Photos\",\n          accessor: \"image\"\n        },\n        {\n          Header: \"Info\",\n          accessor: \"info\"\n        }\n      ]\n    }\n  ]\n\n    let pointVals = [pos];\n    const pointMode = {\n      banner: false,\n      control: {\n        values: pointVals,\n        onClick: point => {\n          pointVals = [point]\n          pointMode.control.values = [point];\n          console.log(pointVals);\n            postLocation(point);\n          },\n        onRemove: point =>\n          console.log(\"I've just been clicked for removal :(\", point)\n      }\n    };\n\n      const options = {\n        bindMap: true,\n        startPort: \"default\",\n        overlayAll: true,\n        showControls: false,\n        showInputs: false,\n        useDynamic: true,\n        pointMode:  pointMode,\n        precision: 6\n    };\n\n  return (\n    <div>\n      <div>\n        <ReactTable\n          data={person}\n          columns={present}\n          sortable={false}\n          defaultPageSize={1}\n          showPagination={false}\n          style={{\n            width: '100%',\n            height: '30%',\n            //  backgroundColor: '#dadada'\n          }}\n          getTdProps={(state, rowInfo, column, instance) => {\n            return {\n              onClick: (e, handleOriginal) => {\n                if (handleOriginal) {\n                  handleOriginal()\n                }\n              }\n            }\n          }}\n        />\n        <br />\n      </div><LocationPicker {...options} />\n    </div>\n  )\n}\n}\n\nexport default withRouter(UserView);\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\n\nclass MatchDecoratorService extends React.Component {\n\n  getUserData = (match, callbackFunc) => {\n    let userId = match.person._id;\n    let promise = AjaxService.doGet(Const.URLS.USER + userId, {});\n    promise.then((data) => {\n      match.user = data.data.results;\n      match.person.distance_mi = data.data.results.distance_mi;\n      callbackFunc(match);\n    }).catch((e) => {\n      console.error(e);\n    })\n  }\n\n}\nexport default new MatchDecoratorService();","import React from 'react';\nimport store from '../store';\nimport AjaxService from '../services/AjaxService';\nimport MatchDecoratorService from '../services/MatchDecoratorService';\n//import Const from '../services/Constants';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport { withRouter } from 'react-router-dom';\n\nclass Friends extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showUser: false,\n      isVisible: false,\n      msgMatches: [],\n      sortingFunc: this.sortByLastActivityDate\n    };\n  }\n\n  sortByLastActivityDate = (a, b) => {\n    let timeA = new Date(a.last_activity_date).getTime();\n    let timeB = new Date(b.last_activity_date).getTime();\n    return timeB - timeA;\n  }\n\n  applySorting = (arrToBeSorted, sortingFunc) => {\n    try {\n      arrToBeSorted.sort(sortingFunc);\n    } catch (e) {\n      console.error(e);\n    }\n    return arrToBeSorted;\n  }\n\n  getUserData = (match) => {\n   let clBack = (match) => {\n        this.props.history.push({\n        pathname: '/friend',\n        state: { args: match }\n      })\n    }\n    MatchDecoratorService.getUserData(match, clBack);\n  }\n\n  render() {\n    let dt = store.getStore();\n\n    let friends = dt.update.data.matches;\n\n    this.applySorting(friends, this.state.sortingFunc);\n\n    let Pic = (arg) => (\n      <div className=\"container-fluid px-0\">\n          <img src={arg.src} alt=\"new\" className='img-fluid w-100' onClick={() => this.getUserData(arg.match)}/>\n      </div>\n    )\n\n    let persons = friends.map(match => {\n      let prsn = match.person\n      let obj;\n      if (prsn) {\n       obj = {\n        firstName: prsn.name,\n        lastName: prsn.birth_date,\n        image: (<Pic src={prsn.photos[0].url} match={match} />)\n      }\n    }\n      return { ...obj };\n    });\n\n    const present = [\n      {\n        columns: [\n          {\n            Header: \"Image\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"First Name\",\n            accessor: \"firstName\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            sortable={false}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Friends);","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types'\r\n\r\nBtnLink.propTypes = {\r\n    label: PropTypes.string,\r\n    data: PropTypes.object,\r\n    pathname: PropTypes.string\r\n};\r\n\r\nfunction BtnLink(props) {\r\n    return (\r\n        <div>\r\n            <Link to={{ pathname: props.pathname, state: { data: props.data } }}>\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                    {props.label}\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BtnLink\r\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport BtnLink from \"../building-blocks/BtnLink\";\nimport Info from \"../building-blocks/Info\";\nimport PicWrapper from \"../building-blocks/PicWrapper\";\n\nclass OneFriend extends React.Component {\n\n  render() {\n    let { args } = this.props.location.state;\n    let InfoWithButton = () => (\n      <div>\n        <BtnLink label=\"Chat\" data={args} pathname=\"/chat\" />\n        <Info person={args.person}/>\n      </div>\n    )\n    let person = [{\n      image: (<PicWrapper photos={args.person.photos} />),\n      info: (<InfoWithButton />)\n    }]\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable\n            data={person}\n            columns={present}\n            sortable={false}\n            defaultPageSize={1}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default OneFriend;\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport AjaxService from '../services/AjaxService';\nimport Const from '../services/Constants';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport BtnLink from \"../building-blocks/BtnLink\";\nimport Info from \"../building-blocks/Info\";\n\nclass MoreFriends extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allFr: []\n    };\n    this.abortController = new AbortController();\n  }\n\n  componentDidMount() {\n    this.getNewFriends();\n  }\n\n  getNewFriends = () => {\n    let promise = AjaxService.doGet(Const.URLS.NEW_FRIENDS, {})\n    promise.then((data) => {\n      let allFr = data.data.results;\n      this.setState({ allFr: allFr });\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  pass = (userId) => {\n    let promise = AjaxService.doGet(Const.URLS.PASS + userId, {})\n    promise.then((data) => {\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  like = (userId) => {\n    let promise = AjaxService.doGet(Const.URLS.LIKE + userId, {})\n    promise.then((data) => {\n      console.log(data);\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  render() {\n    let InfoWrapper = (args) => {\n      let { person } = args;\n\n      return (\n        <div className=\"text-justify text-wrap\">\n          <div>\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => this.like(person._id)}> Like </button>\n            <button type=\"button\" className=\"btn btn-danger ml-2\" onClick={() => this.pass(person._id)}> Pass </button>\n          </div>\n          <Info person={person} />\n        </div>\n      )\n    }\n\n    let Pic = args => (<PicWrapper photos={args.photos} />)\n\n    let allFr = this.state.allFr;\n\n    let persons = allFr.map(one => {\n      let obj = {\n        info: (<InfoWrapper person={one} />),\n        image: (<Pic photos={one.photos} />)\n      }\n      return { ...obj };\n    });\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div className=\"text-justify text-center\">\n          <BtnLink label=\"Friend Requests\" data={null} pathname=\"/pal-requests\" />\n          <button type=\"button\" className=\"btn btn-primary\" onClick={this.getNewFriends}> Reload </button>\n        </div>\n\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            sortable={false}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\nexport default MoreFriends;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport AjaxService from '../services/AjaxService'\nimport Const from '../services/Constants';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\n\n\n\nclass FriendRequests extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allFr: [],\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n    this.abortController = new AbortController();\n  }\n\n  componentWillUnmount() {\n    this.abortController.abort()\n  }\n\n  getFriendRequests = () => {\n    let promise = AjaxService.doGet(Const.URLS.FAST_MATCH, {})\n    promise.then((data) => {\n      if (!data || !data.data || !data.data.data || !data.data.data.results) {\n        return;\n      }\n\n      this.setState({\n        allFr: data.data.data.results\n      })\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  componentDidMount() {\n    this.getFriendRequests();\n  }\n\n  render() {\n    let Info = args => <div className=\"text-justify text-wrap\"> {args.info} </div>;\n    let Pic = args => (<PicWrapper photos={args.photos} />);\n\n    let allFr = this.state.allFr;\n\n    let persons = allFr.map(one => {\n      let obj = {\n        info: (<Info info={one.user._id} />),\n        image: (<Pic photos={one.user.photos} />)\n      }\n      return { ...obj };\n    });\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div className=\"text-center p-1 \">\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.getFriendRequests()}> Reload </button>\n        </div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            sortable={false}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            showPagination={false}\n            style={{\n              width: '100%',\n              height: '30%',\n            }}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\nexport default FriendRequests;\n\n//{\"status\":200,\"match\":false,\"likes_remaining\":100,\"X-Padding\":\"{*meta*:{*code*:200,*requestId*:*59a45921351e3d43b07028b5*},*response*:{*venue*:{*id*:*412d2800f964a520df0c1fe3*,*name*:*Central Park*,*contact*:{*phone*:*2123106600*,*formattedPhone*:*(212) 310-6600*,*twitter*:*centralparknyc*,*instagram*:*centralparknyc*,*facebook*:*37965424481*,*facebookUsername*:*centralparknyc*,*facebookName*:*Central Park*},*location*:{*address*:*59th St to 110th St*,*crossStreet*:*5th Ave to Central Park West*,*lat*:40.78408342593807,*lng*:-73.96485328674316,*postalCode*:*10028*,*cc*:*US*,*city*:*New York*,*state*:*NY*,*country*:*United States*,*formattedAddress*:[*59th St to 110th St (5th Ave to Central Park West)*,*New York, NY 10028*,*United States*]},*canonicalUrl*:*https://foursquare.com/v/central-park/412d2800f964a520df0c1fe3*,*categories*:[{*id*:*4bf58dd8d48988d163941735*,*name*:*Park*,*pluralName*:*Parks*,*shortName*:*Park*,*icon*:{*prefix*:*https://ss3.4sqi.net/img/categories_v2/parks_outdoors/park_*,*suffix*:*.png*},*primary*:true}],*verified*:true,*stats*:{*checkinsCount*:364591,*usersCount*:311634,*tipCount*:1583,*visitsCount*:854553},*url*:*http://www.centralparknyc.org*,*likes*:{*count*:17370,*summary*:*17370 Likes*},*rating*:9.8,*ratingColor*:*00B551*,*ratingSignals*:18854,*beenHere*:{*count*:0,*unconfirmedCount*:0,*marked*:false,*lastCheckinExpiredAt*:0},*photos*:{*count*:26681,*groups*:[{*type*:*venue*,*name*:*Venue photos*,*count*:26681,*items*:[{*id*:*513bd223e4b0e8ef8292ee54*,*createdAt*:1362874915,*source*:{*name*:*Instagram*,*url*:*http://instagram.com*},*prefix*:*https://igx.4sqi.net/img/general/*,*suffix*:*/655018_Zp3vA90Sy4IIDApvfAo5KnDItoV0uEDZeST7bWT-qzk.jpg*,*width*:612,*height*:612,*user*:{*id*:*123456*,*firstName*:*J\"}\n\n// Request URL: https://api.gotinder.com/v2/fast-match/teasers?locale=en-GB\n// Request Method: GET\n// Status Code: 200 \n// Remote Address: 52.85.7.7:443\n// Referrer Policy: origin\n// access-control-allow-credentials: true\n// access-control-allow-headers: Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,platform,app-version,X-Auth-Token,x-accountkit-validation-code,token,fast-match-count,x-supported-image-formats,device_id,install-id,persistent-device-id,promo-code,campaign-name,app-session-id,app-session-time-elapsed,user-session-id,user-session-time-elapsed,advertising-id,encoded-device-carrier,encoded-device-model,x-external-token,x-refresh-token,x-recovery-token,x-access-token,Java-Script-Enabled,Color-Depth,Java-Enabled,Screen-Height,Screen-width,Time-Zone-Offset,language,Underage-Token,tinder-version\n// access-control-allow-methods: GET, POST, PUT, DELETE, OPTIONS\n// access-control-allow-origin: https://tinder.com\n// cache-control: no-cache, no-store, must-revalidate\n// content-encoding: gzip\n// content-type: application/json; charset=utf-8\n// date: Sat, 21 Dec 2019 08:10:56 GMT\n// status: 200\n// vary: Accept-Encoding\n// via: 1.1 db06bf8d1de11ce1e98664ab021137c1.cloudfront.net (CloudFront)\n// x-amz-cf-id: ZPmygL5V4uLR1bFn1hrRT1nwhOul1uN8HfDk3xyIve5KVifB_4OPdQ==\n// x-amz-cf-pop: SOF50-C1\n// x-cache: Miss from cloudfront\n// x-request-id: 829bc5c1-5531-45fd-a5fd-f13027f65d69\n\n\n// :authority: api.gotinder.com\n// :method: GET\n// :path: /v2/fast-match/teasers?locale=en-GB\n// :scheme: https\n// accept: application/json\n// accept-encoding: gzip, deflate, br\n// accept-language: en-GB,en-US;q=0.9,en;q=0.8,bg;q=0.7\n// app-session-id: d7e147fc-9d4d-42a8-bb7d-7a567c141aea\n// app-session-time-elapsed: 1733647\n// app-version: 1021800\n// origin: https://tinder.com\n// persistent-device-id: 4f54539a-f43e-4ca2-b273-49912acdecfc\n// platform: web\n// referer: https://tinder.com/\n// sec-fetch-mode: cors\n// sec-fetch-site: cross-site\n// tinder-version: 2.18.0\n// user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36\n// user-session-id: 062576c6-4aa3-4dd7-841b-eb1b88e6530d\n// user-session-time-elapsed: 1726069\n// x-auth-token: 5e7d4468-72f4-49da-974c-94796b697905\n// x-supported-image-formats: webp,jpeg","import React, { Component } from 'react'\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectPollInterval extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      interval: AppSettingsService.updatePollInterval\n    }\n  }\n\n  changeHandler = (e) => {\n    this.setState({\n      interval: e.target.value\n    })\n    AppSettingsService.updatePollInterval = e.target.value;\n    this.props.onSelectPollInterval(e.target.value);\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Poll interval for getting updates to be every:</label>\n          <select\n            className={this.props.styles}\n            value={this.state.interval}\n            onChange={this.changeHandler}>\n            <option value=\"10000\">10 sec</option>\n            <option value=\"20000\">20 sec</option>\n            <option value=\"40000\">40 sec</option>\n            <option value=\"50000\">50 sec</option>\n            <option value=\"60000\">1 min</option>\n            <option value=\"300000\">5 min</option>\n            <option value=\"600000\">10 min</option>\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectTextColor extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: AppSettingsService.getSetting(\"textColor\") || AppSettingsService.textColors[0]\n    }\n  }\n\n  changeHandler = (event) => {\n    let color = event.target.value;\n\n    AppSettingsService.applyClass(document.body, AppSettingsService.textColors, color);\n    AppSettingsService.persistSetting(\"textColor\", color);\n\n    this.setState({\n      selected: color\n    })\n    this.props.triggerRender();\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Select text color:</label>\n          <select\n            className={this.props.styles}\n            value={this.state.selected}\n            onChange={this.changeHandler}>\n            {AppSettingsService.textColors.map(\n              (color) => {\n                return (<option key={color.name} value={color.class}>{color.name}</option>);\n              }\n            )}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}","import React, { Component } from 'react';\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectBackgroundColor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: AppSettingsService.getSetting(\"bgColor\") || AppSettingsService.bgColors[0]\n    }\n  }\n\n  changeHandler = (event) => {\n    let color = event.target.value;\n\n    AppSettingsService.applyClass(document.body, AppSettingsService.bgColors, color);\n    AppSettingsService.persistSetting(\"bgColor\", color);\n\n    this.setState({\n      selected: color\n    })\n    this.props.triggerRender();\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Select background color:</label>\n          <select className={this.props.styles}\n            value={this.state.selected}\n            onChange={this.changeHandler}>\n            {AppSettingsService.bgColors.map(\n              (color) => {\n                return (<option key={color.name} value={color.class}>{color.name}</option>);\n              }\n            )}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\r\nimport PollService from '../services/PollService';\r\nimport SelectPollInterval from './SelectPollInterval';\r\nimport AppSettingsService from './AppSettingsService';\r\nimport SelectTextColor from './SelectTextColor';\r\nimport SelectBackgroundColor from './SelectBackgroundColor';\r\n\r\nclass AppSettings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      styles: AppSettingsService.getInputStyleClasses()\r\n    };\r\n  }\r\n\r\n  onSelectPollInterval = (val) => {\r\n    PollService.startUpdatePoll(val);\r\n    this.setState({\r\n      pollInterval: val\r\n    })\r\n  }\r\n\r\n  triggerRender = () => {\r\n    this.setState({\r\n      styles: AppSettingsService.getInputStyleClasses()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SelectPollInterval styles={this.state.styles} onSelectPollInterval={this.onSelectPollInterval} />\r\n        <SelectBackgroundColor styles={this.state.styles} triggerRender={this.triggerRender} />\r\n        <SelectTextColor styles={this.state.styles} triggerRender={this.triggerRender} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default AppSettings;\r\n","import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport BeanContextAware from '../services/BeanContextAware';\nimport MatchDecoratorService from '../services/MatchDecoratorService';\nimport { withRouter } from 'react-router-dom';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      beanId: props.beanId,\n      showUser: false,\n      isVisible: false,\n      msgMatches: []\n    };\n    this.initialTitle = document.title;\n  }\n\n  changeState = (obj) => {\n    this.setState(obj)\n  }\n\n  addMsgMatch = (mtch) => {\n    var pos = this.findInMsgMatches(mtch);\n    if (pos > -1) { // if found - do not add it again\n      return;\n    }\n    let msgMatches = this.state.msgMatches\n    this.state.msgMatches.push(mtch)\n    this.setState({\n      msgMatches: msgMatches\n    })\n    this.toggleFlashTabTitle();\n  }\n\n  findInMsgMatches = (mtch) => {\n    let msgMatches = this.state.msgMatches\n    for (var i = 0, len = msgMatches.length; i < len; i++) {\n      if (msgMatches[i].id === mtch.id)\n        return i;\n    }\n    return -1;\n  }\n\n  removeMsgMatch = (mtch) => {\n    var pos = this.findInMsgMatches(mtch);\n    if (pos > -1) {\n      let msgMatches = this.state.msgMatches\n      msgMatches.splice(pos, 1);\n      this.setState({\n        msgMatches: msgMatches\n      })\n      this.toggleFlashTabTitle();\n    }\n  }\n\n  changeButtonVisibility = (obj) => {\n    this.setState(obj);\n  }\n\n  componentDidMount() {\n    BeanContextAware.add(this);\n  }\n\n  componentWillUnmount() {\n    BeanContextAware.remove(this);\n  }\n\n  toggleFlashTabTitle = () => {\n    if (this.state.msgMatches.length > 0 && !this.flashIntervalObj) {\n      this.startFlashTabTitle();\n    } else {\n      this.stopFlashTabTitle();\n    }\n  }\n\n  startFlashTabTitle = () => {\n    this.flashIntervalObj = setInterval(\n      () => {\n        if (this.initialTitle === document.title) {\n          document.title = \"(\" + this.state.msgMatches.length + \") \" + this.initialTitle;\n        } else {\n          document.title = this.initialTitle;\n        }\n      }, 1000\n    );\n  }\n\n  stopFlashTabTitle = () => {\n    clearTimeout(this.flashIntervalObj);\n    this.flashIntervalObj = null;\n    document.title = this.initialTitle;\n  }\n\n  getUserData = (match) => {\n    let clBack = (match) => {\n         this.props.history.push({\n         pathname: '/friend',\n         state: { args: match }\n       })\n     }\n     MatchDecoratorService.getUserData(match, clBack);\n   }\n\n   goChat = (match) => {\n      this.props.history.push({\n        pathname: '/chat',\n        state: { data: match }\n      })\n   }\n\n  render() {\n    let Btn = (props) => (\n      <div>\n        <NavLink exact activeClassName=\"active\" to={props.to}>\n          <button type=\"button\" className=\"btn btn-primary\">\n            {props.label}\n          </button>\n        </NavLink>\n      </div>\n    )\n    let isVisibleNewMsgs = this.state.msgMatches.length ? true : false;\n\n    let BtnBadge = (props) => {\n      let mtch = props.data;\n      if (!mtch.messages || mtch.messages.length == 0) {\n        return (\n          <div>\n            <button onClick={() => this.getUserData(mtch)} className=\"btn btn-primary\" > \n            New: {this.state.msgMatches.length} </button>\n          </div>\n        )\n      } else {\n        return (\n          <div>\n            <button onClick={() => this.goChat(mtch)} className=\"btn btn-primary\" > \n            New: {this.state.msgMatches.length} </button>\n          </div>\n        )\n      }\n    }\n\n    return (\n      <div className=\"text-center \">\n        <nav>\n          <div className=\"btn-group\">\n            {!this.state.isVisible ? <Btn to=\"/home\" label=\"Home\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/user\" label=\"User\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/pals\" label=\"Pals\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/more-pals\" label=\"More Pals\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/settings\" label=\"Settings\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/logout\" label=\"|->\" /> : null}\n            {(this.state.isVisible && isVisibleNewMsgs) ? <BtnBadge data={this.state.msgMatches[0]} /> : null}\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Header);","import React from 'react';\r\nimport store from '../store'\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService';\r\nimport AppSettingsService from '../settings/AppSettingsService';\r\n\r\nclass EnterText extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: '',\r\n            store: props.data,\r\n            friendId: props.friendId,\r\n            triggerRenderFunc: props.triggerRenderFunc\r\n        }\r\n        this.getStyles = AppSettingsService.getInputStyleClasses;\r\n    }\r\n\r\n    createMessage = (match, store) => {\r\n        var dt = new Date();\r\n        return {\r\n            created_date: dt.toISOString(),\r\n            from: store.profile.data._id,\r\n            match_id: match.id,\r\n            message: this.state.value,\r\n            sent_date: dt.toISOString(),\r\n            timestamp: dt.getTime(),\r\n            to: match.person._id\r\n        }\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.key !== 'Enter') {\r\n            return;\r\n        }\r\n\r\n        let matches = store.update.data.matches;\r\n        for (let index = 0; index < matches.length; index++) {\r\n            const oneMatch = matches[index];\r\n\r\n            if (oneMatch.person._id === this.state.friendId) {\r\n                let newMsgObj = this.createMessage(oneMatch, this.state.store);\r\n                AjaxService.doPost(Const.URLS.SEND_MESSAGE, newMsgObj, {})\r\n                store.update.data.matches[index].messages.push(newMsgObj);\r\n                this.state.triggerRenderFunc();\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ value: '' });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        var elem = e.srcElement || e.target;\r\n        this.setState({ value: elem.value })\r\n    }\r\n\r\n    render() {\r\n        let inputProps = {\r\n            placeholder: 'Write...',\r\n            value: this.state.value,\r\n            onChange: this.onChange,\r\n            className: this.getStyles(),\r\n            onKeyPress: this.onKeyPress\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <input {...inputProps} type=\"text\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EnterText;\r\n","import React from 'react';\r\n\r\nclass MessageWrapper extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      let { msg } = this.props;\r\n      let msgDateObj = new Date(msg.timestamp);\r\n\r\n      let timeStr = msgDateObj.toLocaleTimeString();\r\n      let dateStr = msgDateObj.toLocaleDateString()\r\n      if (dateStr !== new Date().toLocaleDateString()) {\r\n        timeStr = timeStr + \",  \" + dateStr;\r\n      }\r\n\r\n      this.state = {\r\n          isSeen: msg.isSeen,\r\n          showDate: false,\r\n          date: timeStr\r\n      };\r\n    }\r\n\r\n    render() {\r\n        let { msg } = this.props;\r\n\r\n        let showHideDate = () => {\r\n            this.setState({ showDate: true });\r\n            setTimeout(\r\n                () => {\r\n                    this.setState({ showDate: false });\r\n                }, 5000);\r\n        }\r\n\r\n        return (\r\n            <div onClick={showHideDate}>\r\n                <p className=\"text-justify text-wrap\" >  {msg.message} </p>\r\n                {this.state.isSeen ? (<span className=\"badge badge-secondary text-justify text-wrap\">seen</span>) : null}\r\n                {this.state.showDate ? (<span className=\"badge small\" >  {this.state.date} </span>) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MessageWrapper;\r\n","import React, { Component } from 'react'\nimport BeanContextAware from '../services/BeanContextAware'\n\nexport default class Select extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      numberMsgShown: 10,\n      getStyles: props.getStyles\n    }\n  }\n\n  changeHandler = (e) => {\n    let chat1 = BeanContextAware.get('chat1');\n      this.setState({\n        numberMsgShown: e.target.value\n      })\n      if (chat1) {\n        chat1.changeState({ numberMsgShown: parseInt(e.target.value)});\n      }\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Number of messages to show:</label>\n          <select\n            className={this.state.getStyles()}\n            value={this.state.numberMsgShown}\n            onChange={this.changeHandler}>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n            <option value=\"50\">50</option>\n            <option value=\"70\">70</option>\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactTable from \"react-table\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport store from '../store'\r\nimport EnterText from './enterText'\r\nimport MessageWrapper from './messageWrapper'\r\nimport BeanContextAware from '../services/BeanContextAware'\r\nimport Select from './Select'\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService'\r\nimport AppSettingsService from '../settings/AppSettingsService';\r\n\r\nclass Chat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    \r\n    let match = props.location.state.data;\r\n    let friendId = match.person._id;\r\n    let lastSeenMsg = match.seen ? match.seen.last_seen_msg_id : null;\r\n    this.state = {\r\n      lastSeenMsg: lastSeenMsg,\r\n      numberMsgShown: 10,\r\n      matchId: match.id,\r\n      store: store,\r\n      match: match,\r\n      friendId: friendId,\r\n      messages: match.messages\r\n    };\r\n    this.inputStyles = AppSettingsService.getInputStyleClasses;\r\n  }\r\n\r\n  componentDidMount() {\r\n    BeanContextAware.add(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    BeanContextAware.remove(this);\r\n  }\r\n\r\n  prepareMessages = (allMsgs, friendId, numberMsgShown) => {\r\n    let result = [];\r\n    result.length = numberMsgShown;\r\n\r\n    for (let ind = allMsgs.length - 1; 0 <= numberMsgShown; numberMsgShown-- , ind--) {\r\n\r\n      let msg = allMsgs[ind];\r\n\r\n      if (!msg) {\r\n        msg = {};\r\n      }\r\n\r\n      let transformedMsg = {};\r\n      result[numberMsgShown] = transformedMsg;\r\n\r\n      if (msg.from === friendId) {\r\n        transformedMsg.theirs = (<MessageWrapper msg={msg} />);\r\n      }\r\n      else {\r\n        transformedMsg.mine = (<MessageWrapper msg={msg} />);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  //call it to start render() in order to visualize the change\r\n  triggerRenderFunc = () => {\r\n    let match = store.getMatchById(this.state.match._id)\r\n    let lastSeenMsg = match.seen ? match.seen.last_seen_msg_id : null;\r\n    this.setState({\r\n      lastSeenMsg: lastSeenMsg,\r\n      match: match,\r\n      messages: match.messages\r\n    })\r\n  }\r\n\r\n  changeState = (obj) => {\r\n    this.setState(obj)\r\n  }\r\n\r\n  sendSeen = (allMsgs) => {\r\n    if (!this.state.lastSeenMsg) {\r\n      console.log(\"empty value of 'lastSeenMsg'..\");\r\n    }\r\n\r\n    //clear notification for new friends, who have not send message:\r\n    if (!allMsgs || !allMsgs.length) {\r\n      this.deleteFromHeader();\r\n      return;\r\n    }\r\n\r\n    for (let index = allMsgs.length - 1; 0 <= index; index--) {\r\n\r\n      let msgWrapped = allMsgs[index];\r\n\r\n      if (!msgWrapped || !msgWrapped.theirs) {\r\n        continue;\r\n      }\r\n      let msg = msgWrapped.theirs.props.msg;\r\n\r\n      if (msg._id !== this.state.lastSeenMsg) {\r\n        AjaxService.doGet(Const.URLS.SEND_SEEN + msg.match_id + \"/\" + msg._id, {});\r\n        let match = this.state.match;\r\n        if (match.seen) {\r\n          match.seen.last_seen_msg_id = msg._id;\r\n        }\r\n\r\n        this.deleteFromHeader();\r\n        return;\r\n      }\r\n      if (msgWrapped.theirs) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteFromHeader = () => {\r\n    let header = BeanContextAware.get('header1');\r\n    if (header) {\r\n      header.removeMsgMatch(this.state.match);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: this.state.match.person.name,\r\n            accessor: \"theirs\"\r\n          },\r\n          {\r\n            Header: \"Me\",\r\n            accessor: \"mine\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n    var reorderedMessages = this.prepareMessages(this.state.messages, this.state.friendId, this.state.numberMsgShown);\r\n\r\n    this.sendSeen(reorderedMessages);\r\n    let inputProps = {\r\n      data: this.state.store,\r\n      friendId: this.state.match.person._id,\r\n      triggerRenderFunc: this.triggerRenderFunc\r\n    }\r\n\r\n    return (\r\n      <div><Select getStyles={this.inputStyles} />\r\n        <div>\r\n          <ReactTable\r\n            data={reorderedMessages}\r\n            columns={present}\r\n            defaultPageSize={reorderedMessages.length}\r\n            pageSize={reorderedMessages.length}\r\n            showPagination={false}\r\n            bordered={false}\r\n            sortable={false}\r\n\r\n          />\r\n          <div>\r\n            <EnterText {...inputProps} />\r\n          </div>\r\n          <br />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(Chat);\r\n","import React from 'react';\nimport CashService from './services/CashService';\nimport AppSettingsService from './settings/AppSettingsService';\nimport PollService from './services/PollService';\nimport Home from './Home';\nimport PhoneForm from './auth/PhoneForm';\nimport ConfirmCode from './auth/confirmCode';\nimport UserView from './userView/userView';\nimport Friends from './userView/friends';\nimport OneFriend from './userView/oneFriend';\nimport MoreFriends from './userView/MoreFriends';\nimport FriendRequests from './userView/FriendRequests';\nimport AppSettings from './settings/AppSettings';\nimport Header from './building-blocks/header';\nimport Chat from './chat/chat.js';\nimport store from './store';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nconst App = () => {\n  return (\n    <div className=\"container\" style={{ paddingTop: 10 }}>\n\n      <Router>\n        <Header beanId=\"header1\" />\n        <Switch>\n          < Route exact path=\"/\" component={Home} />\n          < Route path=\"/user\" render={() => <UserView data={store} />} />\n          < Route path=\"/phone\" component={PhoneForm} />\n          < Route path=\"/friend\" component={OneFriend} />\n          < Route path=\"/chat\" render={() => <Chat beanId=\"chat1\"/>} />\n          < Route path=\"/pals\" render={() => <Friends data={store.updates} />} />\n          < Route path=\"/more-pals\" render={() => <MoreFriends data={store.updates} />} />\n          < Route path=\"/pal-requests\" render={() => <FriendRequests data={store.updates} />} />\n          < Route path=\"/settings\"render={() => <AppSettings beanId=\"appSettings1\"/>} />\n          < Route path=\"/confirm-token\" component={ConfirmCode} />\n          < Route path=\"*\" component={Home} />\n        </Switch>\n      </Router>\n    </div >\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render( <App/> , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}