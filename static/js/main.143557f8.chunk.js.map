{"version":3,"sources":["services/Constants.js","services/AjaxService.js","services/CashService.js","settings/AppSettingsService.js","services/BeanContextAware.js","store.js","services/PollService.js","notes/NotesService.js","Home.js","building-blocks/RenderForm.js","auth/PhoneForm.js","auth/confirmCode.js","settings/Checkbox.js","building-blocks/Info.js","building-blocks/PicWrapper.js","userView/SelectDistanceFilter.js","userView/SelectMinAgeFilter.js","userView/SelectMaxAgeFilter.js","userView/userView.js","services/MatchDecoratorService.js","building-blocks/OnePicWrapper.js","userView/friends.js","building-blocks/BtnLink.js","userView/OneFriend.js","userView/MoreFriends.js","userView/FriendRequests.js","settings/SelectPollInterval.js","settings/SelectTextColor.js","settings/SelectBackgroundColor.js","settings/AppSettings.js","building-blocks/header.js","chat/enterText.js","chat/messageWrapper.js","chat/Select.js","chat/CyrilicEmojiStrategy.js","chat/chat.js","notes/Notes.js","App.js","serviceWorker.js","index.js"],"names":["ipAdress","Const","URLS","BASE_URL","AUTH","PHONE","GET_TOKEN","UPDATES","PROFILE","USER","MATCH","SEND_MESSAGE","SEND_LOCATION","NEW_FRIENDS","SEND_SEEN","FAST_MATCH","LIKE","PASS","STORAGE","STORAGE_TOKEN","STORAGE_BOOKMARKS","STORAGE_SETTINGS","UPDATE_POLL_INTERVAL","LOCAL_CASH_VAR_NAME","AUTH_HEADER_NAME","PHONE_HEADER_NAME","VERSION","execute","method","url","data","headers","axios","doPost","getHeaders","doPut","doGet","doDelete","authHeaderName","phoneHeaderName","CashService","React","Component","props","persistAll","phone","obj","AjaxService","JSON","stringify","catch","e","console","error","loadAll","log","getPhone","setPhone","getToken","setToken","token","getSettings","settings","setSettings","persistSettings","persistBookmarks","arr","this","then","bgColor","textColor","bookmarks","cashStructureTemplate","reduce","json","value","key","applyDesignSettings","getSetting","textColors","class","applyClass","document","body","bgColors","persistSetting","settingName","settingObject","element","colors","selectedColor","forEach","color","classList","remove","add","getInputStyleClasses","updatePollInterval","isToShowPhotos","bean","state","Error","beanId","context","warn","get","reducer","combineReducers","form","reduxFormReducer","store","window","devToolsExtension","createStore","functionsQueue","addToFunctionsQ","funct","push","length","shift","funcToCall","getStore","getMatchById","id","matches","update","i","_id","addToStore","checkIfLogged","onSuccess","onFailure","getUpdates","getLastActivityDate","startUpdatePoll","AppSettingsService","mergeUpdates","updates","matchUpdate","oldMatch","addToUnreadMessagesBadge","newMsgs","messages","newMsgsCount","y","splice","concat","lastSeenMsg","seen","last_seen_msg_id","lastActivityDate","last_activity_date","markLastUneadMessages","newLastSeenMsgId","oldLastSeenMsgId","localUser","profile","ind","msg","from","mtch","header","BeanContextAware","addMsgMatch","lastDate","chat1","triggerRenderFunc","changeButtonVisibility","isVisible","exceptionCount","isToStopUpdatePoll","stopUpdatePoll","exception","seconds","pollInterval","pollIntervalObj","setInterval","clearTimeout","saveBookmark","personId","getBookmarks","indexOf","removeBookmark","index","oneFromArr","saveAllByPhone","getOne","promise","Home","hits","isLoading","to","eachComponent","input","label","type","placeholder","meta","touched","className","RenderForm","options","handleSubmit","fields","RenderFieldWrappedInstance","reduxForm","onSubmit","map","op","name","Field","onChange","onChangeFun","component","PhoneForm","handleChange","event","target","phoneNumAuth","history","ifNotLogged","preventDefault","result","setBookmarks","authToken","processAuth","confirm","PollService","optns","withRouter","ConfirmCode","confirmToken","phoneNumber","status","persistToken","Checkbox","doChangeState","changeHandler","setState","condition","checked","defaultChecked","Info","args","person","country","pos_info","age","birth_date","substring","city","jobs","title","schools","distance_mi","bio","PicWrapper","nextPic","photos","imgSrc","personName","onClick","src","alt","SelectDistanceFilter","parentObject","distanceFilter","radius","initialRadius","cssClasses","optionTags","SelectMinAgeFilter","ageFilterMin","SelectMaxAgeFilter","ageFilterMax","UserView","saveProfile","age_filter_max","age_filter_min","distance_filter","discoverable","getProfile","toggleShowProfile","pos","lat","lon","image","info","pointVals","pointMode","banner","control","values","point","newMsgObj","postLocation","bindMap","startPort","overlayAll","showControls","showInputs","useDynamic","precision","columns","Header","accessor","sortable","defaultPageSize","showPagination","getUserData","match","callbackFunc","userId","user","results","posInfo","region","OnePicWrapper","doClick","Friends","sortByLastActivityDate","a","b","timeA","Date","getTime","applySorting","arrToBeSorted","sortingFunc","sort","MatchDecoratorService","pathname","showUser","msgMatches","friends","persons","prsn","picProps","firstName","lastName","pageSize","BtnLink","OneFriend","NotesService","save","deleteMatch","matchId","isBookmarked","undefined","allBookmarks","location","getBookmarksAsObject","MoreFriends","getNewFriends","callBack","allFr","isMountedOk","pass","like","InfoWrapper","Pic","one","FriendRequests","getFriendRequests","style","width","height","SelectPollInterval","interval","onSelectPollInterval","styles","SelectTextColor","selected","triggerRender","SelectBackgroundColor","AppSettings","val","toggleShowPicsCheckbox","changeState","findInMsgMatches","toggleFlashTabTitle","len","removeMsgMatch","flashIntervalObj","startFlashTabTitle","stopFlashTabTitle","initialTitle","goChat","Btn","exact","activeClassName","isVisibleNewMsgs","EnterText","createMessage","dt","created_date","toISOString","match_id","message","sent_date","timestamp","onKeyPress","oneMatch","friendId","injectEmoji","elem","srcElement","getStyles","emojiInjectorFunc","inputProps","MessageWrapper","msgDateObj","timeStr","toLocaleTimeString","dateStr","toLocaleDateString","isSeen","showDate","date","setTimeout","Select","numberMsgShown","parseInt","emojis","text","face","injectEmojiFunction","emo","foundAt","replace","Chat","onFocus","ev","isOnFocus","deleteFromHeader","onBlur","prepareMessages","allMsgs","transformedMsg","theirs","mine","sendSeen","msgWrapped","inputStyles","addEventListener","removeEventListener","present","reorderedMessages","bordered","Notes","processUserData","step","all","formDummyMatch","disabled","App","paddingTop","path","render","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.143557f8.chunk.js","sourcesContent":["let ipAdress = 'http://localhost:8484/';\n\nconst Const = {\n  URLS: {\n    BASE_URL: ipAdress,\n    AUTH: {\n      PHONE: ipAdress + 'requestCode',\n      GET_TOKEN: ipAdress + 'getToken/'\n    },\n    UPDATES: ipAdress + 'updates',\n    PROFILE: ipAdress + 'profile',\n    USER: ipAdress + 'user/',\n    MATCH: ipAdress +  'user/matches/',\n    SEND_MESSAGE: ipAdress + 'postMessage',\n    SEND_LOCATION: ipAdress + 'location',\n    NEW_FRIENDS: ipAdress + 'new-friends',\n    SEND_SEEN: ipAdress + 'seen/',\n    FAST_MATCH: ipAdress + 'fast-match',\n    LIKE: ipAdress + 'like/',\n    PASS: ipAdress + 'pass/',\n\n\n    //// storage api:\n    STORAGE: ipAdress + 'storage/',\n    STORAGE_TOKEN: ipAdress + 'storage/token/',\n    STORAGE_BOOKMARKS: ipAdress + 'storage/bookmarks/',\n    STORAGE_SETTINGS: ipAdress + 'storage/settings/'\n  },\n  UPDATE_POLL_INTERVAL: 20000,\n  LOCAL_CASH_VAR_NAME: '__TnDr__',\n  AUTH_HEADER_NAME: 'X-Auth-Token',\n  PHONE_HEADER_NAME: 'phone-number',\n  VERSION: '1.15a'\n}\n\nexport default Const;\n","import React from 'react';\nimport axios from 'axios';\nimport Const from './Constants';\nimport CashService from './CashService';\n\nclass AjaxService extends React.Component {\n\n  execute = (method, url, data, headers) => {\n    return axios({\n      method: method,\n      url: url,\n      data: data,\n      headers: headers\n    });\n  };\n\n  doPost = (url, data, headers) => {\n    return this.execute('post', url, data, this.getHeaders(headers));\n  };\n\n  doPut = (url, data, headers) => {\n    return this.execute('put', url, data, this.getHeaders(headers));\n  };\n\n  doGet = (url, headers) => {\n    return this.execute('get', url, {}, this.getHeaders(headers));\n  };\n\n  doDelete = (url, headers) => {\n    return this.execute('delete', url, {}, this.getHeaders(headers));\n  };\n\n  getHeaders = (headers) => {\n    let authHeaderName = Const.AUTH_HEADER_NAME;\n    let phoneHeaderName = Const.PHONE_HEADER_NAME;\n    if (!headers) {\n      headers = {};\n    }\n\n    if (CashService[phoneHeaderName]) {\n      headers[phoneHeaderName] = CashService[phoneHeaderName];\n    }\n\n    if (CashService[authHeaderName]) {\n      headers[authHeaderName] = CashService[authHeaderName];\n    }\n    return headers;\n  };\n}\n\nexport default new AjaxService();\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\n\nclass CashService extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this[Const.PHONE_HEADER_NAME] = null;\n    this[Const.AUTH_HEADER_NAME] = null;\n    this.settings = { bgColor: \"bg-dark\", textColor: \"text-white\" };\n    this.bookmarks = [];\n    this.cashStructureTemplate = {\n      settings: this.settings,\n      [Const.AUTH_HEADER_NAME]: { token: this[Const.AUTH_HEADER_NAME] },\n      bookmarks: this.bookmarks\n    }\n  };\n\n  persistAll = function (phone, obj) {\n    let promise = AjaxService.doPost(Const.URLS.STORAGE + phone, {\n      'json': JSON.stringify(obj)\n    }, {});\n    promise.catch((e) => {\n      console.error(e);\n    })\n  }\n\n  loadAll = function (phone) {\n    try {\n      return AjaxService.doGet(Const.URLS.STORAGE + phone, {});\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  getPhone = () => {\n    return this[Const.PHONE_HEADER_NAME];\n  };\n\n  setPhone = (phone) => {\n    this[Const.PHONE_HEADER_NAME] = phone;\n  };\n\n  /// token:\n  getToken = () => {\n    return this[Const.AUTH_HEADER_NAME];\n  };\n\n  setToken = (token) => {\n    this[Const.AUTH_HEADER_NAME] = token;\n  };\n\n  persistToken(token) {\n    try {\n      AjaxService.doPut(Const.URLS.STORAGE_TOKEN + this.getPhone(), {\n        'json': JSON.stringify({ \"token\": token })\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  //// settings:\n  getSettings = () => {\n    return this.settings;\n  };\n\n  setSettings = (settings) => {\n    this.settings = settings;\n  };\n\n  persistSettings = (settings) => {\n    AjaxService.doPut(Const.URLS.STORAGE_SETTINGS + this.getPhone(), {\n      'json': JSON.stringify(settings)\n    });\n  }\n\n  /// bookmarks:\n  getBookmarks() {\n    return this.bookmarks;\n  }\n\n  setBookmarks(bookmarks) {\n    this.bookmarks = bookmarks;\n  }\n\n  getBookmarksAsObject() {\n    return this.bookmarks.reduce((json, value, key) => {\n      json[value] = key;\n      return json;\n    }, {});\n  }\n\n  persistBookmarks = function (arr) {\n    let promise = AjaxService.doPost(Const.URLS.STORAGE_BOOKMARKS + this.getPhone(), {\n      'json': JSON.stringify(arr)\n    }, {});\n\n    promise.then((data) => {\n      console.log(data);\n    }).catch((e) => {\n      console.error(e);\n    })\n  }\n}\n\nexport default new CashService();\n","import React from 'react';\r\nimport CashService from '../services/CashService';\r\nimport Const from '../services/Constants';\r\n\r\n//this singleton applies settings at startup:\r\nclass AppSettingsService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.textColors = [\r\n      { \"name\": 'Gray', \"class\": 'text-muted' },\r\n      { \"name\": 'White', \"class\": 'text-white' },\r\n      { \"name\": 'Dark', \"class\": 'text-dark' },\r\n      { \"name\": 'Black', \"class\": 'text-body' }\r\n    ]\r\n\r\n    this.bgColors = [\r\n      { \"name\": 'Gray', \"class\": 'bg-secondary' },\r\n      { \"name\": 'Dark', \"class\": 'bg-dark' },\r\n      { \"name\": 'Light', \"class\": 'bg-light' }\r\n    ]\r\n\r\n    this.updatePollInterval = Const.UPDATE_POLL_INTERVAL;\r\n    this.isToShowPhotos = true;\r\n  }\r\n\r\n  applyDesignSettings = () => {\r\n    let textColor = this.getSetting(\"textColor\") || this.textColors[0]?.class;\r\n    if (textColor) {\r\n      console.log(textColor);\r\n      \r\n      this.applyClass(document.body, this.textColors, textColor);\r\n    }\r\n\r\n    let bgColor = this.getSetting(\"bgColor\") || this.bgColors[0].class;\r\n    if (bgColor) {\r\n      this.applyClass(document.body, this.bgColors, bgColor);\r\n    }\r\n  }\r\n\r\n  persistSetting = (settingName, settingObject) => {\r\n    let settings = CashService.getSettings();\r\n    if (!settings) {\r\n      settings = {};\r\n      CashService.setSettings(settings);\r\n    }\r\n    settings[settingName] = settingObject;\r\n    CashService.persistSettings(settings);\r\n  }\r\n\r\n  getSetting = (settingName) => {\r\n    let settings = CashService.getSettings();\r\n    return settings?.[settingName];\r\n  }\r\n\r\n  applyClass = (element, colors, selectedColor) => {\r\n    colors.forEach(color => {\r\n      element.classList.remove(color.class);\r\n    });\r\n\r\n    element.classList.add(selectedColor);\r\n  }\r\n\r\n  getInputStyleClasses = () => {\r\n    return \"form-control \" + (this.getSetting(\"textColor\") || \" \") +\r\n      \" \" + (this.getSetting(\"bgColor\") || \"\");\r\n  }\r\n}\r\nexport default new AppSettingsService();\r\n","import React from 'react';\n\nclass BeanContextAware extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.context= {};\n  };\n\n  add = (bean) => {\n    if (!bean || !bean.state) {\n      throw new Error(\"Not allowed 'null' values for 'bean': \" + bean + \" !\");\n    }\n    let beanId = bean.state.beanId || bean.props.beanId;\n    if (!beanId) {\n      throw new Error(\"Not allowed 'null' value for 'beanId' \" + beanId  + \" !\" );\n    }\n    if (this.context[beanId]) {\n      console.warn(\"Bean with 'beanId': \" + beanId + \"is already registered under BeanContextAware!\");\n    }\n    this.context[beanId] = bean;\n  }\n\n  get = (beanId) => {\n    if (!beanId ) {\n      throw new Error(\"Not allowed 'null' value for 'beanId' \" + beanId + \" !\" );\n    }\n    return this.context[beanId];\n  }\n\n  remove = (bean) => {\n    if (!bean) {\n      throw new Error(\"Not allowed 'null' value for 'bean' \" + bean + \" !\" );\n    }\n    if ( typeof bean === 'string' ) {\n        delete this.context[bean];\n        return;\n    }\n    let beanId = bean.state.beanId || bean.props.beanId;\n    delete this.context[beanId];\n  }\n}\nexport default new BeanContextAware();\n","import { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\n\nconst reducer = combineReducers({\n  form: reduxFormReducer // mounted under \"form\"\n})\nconst store =\n  (window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore)(reducer)\n\nconst functionsQueue = [];\n\nlet addToFunctionsQ = (funct) => {\n  functionsQueue.push(funct);\n\n  while (functionsQueue.length > 0) {\n    let funcToCall = functionsQueue.shift()\n    funcToCall();\n  }\n}\n\nstore.getStore = () => {\n  // add dummy function as a placeholder\n  addToFunctionsQ(() => { });\n  return store;\n}\n\nstore.getMatchById = (id) => {\n  if (!id) {\n    throw new Error(\"'id' is not allowed to be: \" + id);\n  }\n  let matches = store.getStore()?.update?.data?.matches || [];\n  for (var i = 0; i < matches.length; i++) {\n    if (id === matches[i]._id) {\n      return matches[i];\n    }\n  }\n  return null;\n}\n\nstore.addToStore = (key, value) => {\n  if (!key || typeof (key) != 'string') {\n    throw new Error(\"Only objects of type 'string' are allowed!\");\n  }\n\n  addToFunctionsQ(\n    function () {\n      store[key] = value;\n    }\n  );\n}\n\nexport default store;\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\nimport BeanContextAware from './BeanContextAware';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport store from '../store';\n\nclass PollService extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n    this.last_activity_date = \"1984-08-01T00:00:00.000Z\";\n    this.exceptionCount = 0;\n  };\n\n  checkIfLogged = (headers, onSuccess, onFailure) => {\n    let promise = AjaxService.doGet(Const.URLS.PROFILE, headers)\n    promise.then((data) => {\n      store.addToStore('profile', data);\n      onSuccess()\n      this.getUpdates(this.getLastActivityDate());\n      this.startUpdatePoll(AppSettingsService.updatePollInterval);\n\n    }).catch((e) => {\n      console.error(e);\n      onFailure()\n    })\n  }\n\n  mergeUpdates = (store, updates) => {\n    let matches = updates.data.matches;\n\n    for (let i = 0; i < matches.length; i++) {\n      let matchUpdate = matches[i];\n      let oldMatch = store.getMatchById(matchUpdate._id);\n      //merge brand new matches:\n      if (!oldMatch) {\n        store.getStore().update.data.matches.push(matchUpdate);\n        this.addToUnreadMessagesBadge(matchUpdate);\n        break;\n      }\n\n      //merge new messages:\n      let newMsgs = matchUpdate.messages;\n      let newMsgsCount = newMsgs.length;\n      for (let y = oldMatch.messages.length - 1; 0 <= newMsgsCount || 0 <= y; y-- , newMsgsCount--) {\n        if (oldMatch.messages[y] && !oldMatch.messages[y]._id) {\n          oldMatch.messages.splice(y, 1);\n        }\n      }\n      oldMatch.messages = oldMatch.messages.concat(newMsgs);\n\n      /// merge seen:\n      let lastSeenMsg = matchUpdate.seen ? matchUpdate.seen.last_seen_msg_id : null;\n      if (lastSeenMsg) {\n        if (!oldMatch.seen) {\n          oldMatch.seen = {};\n        }\n        oldMatch.seen.last_seen_msg_id = lastSeenMsg;\n      }\n\n      /// merge last_activity_date:\n      let lastActivityDate = matchUpdate.last_activity_date ? matchUpdate.last_activity_date : null;\n      if (lastActivityDate) {\n        oldMatch.last_activity_date = lastActivityDate;\n      }\n    }\n  }\n\n  markLastUneadMessages = (store, updates) => {\n    let matches = updates?.data?.matches;\n\n    for (let i = 0; i < matches?.length; i++) {\n      let matchUpdate = matches[i];\n      let oldMatch = store.getMatchById(matchUpdate._id);\n\n      let newLastSeenMsgId = matchUpdate?.seen?.last_seen_msg_id;\n      let oldLastSeenMsgId = oldMatch?.seen?.last_seen_msg_id;\n      var localUser = store?.profile?.data;\n\n      newLastSeenMsgId = newLastSeenMsgId || oldLastSeenMsgId;\n      if (!newLastSeenMsgId || !localUser || !localUser._id) {\n        continue;\n      }\n      let newMsgs = matchUpdate.messages;\n\n      for (var ind = newMsgs.length - 1; 0 <= ind; ind--) {\n        let msg = newMsgs[ind];\n\n        if (!msg.from) {\n          continue;\n        }\n\n        if (localUser._id !== msg.from) {\n\n          if (msg._id !== newLastSeenMsgId) {\n            this.addToUnreadMessagesBadge(oldMatch);\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  addToUnreadMessagesBadge = (mtch) => {\n    let header = BeanContextAware.get('header1');\n    if (header) {\n      header.addMsgMatch(mtch)\n    }\n  }\n\n  getUpdates = (lastDate) => {\n    let header = BeanContextAware.get('header1');\n    let chat1 = BeanContextAware.get('chat1');\n    let data = {\n      \"last_activity_date\": lastDate\n    }\n\n    let promise = AjaxService.doPost(Const.URLS.UPDATES, data, {});\n    promise.then((data) => {\n      if (store.update) {\n        this.mergeUpdates(store, data);\n      } else {\n        store.addToStore('update', data);\n      }\n\n      this.markLastUneadMessages(store, data);\n\n      /// merge global (updates polling) last_activity_date:\n      this.last_activity_date = data.data.last_activity_date;\n\n      if (chat1) chat1.triggerRenderFunc();\n      if (header) header.changeButtonVisibility({ isVisible: true });\n\n      this.exceptionCount = 0;\n\n    }).catch((e) => {\n      console.error(e);\n\n      if (header) header.changeButtonVisibility({ isVisible: false })\n\n      if (this.isToStopUpdatePoll(e)) this.stopUpdatePoll();\n\n      this.exceptionCount++\n    })\n  }\n\n  isToStopUpdatePoll = (exception) => {\n    if (this.exceptionCount > 2) {\n      return true;\n    }\n    return false;\n  }\n\n  startUpdatePoll = (seconds) => {\n    if (!seconds) {\n      console.error(\"error null val for 'seconds'\");\n      return;\n    }\n    this.stopUpdatePoll();\n    this.pollInterval = seconds\n    this.pollIntervalObj = setInterval(\n      () => {\n        this.getUpdates(this.getLastActivityDate());\n      }, seconds\n    );\n  }\n\n  getLastActivityDate = () => {\n    return this.last_activity_date;\n  }\n\n  stopUpdatePoll = () => {\n    if (this.pollIntervalObj) {\n      clearTimeout(this.pollIntervalObj)\n    }\n  }\n}\nexport default new PollService();\n","import React from 'react';\r\nimport store from '../store';\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService';\r\nimport CashService from '../services/CashService';\r\n\r\nclass NotesService extends React.Component {\r\n\r\n  saveBookmark = function (personId) {\r\n    let bookmarks = CashService.getBookmarks();\r\n    if (bookmarks.indexOf(personId) !== -1) {\r\n      return;\r\n    }\r\n    bookmarks.push(personId);\r\n    CashService.persistBookmarks(bookmarks);\r\n  }\r\n\r\n  removeBookmark = function (personId) {\r\n    let bookmarks = CashService.getBookmarks();\r\n    for (let index = 0; index < bookmarks.length; index++) {\r\n      let oneFromArr = bookmarks[index];\r\n      if (!!personId && oneFromArr === personId) {\r\n        bookmarks.splice(index, 1);\r\n        CashService.persistBookmarks(bookmarks);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  saveAllByPhone = function (phone = CashService.getPhone()) {\r\n    CashService.persistAll(phone, CashService.cashStructureTemplate);\r\n  }\r\n\r\n  getOne = function (phone = CashService.getPhone()) {\r\n    let promise = AjaxService.doGet(Const.URLS.STORAGE + phone, {});\r\n\r\n    promise.then((data) => {\r\n      console.log(data);\r\n    }).catch((e) => {\r\n      console.error(e);\r\n    })\r\n  }\r\n\r\n  // delete = function (phone = CashService.getPhone()) {\r\n  //   let promise = AjaxService.doDelete(Const.URLS.STORAGE + phone, {});\r\n\r\n  //   promise.then((data) => {\r\n  //     console.log(data);\r\n  //   }).catch((e) => {\r\n  //     console.error(e);\r\n  //   })\r\n  // }\r\n\r\n}\r\nexport default new NotesService();","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div >\n        <h1>Welcome</h1>\n        <Link to=\"/phone\">  Login with phone</Link>\n      </div >\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport store from '../store'\nimport {Provider } from 'react-redux'\n\nconst eachComponent = ({ input, label, type, value, placeholder,  meta: { touched, error } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input className='form-control' {...input}  placeholder={placeholder}  type={type}/>\n      {touched && error && <span>{error}</span>}\n    </div>\n  </div>\n)\n\nclass RenderForm extends React.Component {\n\n  render() {\n    let {options} = this.props;\n    let handleSubmit = options.handleSubmit;\n    let fields = options.fields;\n    let RenderFieldWrapped = () => (\n      <div>  <form onSubmit={handleSubmit} >\n        {fields.map(op => (\n          <div key={op.name}>\n              <Field name={op.name} onChange={op.onChangeFun} component={eachComponent}\n                            type=\"input\" placeholder={op.placeholder} label={op.name}/>\n          </div>\n      ))\n    }\n  < input className=\"btn btn-primary\"  type = \"submit\"  value = \"Submit\" / >\n     </form>\n     </div>)\n\n\n    let RenderFieldWrappedInstance = reduxForm({\n      form: 'RenderFieldWrapped'\n    })(RenderFieldWrapped);\n\n    return (\n      <div>\n        <Provider store={store}>\n          <RenderFieldWrappedInstance options={options} />\n        </Provider>\n      </div>\n    )\n  }\n}\nexport default RenderForm\n","import React from 'react';\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport CashService from '../services/CashService';\nimport PollService from '../services/PollService';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport RenderForm from '../building-blocks/RenderForm';\nimport { withRouter } from 'react-router-dom';\n\nclass PhoneForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phone: ''\n    };\n  }\n\n  handleChange = event => {\n    this.state.phone = event.target.value;\n  };\n\n  phoneNumAuth = function (phone) {\n    let promise = AjaxService.doPost(Const.URLS.AUTH.PHONE, {\n      'phone': phone\n    }, {});\n\n    promise.then(() => {\n      CashService.setPhone(phone);\n      this.props.history.push('/confirm-token');\n    }).catch((e) => {\n      CashService.setPhone(null);\n      console.error(e);\n    })\n  }\n\n  ifNotLogged = (phone) => {\n    CashService.setToken(null);\n    this.phoneNumAuth(phone);\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n \n    let phone = this.state.phone;\n\n    let promise = CashService.loadAll(phone);\n    CashService.setPhone(phone);\n    promise.then((data) => {\n      console.log(data?.data?.result);\n\n      let settings = data?.data?.result?.settings;\n      if (settings) {\n        CashService.setSettings(settings);\n        AppSettingsService.applyDesignSettings();\n      }\n      let bookmarks = data?.data?.result?.bookmarks;\n      if (bookmarks) {\n        CashService.setBookmarks(bookmarks);\n      }\n      let authToken = data?.data?.result?.[Const.AUTH_HEADER_NAME]?.token;\n      this.processAuth(authToken, phone);\n    }).catch((e) => {\n      console.error(e);\n      this.processAuth(\"authToken\", phone);\n    })\n  }\n\n  processAuth = (authToken, phone) => {\n    if (authToken) {\n\n      let isToUseCurrent = window.confirm('A session with this phone numer: ' \n          + phone + ' already exists.\\nUse current session?');\n\n      if (isToUseCurrent) {\n        console.log(\"use current session:\");\n        CashService.setToken(authToken);\n        PollService.checkIfLogged({},\n          () => { this.props.history.push('/user') },\n          () => {this.ifNotLogged(phone)});\n      } else {\n        this.phoneNumAuth(phone);\n      }\n\n    } else {\n      CashService.persistAll(phone, CashService.cashStructureTemplate);\n      this.phoneNumAuth(phone);\n    }\n  }\n\n  render() {\n    const optns = {\n      handleSubmit: this.handleSubmit,\n      fields: [\n        { name: 'Phone number', placeholder: 'Please, fill in ur phone number', onChangeFun: this.handleChange }\n      ]\n    }\n\n    return (\n      <div>\n        <RenderForm options={optns} />\n      </div >\n    )\n  }\n}\nexport default withRouter(PhoneForm);\n","import React from 'react';\nimport Const from '../services/Constants';\nimport AjaxService from '../services/AjaxService';\nimport PollService from '../services/PollService';\nimport CashService from '../services/CashService';\nimport RenderForm from '../building-blocks/RenderForm';\nimport { withRouter } from 'react-router-dom';\n\nclass ConfirmCode extends React.Component {\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      confirmToken: ''\n    };\n  }\n\n  handleChange = event => {\n    this.state.confirmToken = event.target.value;\n    //this.setState({confirmToken: event.target.value});\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let phoneNumber = CashService.getPhone();\n    if (!phoneNumber) {\n      throw new Error(\"CashService[Const.PHONE_HEADER_NAME] is not allowed to be \" + phoneNumber);\n    }\n    let { history } = this.props;\n\n    let promise = AjaxService.doGet(Const.URLS.AUTH.GET_TOKEN + this.state.confirmToken + \"/\" + phoneNumber);\n\n    promise.then(function (value) {\n      console.log(value);\n      if (value && value.status === 200 && value.data) {\n        let token = value.data[Const.AUTH_HEADER_NAME];\n\n        let headers = {\n          [Const.AUTH_HEADER_NAME] : token\n        }\n\n        let onSuccess = function() {\n          CashService.setToken(token);\n          CashService.persistToken(token);\n          history.push('/user');\n        }\n\n        let onFailure = function() {\n          history.push('/phone');\n        }\n\n        PollService.checkIfLogged(headers, onSuccess, onFailure);\n      }\n    }).catch((e) => {\n      // delete cash[store.phoneNumber];\n      // delete store.phoneNumber;\n      // localStorage.setItem(cashVarName, JSON.stringify(cash));\n      console.log(e);\n    })\n\n  }\n\n  render() {\n    const optns = {\n      handleSubmit: this.handleSubmit,\n      fields: [\n        { name: 'Confirmation code', placeholder: 'Please, enter your confirmation code:', onChangeFun: this.handleChange }\n      ]\n    }\n    return (\n      <div >\n        <RenderForm options={optns} />\n      </div>\n    );\n  }\n}\nexport default withRouter(ConfirmCode)\n","import React from 'react';\n\nexport default class Checkbox extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      condition: props.condition\n    }\n\n    this.changeHandler = props.changeHandler;\n    this.defaultChecked = props.defaultChecked;\n    this.label = props.label;\n  }\n\n  doChangeState = (e) => {\n    this.changeHandler(e);\n    this.setState({\n      condition: e.target.checked\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"form-check\">\n        <input className=\"form-check-input\" type=\"checkbox\" checked={this.state.condition} onChange={this.doChangeState} /> \n        <label className=\"form-check-label\"> {this.label} </label>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nfunction Info(args) {\n  let { person } = args;\n  if (!person) {\n    return (\n      <div> </div>\n    )\n  }\n  let country = person.pos_info ? (person.pos_info.country ? person.pos_info.country.name : \"\") : \"\";\n  let age = person.birth_date ? person.birth_date.substring(0, 4) : \"\";\n  let city = person.pos_info ? (person.pos_info.city ? person.pos_info.city.name : \"\") : \"\";\n  person.jobs = person.jobs?.[0]?.title?.name || \"\";\n  person.schools = person.schools?.[0]?.name || \"\";\n  return (\n    <div className=\"text-justify text-wrap\">\n      {person.name ? (<div> <span className=\"font-weight-bold\">Name:  </span> {person.name} </div>) : null}\n      {person.birth_date ? (<div> <span className=\"font-weight-bold\">Date of Birth:  </span> {age} </div>) : null}\n      {person.distance_mi ? (<div> <span className=\"font-weight-bold\">Distance (miles):  </span> {person.distance_mi} </div>) : null}\n      {city ? (<div> <span className=\"font-weight-bold\">Location:  </span> {city}, {country}  </div>) : null}\n      {person.bio ? (<div> <span className=\"font-weight-bold\">Bio:  </span> {person.bio} </div>) : null}\n      {person.jobs ? (<div> <span className=\"font-weight-bold\">Job:  </span> {person.jobs} </div>) : null}\n      {person.schools ? (<div> <span className=\"font-weight-bold\">Schools:  </span> {person.schools} </div>) : null}\n    </div>\n  )\n}\n\nexport default Info;","import React from 'react';\nimport AppSettingsService from '../settings/AppSettingsService';\n\nclass PicWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    let { photos, name } = this.props;\n    this.personName = name;\n\n    this.isToShowPhotos = AppSettingsService.isToShowPhotos;\n    this.ind = 0;\n\n    let imgSrc = this.isToShowPhotos ? photos?.[this.ind]?.url : null;\n\n    this.state = {\n      photos: photos,\n      imgSrc: imgSrc\n    };\n  }\n\n   nextPic = () => {\n    if (!this.isToShowPhotos) {\n      return;\n    }\n    if (this.state.photos.length < 2) {\n      return;\n    }\n    if (this.ind < this.state.photos.length - 1) {\n      this.ind++;\n    } else {\n      this.ind = 0;\n    }\n    this.setState({\n      imgSrc: this.state.photos[this.ind].url\n    });\n  }\n\n  render() {\n    if (!this.state.imgSrc) {\n      return (\n        <div>\n        </div>\n      )\n    } else if (this.isToShowPhotos) {\n      return (\n        <div className=\"container-fluid px-0\">\n          <img onClick={this.nextPic} src={this.state.imgSrc} alt=\"some image\" className='img-fluid w-100' />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <label className=\"text-center\">{this.personName} </label>\n        </div>\n      );\n    }\n\n  }\n}\nexport default PicWrapper;\n","import React from 'react'\nimport AppSettingsService from '../settings/AppSettingsService';\n\nexport default class SelectDistanceFilter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      radius: props.initialRadius || 0\n    }\n    this.parentObject = props.parentObject;\n  }\n\n  changeHandler = (e) => {\n    this.parentObject.setState({ distanceFilter: e.target.value })\n  }\n\n  render() {\n    let cssClasses = AppSettingsService.getInputStyleClasses()\n    let optionTags = [];\n    for (let value = 1; value < 100; value++) {\n      optionTags.push(<option key={value} value={value}>{value}</option>)\n    }\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Distance filter (mi):</label>\n          <select\n            className={cssClasses}\n            value={this.state.radius}\n            onChange={this.changeHandler}>\n            {optionTags}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react'\nimport AppSettingsService from '../settings/AppSettingsService';\n\nexport default class SelectMinAgeFilter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ageFilterMin: props.ageFilterMin || 0\n    }\n    this.parentObject = props.parentObject;\n  }\n\n  changeHandler = (e) => {\n    this.parentObject.setState({ ageFilterMin: e.target.value })\n  }\n\n  render() {\n    let cssClasses = AppSettingsService.getInputStyleClasses()\n    let optionTags = [];\n    for (let value = 18; value < 100; value++) {\n      optionTags.push(<option key={value} value={value}>{value}</option>);\n    }\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Min age filter (mi):</label>\n          <select\n            className={cssClasses}\n            value={this.state.ageFilterMin}\n            onChange={this.changeHandler}>\n            {optionTags}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react'\nimport AppSettingsService from '../settings/AppSettingsService';\n\nexport default class SelectMaxAgeFilter extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      ageFilterMax: props.ageFilterMax || 0\n    }\n    this.parentObject = props.parentObject;\n  }\n\n  changeHandler = (e) => {\n    this.parentObject.setState({ ageFilterMax: e.target.value })\n  }\n\n  render() {\n    let cssClasses = AppSettingsService.getInputStyleClasses()\n    let optionTags = [];\n    for (let value = 18; value < 1000; value++) {\n      optionTags.push(<option key={value} value={value}>{value}</option>);\n    }\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Max age filter (mi):</label>\n          <select\n            className={cssClasses}\n            value={this.state.ageFilterMax}\n            onChange={this.changeHandler}>\n            {optionTags}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport LocationPicker from \"react-leaflet-location-picker\";\nimport { withRouter } from 'react-router-dom'\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport Checkbox from '../settings/Checkbox';\nimport Info from \"../building-blocks/Info\";\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport AjaxService from '../services/AjaxService';\nimport store from '../store';\nimport Const from '../services/Constants';\nimport SelectDistanceFilter from './SelectDistanceFilter';\nimport SelectMinAgeFilter from './SelectMinAgeFilter';\nimport SelectMaxAgeFilter from './SelectMaxAgeFilter';\n\nclass UserView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      profile: this.props?.data?.profile?.data,\n      hits: [],\n      isLoading: false,\n      error: null,\n      distanceFilter: null,\n      ageFilterMax: null,\n      ageFilterMin: null,\n      discoverable: false\n    };\n    this.isLoading = false\n  }\n\n  saveProfile = () => {\n    //{\"user\":{\"show_gender_on_profile\":false,\"gender\":0,\"bio\":\"ddd\"}}\n    let data = {\n      age_filter_max: this.state.ageFilterMax,\n      age_filter_min: this.state.ageFilterMin,\n      distance_filter: this.state.distanceFilter,\n      discoverable: this.state.discoverable\n    }\n    AjaxService.doPost(Const.URLS.PROFILE, data, {})\n  }\n\n  getProfile = () => {\n    this.isLoading = true\n    let promise = AjaxService.doGet(Const.URLS.PROFILE, {})\n    promise.then((data) => {\n      if (!data?.data) return;\n\n      store.addToStore('profile', data);\n      this.setState({\n        distanceFilter: data.data.distance_filter,\n        ageFilterMax: data.data.age_filter_max,\n        ageFilterMin: data.data.age_filter_min,\n        discoverable: data.data.discoverable,\n        profile: data.data\n      }, () => { this.isLoading = false })\n    }).catch((e) => {\n      console.error(e);\n      this.isLoading = false\n    })\n  }\n  componentWillMount() {\n    if (this.isLoading) {\n      return;\n    }\n    this.getProfile();\n  }\n\n  toggleShowProfile = (event) => {\n    this.setState({\n      discoverable: event?.target?.checked\n    })\n  }\n\n  render() {\n    var profile = this.state?.profile\n    if (!profile) {\n      return (\n        <div></div>\n      )\n    }\n\n    let pos = profile?.pos ? [profile?.pos?.lat, profile?.pos?.lon] : [0, 0];\n\n    let postLocation = (args) => {\n      let newMsgObj = {\n        lat: args[0],\n        lon: args[1]\n      }\n      AjaxService.doPost(Const.URLS.SEND_LOCATION, newMsgObj, {})\n    }\n\n    let UserData = () => {\n      return (\n        <div>\n          <Info person={profile} />\n          <br />\n          <SelectDistanceFilter initialRadius={this.state.distanceFilter} parentObject={this} />\n          <SelectMinAgeFilter ageFilterMin={this.state.ageFilterMin} parentObject={this} />\n          <SelectMaxAgeFilter ageFilterMax={this.state.ageFilterMax} parentObject={this} />\n          <Checkbox label=\"public profile\" condition={this.state.discoverable} changeHandler={this.toggleShowProfile} />\n          <br />\n          <button type=\"button\" className=\"btn btn-primary\" onClick={this.saveProfile}> Save </button>\n        </div>\n      )\n    }\n\n    let person = [{\n      image: (<PicWrapper photos={profile.photos} name={profile.name} />),\n      info: (<UserData />)\n    }]\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    let pointVals = [pos];\n    const pointMode = {\n      banner: false,\n      control: {\n        values: pointVals,\n        onClick: point => {\n          pointVals = [point]\n          pointMode.control.values = [point];\n          postLocation(point);\n        },\n        //  onRemove: point => { }\n      }\n    };\n\n    const options = {\n      bindMap: true,\n      startPort: \"default\",\n      overlayAll: true,\n      showControls: false,\n      showInputs: false,\n      useDynamic: true,\n      pointMode: pointMode,\n      precision: 6\n    };\n\n    return (\n      <div>\n        <ReactTable\n          data={person}\n          columns={present}\n          sortable={false}\n          defaultPageSize={1}\n          showPagination={false}\n        />\n        <br />\n        <LocationPicker {...options} />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(UserView);\n//Request URL: https://api.gotinder.com/v2/profile?locale=en-GB\n// Request Method: POST\n// Status Code: 200 \n\n// {user: {age_filter_min: 25, age_filter_max: 45}}\n// {user: {discoverable: false, distance_filter: 24}}\n","import React from 'react';\nimport Const from './Constants';\nimport AjaxService from './AjaxService';\n\nclass MatchDecoratorService extends React.Component {\n\n  getUserData = (match, callbackFunc) => {\n    console.log(match);\n    \n    let userId = match?.person?._id;\n    let person = match.person || {};\n    let promise = AjaxService.doGet(Const.URLS.USER + userId, {});\n    promise.then((data) => {\n\n      let user = data?.data?.results;\n      match.user = user;\n      \n      person.distance_mi = user?.distance_mi;\n      person.name = user?.name || person?.name\n      person.birth_date = user?.birth_date || person?.birth_date\n      person.bio = user?.bio || person?.bio\n      person.jobs = user?.jobs || person.jobs\n      person.schools = user?.schools || person.schools\n      let posInfo = {city:{name: user?.city?.name }, \n          country:{name: user?.city?.region }};\n      person.pos_info = person?.pos_info || posInfo;\n\n      callbackFunc(match);\n    }).catch((e) => {\n      console.error(e);\n      person.error = e\n      callbackFunc(match);\n    })\n  }\n\n}\nexport default new MatchDecoratorService();\n","import React from 'react';\n\nclass OnePicWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imgSrc: props.src\n    };\n    this.condition = props.condition;\n    this.changeHandler = props.changeHandler;\n    this.match = props.match;\n  }\n\n  componentWillUnmount() {\n  }\n  componentDidMount() {\n  }\n\n  doClick = (e) => {\n    this.changeHandler(e, this.match);\n  }\n\n  render() {\n    if (this.condition) {\n      return (\n        <div className=\"container-fluid px-0\">\n          <img onClick={this.doClick} src={this.state.imgSrc} alt=\"new\" className='img-fluid w-100' />\n        </div>\n      );\n    } else {\n      return (\n        <div onClick={this.doClick}>\n          <label className=\"text-center\">{this.match.person.name}</label>\n        </div>\n      );\n    }\n\n  }\n}\nexport default OnePicWrapper;\n","import React from 'react';\nimport store from '../store';\nimport AppSettingsService from '../settings/AppSettingsService';\nimport MatchDecoratorService from '../services/MatchDecoratorService';\nimport \"react-table/react-table.css\";\nimport OnePicWrapper from '../building-blocks/OnePicWrapper';\nimport ReactTable from \"react-table\";\nimport { withRouter } from 'react-router-dom';\n\nclass Friends extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showUser: false,\n      isVisible: false,\n      msgMatches: [],\n      sortingFunc: this.sortByLastActivityDate\n    };\n  }\n\n  sortByLastActivityDate = (a, b) => {\n    let timeA = new Date(a.last_activity_date).getTime();\n    let timeB = new Date(b.last_activity_date).getTime();\n    return timeB - timeA;\n  }\n\n  applySorting = (arrToBeSorted, sortingFunc) => {\n    try {\n      arrToBeSorted.sort(sortingFunc);\n    } catch (e) {\n      console.error(e);\n    }\n    return arrToBeSorted;\n  }\n\n  getUserData = (event, match) => {\n    let clBack = (match) => {\n      this.props.history.push({\n        pathname: '/friend',\n        state: { args: match }\n      })\n    }\n    MatchDecoratorService.getUserData(match, clBack);\n  }\n\n  render() {\n    let dt = store.getStore();\n\n    let friends = dt.update.data.matches;\n\n    this.applySorting(friends, this.state.sortingFunc);\n\n    let persons = friends.map(match => {\n      let prsn = match.person\n      let obj;\n      if (prsn) {\n        let picProps = {\n          condition: AppSettingsService.isToShowPhotos,\n          src: prsn.photos[0].url,\n          match: match,\n          changeHandler: this.getUserData\n        }\n      obj = {\n        firstName: prsn.name,\n        lastName: prsn.birth_date,\n        image: (<OnePicWrapper { ...picProps}/>)\n      }\n    }\n      return { ...obj };\n    });\n\n    const present = [\n      {\n        columns: [\n          {\n            Header: \"Image\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"First Name\",\n            accessor: \"firstName\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            sortable={false}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Friends);","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types'\r\n\r\nBtnLink.propTypes = {\r\n    label: PropTypes.string,\r\n    data: PropTypes.object,\r\n    pathname: PropTypes.string\r\n};\r\n\r\nfunction BtnLink(props) {\r\n    return (\r\n        <div>\r\n            <Link to={{ pathname: props.pathname, state: { data: props.data } }}>\r\n                <button type=\"button\" className=\"btn btn-primary\">\r\n                    {props.label}\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BtnLink\r\n","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport BtnLink from \"../building-blocks/BtnLink\";\nimport Info from \"../building-blocks/Info\";\nimport NotesService from '../notes/NotesService';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport CashService from '../services/CashService';\nimport AjaxService from '../services/AjaxService';\nimport Const from '../services/Constants';\n\nclass OneFriend extends React.Component {\n  constructor(props) {\n    super(props);\n    this.allBookmarks = null;\n  }\n\n  remove = (userId) => {\n    NotesService.removeBookmark(userId);\n  }\n\n  save = (userId) => {\n    NotesService.saveBookmark(userId);\n  }\n\n  deleteMatch = (matchId) => {\n    AjaxService.doDelete(Const.URLS.MATCH + matchId, {});\n  }\n\n  isBookmarked = (userId) => {\n    return this.allBookmarks[userId] !== undefined && this.allBookmarks[userId] !== null;\n  }\n\n  render() {\n    let { args } = this.props.location.state;\n    console.log(args);\n\n    this.allBookmarks = CashService.getBookmarksAsObject();\n    let InfoWithButton = () => (\n      <div>\n        <BtnLink label=\"Chat\" data={args} pathname=\"/chat\" />\n        <div className=\"mt-1\">\n          {!this.isBookmarked(args.person._id) ? <button type=\"button\" className=\"btn btn-success\"\n            onClick={() => this.save(args.person._id)}> <span>&#9734;</span> </button> : null}\n\n          {this.isBookmarked(args.person._id) ? <button type=\"button\" className=\"btn btn-danger\"\n            onClick={() => this.remove(args.person._id)}> <span>&#9734;</span></button> : null}\n\n          <button type=\"button\" className=\"btn btn-danger ml-2 float-right\" onClick={() => this.deleteMatch(args.id)}> Unlike </button>\n        </div>\n        <Info person={args.person} />\n      </div>\n    )\n    let person = [{\n      image: (<PicWrapper photos={args.person.photos} name={args.person.name} />),\n      info: (<InfoWithButton />)\n    }]\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div>\n          <ReactTable\n            data={person}\n            columns={present}\n            sortable={false}\n            defaultPageSize={1}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default OneFriend;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport AjaxService from '../services/AjaxService';\nimport NotesService from '../notes/NotesService';\nimport CashService from '../services/CashService';\nimport Const from '../services/Constants';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\nimport BtnLink from \"../building-blocks/BtnLink\";\nimport Info from \"../building-blocks/Info\";\n\nclass MoreFriends extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allFr: []\n    };\n\n    this.isMountedOk = true;\n    this.allBookmarks = null;\n  }\n\n  getBookmarksAsObject = () => {\n    this.allBookmarks = CashService.getBookmarksAsObject();\n  }\n\n  componentDidMount() {\n    this.getNewFriends(this.getBookmarksAsObject);\n    this.isMountedOk = true;\n  }\n\n  componentWillUnmount() {\n    this.isMountedOk = false;\n  }\n\n  getNewFriends = (callBack) => {\n    let promise = AjaxService.doGet(Const.URLS.NEW_FRIENDS, {})\n    promise.then((data) => {\n      let allFr = data?.data?.results;\n      if (!this.isMountedOk) {\n        return;\n      }\n      callBack()\n      this.setState({ allFr: allFr });\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  pass = (userId) => {\n    let promise = AjaxService.doGet(Const.URLS.PASS + userId, {})\n    promise.then((data) => {\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  like = (userId) => {\n    let promise = AjaxService.doGet(Const.URLS.LIKE + userId, {})\n    promise.then((data) => {\n      console.log(data);\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  isBookmarked = (userId) => {\n    return this.allBookmarks[userId] !== undefined && this.allBookmarks[userId] !== null;\n  }\n\n  render() {\n    let InfoWrapper = (args) => {\n      let { person } = args;\n\n      return (\n        <div className=\"text-justify text-wrap\">\n          <div>\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => this.like(person._id)}> Like </button>\n            <button type=\"button\" className=\"btn btn-danger ml-2\" onClick={() => this.pass(person._id)}> Pass </button>\n\n            {!this.isBookmarked(person?._id) ? <button type=\"button\" className=\"btn btn-primary float-right ml-2\"\n              onClick={() => NotesService.saveBookmark(person?._id)}> <span>&#9734;</span> </button> : null}\n            {this.isBookmarked(person?._id) ? <button type=\"button\" className=\"btn btn-danger float-right ml-2\"\n              onClick={() => NotesService.removeBookmark(person?._id)}> <span>&#9734;</span> </button> : null}\n          </div>\n          <Info person={person} />\n        </div>\n      )\n    }\n\n    let Pic = args => (<PicWrapper photos={args.photos} name={args.name} />)\n\n    let allFr = this.state.allFr;\n\n    let persons = allFr.map(one => {\n      let obj = {\n        info: (<InfoWrapper person={one} />),\n        image: (<Pic photos={one.photos} name={one.name} />)\n      }\n      return { ...obj };\n    });\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div className=\"text-justify text-center\">\n          <BtnLink label=\"Friend Requests\" data={null} pathname=\"/pal-requests\" />\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.getNewFriends(this.getBookmarksAsObject)}> Reload </button>\n        </div>\n\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            sortable={false}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            showPagination={false}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\nexport default MoreFriends;","import React from 'react';\nimport \"react-table/react-table.css\"\nimport ReactTable from \"react-table\";\nimport AjaxService from '../services/AjaxService'\nimport Const from '../services/Constants';\nimport PicWrapper from \"../building-blocks/PicWrapper\";\n\nclass FriendRequests extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allFr: [],\n      hits: [],\n      isLoading: false,\n      error: null,\n    };\n    this.isMountedOk = true;\n  }\n\n  componentDidMount() {\n    this.isMountedOk = true;\n    this.getFriendRequests();\n  }\n\n  componentWillUnmount() {\n    this.isMountedOk = false;\n  }\n\n  getFriendRequests = () => {\n    let promise = AjaxService.doGet(Const.URLS.FAST_MATCH, {})\n    promise.then((data) => {\n      if (!this.isMountedOk || !data?.data?.data?.results) {\n        return;\n      }\n\n      this.setState({\n        allFr: data.data.data.results\n      })\n    }).catch((e) => {\n      console.log(e);\n    })\n  }\n\n  render() {\n    let Info = args => <div className=\"text-justify text-wrap\"> {args.info} </div>;\n    let Pic = args => (<PicWrapper photos={args.photos} />);\n\n    let allFr = this.state.allFr;\n\n    let persons = allFr.map(one => {\n      let obj = {\n        info: (<Info info={one.user._id} />),\n        image: (<Pic photos={one.user.photos} />)\n      }\n      return { ...obj };\n    });\n\n    let present = [\n      {\n        columns: [\n          {\n            Header: \"Photos\",\n            accessor: \"image\"\n          },\n          {\n            Header: \"Info\",\n            accessor: \"info\"\n          }\n        ]\n      }\n    ]\n\n    return (\n      <div>\n        <div className=\"text-center p-1 \">\n        </div>\n        <div>\n          <ReactTable className=\"-striped -highlight\"\n            data={persons}\n            columns={present}\n            sortable={false}\n            defaultPageSize={persons.length}\n            pageSize={persons.length}\n            showPagination={false}\n            style={{\n              width: '100%',\n              height: '30%',\n            }}\n          />\n          <br />\n        </div>\n      </div>\n    )\n  }\n}\nexport default FriendRequests;","import React, { Component } from 'react'\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectPollInterval extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      interval: AppSettingsService.updatePollInterval\n    }\n  }\n\n  changeHandler = (e) => {\n    this.setState({\n      interval: e.target.value\n    })\n    AppSettingsService.updatePollInterval = e.target.value;\n    this.props.onSelectPollInterval(e.target.value);\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Poll interval for getting updates to be every:</label>\n          <select\n            className={this.props.styles}\n            value={this.state.interval}\n            onChange={this.changeHandler}>\n            <option value=\"10000\">10 sec</option>\n            <option value=\"20000\">20 sec</option>\n            <option value=\"40000\">40 sec</option>\n            <option value=\"50000\">50 sec</option>\n            <option value=\"60000\">1 min</option>\n            <option value=\"300000\">5 min</option>\n            <option value=\"600000\">10 min</option>\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectTextColor extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: AppSettingsService.getSetting(\"textColor\") || AppSettingsService.textColors[0]\n    }\n  }\n\n  changeHandler = (event) => {\n    let color = event.target.value;\n\n    AppSettingsService.applyClass(document.body, AppSettingsService.textColors, color);\n    AppSettingsService.persistSetting(\"textColor\", color);\n\n    this.setState({\n      selected: color\n    })\n    this.props.triggerRender();\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Select text color:</label>\n          <select\n            className={this.props.styles}\n            value={this.state.selected}\n            onChange={this.changeHandler}>\n            {AppSettingsService.textColors.map(\n              (color) => {\n                return (<option key={color.name} value={color.class}>{color.name}</option>);\n              }\n            )}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}","import React, { Component } from 'react';\nimport AppSettingsService from './AppSettingsService';\n\nexport default class SelectBackgroundColor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: AppSettingsService.getSetting(\"bgColor\") || AppSettingsService.bgColors[0]\n    }\n  }\n\n  changeHandler = (event) => {\n    let color = event.target.value;\n\n    AppSettingsService.applyClass(document.body, AppSettingsService.bgColors, color);\n    AppSettingsService.persistSetting(\"bgColor\", color);\n\n    this.setState({\n      selected: color\n    })\n    this.props.triggerRender();\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Select background color:</label>\n          <select className={this.props.styles}\n            value={this.state.selected}\n            onChange={this.changeHandler}>\n            {AppSettingsService.bgColors.map(\n              (color) => {\n                return (<option key={color.name} value={color.class}>{color.name}</option>);\n              }\n            )}\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\r\nimport PollService from '../services/PollService';\r\nimport SelectPollInterval from './SelectPollInterval';\r\nimport AppSettingsService from './AppSettingsService';\r\nimport SelectTextColor from './SelectTextColor';\r\nimport SelectBackgroundColor from './SelectBackgroundColor';\r\nimport Checkbox from './Checkbox';\r\n\r\nclass AppSettings extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      styles: AppSettingsService.getInputStyleClasses(),\r\n      isToShowPhotos: AppSettingsService.isToShowPhotos\r\n    };\r\n  }\r\n\r\n  onSelectPollInterval = (val) => {\r\n    PollService.startUpdatePoll(val);\r\n    this.setState({\r\n      pollInterval: val\r\n    })\r\n  }\r\n\r\n  triggerRender = () => {\r\n    this.setState({\r\n      styles: AppSettingsService.getInputStyleClasses()\r\n    })\r\n  }\r\n\r\n  toggleShowPicsCheckbox = (event) => { \r\n    AppSettingsService.isToShowPhotos = event.target.checked;\r\n    this.setState({\r\n      isToShowPhotos: AppSettingsService.isToShowPhotos\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SelectPollInterval styles={this.state.styles} onSelectPollInterval={this.onSelectPollInterval} />\r\n        <SelectBackgroundColor styles={this.state.styles} triggerRender={this.triggerRender} />\r\n        <SelectTextColor styles={this.state.styles} triggerRender={this.triggerRender} />\r\n        <Checkbox label=\"show photos\" condition={this.state.isToShowPhotos} changeHandler={this.toggleShowPicsCheckbox} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default AppSettings;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport BeanContextAware from '../services/BeanContextAware';\nimport CashService from '../services/CashService';\nimport Const from '../services/Constants'\nimport MatchDecoratorService from '../services/MatchDecoratorService';\nimport { withRouter } from 'react-router-dom';\n\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      beanId: props.beanId,\n      showUser: false,\n      isVisible: false,\n      msgMatches: []\n    };\n    this.initialTitle = document.title;\n  }\n\n  changeState = (obj) => {\n    this.setState(obj);\n  }\n\n  addMsgMatch = (mtch) => {\n    var pos = this.findInMsgMatches(mtch);\n    if (pos > -1) { // if found - do not add it again\n      return;\n    }\n    let msgMatches = this.state.msgMatches;\n    this.state.msgMatches.push(mtch);\n    this.setState({\n      msgMatches: msgMatches\n    })\n    this.toggleFlashTabTitle();\n  }\n\n  findInMsgMatches = (mtch) => {\n    let msgMatches = this.state.msgMatches\n    for (var i = 0, len = msgMatches.length; i < len; i++) {\n      if (msgMatches[i].id === mtch.id)\n        return i;\n    }\n    return -1;\n  }\n\n  removeMsgMatch = (mtch) => {\n    var pos = this.findInMsgMatches(mtch);\n    if (pos > -1) {\n      let msgMatches = this.state.msgMatches\n      msgMatches.splice(pos, 1);\n      this.setState(\n        { msgMatches: msgMatches },\n        () => this.toggleFlashTabTitle()\n      )\n    }\n  }\n\n  changeButtonVisibility = (obj) => {\n    this.setState(obj);\n  }\n\n  componentDidMount() {\n    BeanContextAware.add(this);\n  }\n\n  componentWillUnmount() {\n    BeanContextAware.remove(this);\n  }\n\n  toggleFlashTabTitle = () => {\n    if (this.state.msgMatches.length > 0 && !this.flashIntervalObj) {\n      this.startFlashTabTitle();\n    } else if (this.state.msgMatches.length === 0) {\n      this.stopFlashTabTitle();\n    }\n  }\n\n  startFlashTabTitle = () => {\n    this.flashIntervalObj = setInterval(\n      () => {\n        if (this.initialTitle === document.title) {\n          document.title = \"(\" + this.state.msgMatches.length + \") \" + this.initialTitle;\n        } else {\n          document.title = this.initialTitle;\n        }\n      }, 1000\n    );\n  }\n\n  stopFlashTabTitle = () => {\n    clearTimeout(this.flashIntervalObj);\n    this.flashIntervalObj = null;\n    document.title = this.initialTitle;\n  }\n\n  getUserData = (match) => {\n    let clBack = (match) => {\n      this.props.history.push({\n        pathname: '/friend',\n        state: { args: match }\n      })\n    }\n    MatchDecoratorService.getUserData(match, clBack);\n  }\n\n  goChat = (match) => {\n    this.props.history.push({\n      pathname: '/chat',\n      state: { data: match }\n    })\n  }\n\n  render() {\n    let Btn = (props) => (\n      <div>\n        <NavLink exact activeClassName=\"active\" to={props.to}>\n          <button type=\"button\" className=\"btn btn-primary\">\n            {props.label}\n          </button>\n        </NavLink>\n      </div>\n    )\n    let isVisibleNewMsgs = this.state.msgMatches.length ? true : false;\n\n    let BtnBadge = (props) => {\n      let mtch = props.data;\n      if (!mtch.messages || mtch.messages.length === 0) {\n        return (\n          <div>\n            <button onClick={() => { this.removeMsgMatch(mtch); this.getUserData(mtch) }} className=\"btn btn-primary\" >\n              New: {this.state.msgMatches.length} </button>\n          </div>\n        )\n      } else {\n        return (\n          <div>\n            <button onClick={() => this.goChat(mtch)} className=\"btn btn-primary\" >\n              New: {this.state.msgMatches.length} </button>\n          </div>\n        )\n      }\n    }\n    this.state.isVisible = true;\n    return (\n      <nav>\n        <div className=\"text-center\">\n          {this.state.isVisible ? <span className=\"float-left\"> {CashService.getPhone()} </span> : null}\n          <div className=\"btn-group\">\n            {this.state.isVisible ? <Btn to=\"/home\" label=\"Home\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/user\" label=\"User\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/pals\" label=\"Pals\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/more-pals\" label=\"Get Pals\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/notes\" label=\"Notes\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/settings\" label=\"Settings\" /> : null}\n            {this.state.isVisible ? <Btn to=\"/logout\" label=\"|->\" /> : null}\n            {(this.state.isVisible && isVisibleNewMsgs) ? <BtnBadge data={this.state.msgMatches[0]} /> : null}\n          </div>\n          {this.state.isVisible ? <span className=\"float-right\"> ver: {Const.VERSION}</span> : null}\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(Header);","import React from 'react';\r\nimport store from '../store'\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService';\r\nimport AppSettingsService from '../settings/AppSettingsService';\r\n\r\nclass EnterText extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: '',\r\n            store: props.data,\r\n            friendId: props.friendId,\r\n            triggerRenderFunc: props.triggerRenderFunc\r\n        }\r\n        this.getStyles = AppSettingsService.getInputStyleClasses;\r\n        const dummyEmojiInjector = (msg) => { return msg;}\r\n        this.injectEmoji = props.emojiInjectorFunc || dummyEmojiInjector;\r\n    }\r\n\r\n    createMessage = (match, store) => {\r\n        var dt = new Date();\r\n        return {\r\n            created_date: dt.toISOString(),\r\n            from: store.profile.data._id,\r\n            match_id: match.id,\r\n            message: this.state.value,\r\n            sent_date: dt.toISOString(),\r\n            timestamp: dt.getTime(),\r\n            to: match.person._id\r\n        }\r\n    }\r\n\r\n    onKeyPress = (e) => {\r\n        if (e.key !== 'Enter') {\r\n            return;\r\n        }\r\n\r\n        let matches = store?.update?.data?.matches || [];\r\n        for (let i = 0; i < matches.length; i++) {\r\n            const oneMatch = matches[i];\r\n\r\n            if (oneMatch.person._id === this.state.friendId) {\r\n                let newMsgObj = this.createMessage(oneMatch, this.state.store);\r\n                this.injectEmoji(newMsgObj);\r\n                AjaxService.doPost(Const.URLS.SEND_MESSAGE, newMsgObj, {});\r\n                matches[i].messages.push(newMsgObj);\r\n                this.state.triggerRenderFunc();\r\n                break;\r\n            }\r\n        }\r\n        this.setState({ value: '' });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        var elem = e.srcElement || e.target;\r\n        this.setState({ value: elem.value })\r\n    }\r\n\r\n    render() {\r\n        let inputProps = {\r\n            placeholder: 'Write...',\r\n            value: this.state.value,\r\n            onChange: this.onChange,\r\n            className: this.getStyles(),\r\n            onKeyPress: this.onKeyPress\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <input {...inputProps} type=\"text\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default EnterText;\r\n","import React from 'react';\r\n\r\nclass MessageWrapper extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      let { msg } = this.props;\r\n      let msgDateObj = new Date(msg.timestamp);\r\n\r\n      let timeStr = msgDateObj.toLocaleTimeString();\r\n      let dateStr = msgDateObj.toLocaleDateString()\r\n      if (dateStr !== new Date().toLocaleDateString()) {\r\n        timeStr = timeStr + \",  \" + dateStr;\r\n      }\r\n\r\n      this.state = {\r\n          isSeen: msg.isSeen,\r\n          showDate: false,\r\n          date: timeStr\r\n      };\r\n    }\r\n\r\n    render() {\r\n        let { msg } = this.props;\r\n\r\n        let showHideDate = () => {\r\n            this.setState({ showDate: true });\r\n            setTimeout(\r\n                () => {\r\n                    this.setState({ showDate: false });\r\n                }, 5000);\r\n        }\r\n\r\n        return (\r\n            <div onClick={showHideDate}>\r\n                <p className=\"text-justify text-wrap\" >  {msg.message} </p>\r\n                {this.state.isSeen ? (<span className=\"badge badge-secondary text-justify text-wrap\">seen</span>) : null}\r\n                {this.state.showDate ? (<span className=\"badge small\" >  {this.state.date} </span>) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MessageWrapper;\r\n","import React, { Component } from 'react'\nimport BeanContextAware from '../services/BeanContextAware'\n\nexport default class Select extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      numberMsgShown: 10,\n      getStyles: props.getStyles\n    }\n  }\n\n  changeHandler = (e) => {\n    let chat1 = BeanContextAware.get('chat1');\n      this.setState({\n        numberMsgShown: e.target.value\n      })\n      if (chat1) {\n        chat1.changeState({ numberMsgShown: parseInt(e.target.value)});\n      }\n  }\n\n  render() {\n    return (\n      <form>\n        <div className='form-group'>\n          <label>Number of messages to show:</label>\n          <select\n            className={this.state.getStyles()}\n            value={this.state.numberMsgShown}\n            onChange={this.changeHandler}>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n            <option value=\"50\">50</option>\n            <option value=\"70\">70</option>\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n","\r\nconst emojis = [\r\n    {text:':)', face:'😃'},\r\n    {text:';)', face:'😉'},\r\n    {text:':(', face:'😞'},\r\n    {text:':*', face:'😘'},\r\n    {text:':P', face:'😛'},{text:':p', face:'😛'},{text:':П', face:'😛'},{text:':п', face:'😛'},\r\n    {text:':D', face:'😀'},{text:':Д', face:'😀'},{text:':д', face:'😀'}\r\n];\r\n\r\nexport const injectEmojiFunction = (msg) => {\r\n    if (!msg?.message) {\r\n        return msg;\r\n    }\r\n \r\n    for (let i = 0; i < emojis.length; i++) {\r\n        let emo = emojis[i];\r\n        let foundAt = msg.message.indexOf(emo.text);\r\n        while (foundAt > -1) {\r\n            msg.message = msg.message.replace(emo.text, emo.face);\r\n            foundAt = msg.message.indexOf(emo.text);\r\n        }\r\n    }\r\n    return msg;\r\n}\r\n","import React from 'react';\r\nimport ReactTable from \"react-table\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport store from '../store'\r\nimport EnterText from './enterText'\r\nimport MessageWrapper from './messageWrapper'\r\nimport BeanContextAware from '../services/BeanContextAware'\r\nimport Select from './Select'\r\nimport Const from '../services/Constants';\r\nimport AjaxService from '../services/AjaxService'\r\nimport AppSettingsService from '../settings/AppSettingsService';\r\nimport { injectEmojiFunction } from './CyrilicEmojiStrategy';\r\n\r\nclass Chat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    let match = props.location.state.data;\r\n    let friendId = match.person._id;\r\n    let lastSeenMsg = match.seen ? match.seen.last_seen_msg_id : null;\r\n    this.state = {\r\n      lastSeenMsg: lastSeenMsg,\r\n      numberMsgShown: 10,\r\n      matchId: match.id,\r\n      store: store,\r\n      match: match,\r\n      friendId: friendId,\r\n      messages: match.messages\r\n    };\r\n    this.inputStyles = AppSettingsService.getInputStyleClasses;\r\n    this.isOnFocus = true;\r\n    this.isMountedOk = true;\r\n  }\r\n\r\n  onFocus = (ev) => {\r\n    this.isOnFocus = true;\r\n    this.deleteFromHeader();\r\n  }\r\n\r\n  onBlur = (ev) => {\r\n    this.isOnFocus = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    BeanContextAware.add(this);\r\n    window.addEventListener(\"focus\", this.onFocus);\r\n    window.addEventListener(\"blur\", this.onBlur);\r\n    this.isMountedOk = true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    BeanContextAware.remove(this);\r\n    window.removeEventListener(\"focus\", this.onFocus);\r\n    window.removeEventListener(\"blur\", this.onBlur);\r\n    this.isMountedOk = false;\r\n  }\r\n\r\n  prepareMessages = (allMsgs, friendId, numberMsgShown) => {\r\n    let result = [];\r\n    result.length = numberMsgShown;\r\n\r\n    for (let ind = allMsgs.length - 1; 0 <= numberMsgShown; numberMsgShown-- , ind--) {\r\n\r\n      let msg = allMsgs[ind];\r\n\r\n      if (!msg) {\r\n        msg = {};\r\n      }\r\n\r\n      let transformedMsg = {};\r\n      result[numberMsgShown] = transformedMsg;\r\n\r\n      if (msg.from === friendId) {\r\n        transformedMsg.theirs = (<MessageWrapper msg={msg} />);\r\n      }\r\n      else {\r\n        transformedMsg.mine = (<MessageWrapper msg={msg} />);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  //call it to start render() in order to visualize the change\r\n  triggerRenderFunc = () => {\r\n    let match = store.getMatchById(this.state.match._id)\r\n    let lastSeenMsg = match.seen ? match.seen.last_seen_msg_id : null;\r\n    if (this.isMountedOk) {\r\n      this.setState({\r\n        lastSeenMsg: lastSeenMsg,\r\n        match: match,\r\n        messages: match.messages\r\n      })\r\n    }\r\n  }\r\n\r\n  changeState = (obj) => {\r\n    this.setState(obj)\r\n  }\r\n\r\n  sendSeen = (allMsgs) => {\r\n    if (!this.state.lastSeenMsg) {\r\n      console.log(\"empty value of 'lastSeenMsg'..\");\r\n    }\r\n\r\n    //clear notification for new friends, who have not send message:\r\n    if (!allMsgs || !allMsgs?.length) {\r\n      this.deleteFromHeader();\r\n      return;\r\n    }\r\n\r\n    for (let index = allMsgs.length - 1; 0 <= index; index--) {\r\n\r\n      let msgWrapped = allMsgs[index];\r\n\r\n      if (!msgWrapped || !msgWrapped.theirs) {\r\n        continue;\r\n      }\r\n      let msg = msgWrapped.theirs.props.msg;\r\n\r\n      if (msg._id !== this.state.lastSeenMsg) {\r\n        AjaxService.doGet(Const.URLS.SEND_SEEN + msg.match_id + \"/\" + msg._id, {});\r\n        let match = this.state.match;\r\n        if (match.seen) {\r\n          match.seen.last_seen_msg_id = msg._id;\r\n        }\r\n\r\n        this.deleteFromHeader();\r\n        return;\r\n      }\r\n      if (msgWrapped.theirs) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteFromHeader = () => {\r\n    let header = BeanContextAware.get('header1');\r\n    if (header && this.isOnFocus) {\r\n      header.removeMsgMatch(this.state.match);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: this.state.match.person.name,\r\n            accessor: \"theirs\"\r\n          },\r\n          {\r\n            Header: \"Me\",\r\n            accessor: \"mine\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n    var reorderedMessages = this.prepareMessages(this.state.messages, this.state.friendId, this.state.numberMsgShown);\r\n\r\n    this.sendSeen(reorderedMessages);\r\n\r\n    let inputProps = {\r\n      data: this.state.store,\r\n      friendId: this.state.match.person._id,\r\n      triggerRenderFunc: this.triggerRenderFunc,\r\n      emojiInjectorFunc: injectEmojiFunction\r\n    }\r\n\r\n    if (this.isMountedOk) {\r\n      return (\r\n        <div><Select getStyles={this.inputStyles} />\r\n          <div>\r\n            <ReactTable\r\n              data={reorderedMessages}\r\n              columns={present}\r\n              defaultPageSize={reorderedMessages.length}\r\n              pageSize={reorderedMessages.length}\r\n              showPagination={false}\r\n              bordered={false}\r\n              sortable={false}\r\n  \r\n            />\r\n            <div>\r\n              <EnterText {...inputProps} />\r\n            </div>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      )\r\n    } \r\n    return (\r\n      <div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\nexport default withRouter(Chat);\r\n","import React from 'react';\r\nimport \"react-table/react-table.css\"\r\nimport ReactTable from \"react-table\";\r\nimport Info from \"../building-blocks/Info\";\r\nimport PicWrapper from \"../building-blocks/PicWrapper\";\r\nimport NotesService from './NotesService';\r\nimport CashService from '../services/CashService';\r\nimport AjaxService from '../services/AjaxService';\r\nimport Const from '../services/Constants';\r\nimport MatchDecoratorService from '../services/MatchDecoratorService';\r\n\r\nclass Notes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      match: null\r\n    };\r\n    this.index = 0;\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.allBookmarks = CashService.getBookmarksAsObject();\r\n    let all = CashService.getBookmarks();\r\n\r\n    let id = all[this.index]\r\n    if (!id) {\r\n      return;\r\n    }\r\n    let mtch = this.formDummyMatch(id);\r\n\r\n    MatchDecoratorService.getUserData(mtch, this.processUserData);\r\n  }\r\n\r\n  saveAllByPhone = function () {\r\n    NotesService.saveAllByPhone();\r\n  }\r\n\r\n  getOne = function () {\r\n    NotesService.getOne();\r\n  }\r\n\r\n  getBookmarks = function () {\r\n    NotesService.getBookmarks();\r\n  }\r\n\r\n  removeBookmark = function (userId) {\r\n    NotesService.removeBookmark(userId);\r\n    this.index--;\r\n  }\r\n\r\n  formDummyMatch(id) {\r\n    return {\r\n      person: { _id: id }\r\n    }\r\n  }\r\n\r\n  pass = (userId) => {\r\n    let promise = AjaxService.doGet(Const.URLS.PASS + userId, {})\r\n    promise.then((data) => {\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  like = (userId) => {\r\n    let promise = AjaxService.doGet(Const.URLS.LIKE + userId, {})\r\n    promise.then((data) => {\r\n      console.log(data);\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    })\r\n  }\r\n\r\n  processUserData = (match) => {\r\n    if (!!match?.person?.error) {\r\n      try {\r\n        console.log('User id: ' + match?.person?._id + \" will be removed from Bookmarks list\");\r\n        NotesService.removeBookmark(match?.person?._id);\r\n        this.match = null;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    this.match = match;\r\n    this.setState({\r\n      match: match\r\n    })\r\n  }\r\n\r\n  get = (step) => {\r\n    let all = CashService.getBookmarks();\r\n\r\n    this.index = this.index + step;\r\n\r\n    if (this.index < 0) {\r\n      this.index = all.length - 1;\r\n    } else if (this.index > all.length - 1) {\r\n      this.index = 0;\r\n    }\r\n    \r\n    let id = all[this.index];\r\n\r\n    if (!id) {\r\n      console.error(\"'id' is \" + id);\r\n      return;\r\n    }\r\n    let mtch = this.formDummyMatch(id);\r\n    MatchDecoratorService.getUserData(mtch, this.processUserData);\r\n  }\r\n\r\n  isBookmarked = (userId) => {\r\n    return this.allBookmarks[userId] !== undefined && this.allBookmarks[userId] !== null;\r\n  }\r\n\r\n  render() {\r\n    if (!this.match) {\r\n      return (\r\n        <div>\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.get(-1)}> prev </button>\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.get(1)}> next </button>\r\n        </div>\r\n      )\r\n    }\r\n    let match = this.match;\r\n\r\n    let InfoWithButton = () => {\r\n      let userId = match?.person?._id;\r\n      return (\r\n\r\n        <div>\r\n          <div className=\"text-justify text-wrap\">\r\n            <button type=\"button\" className=\"btn btn-success\" onClick={() => this.like(userId)}> Like </button>\r\n            <button type=\"button\" className=\"btn btn-danger ml-2\" onClick={() => this.pass(userId)}> Pass </button>\r\n\r\n            {!this.isBookmarked(userId) ? <button type=\"button\" className=\"btn btn-primary float-right ml-2\"\r\n              onClick={() => NotesService.saveBookmark(userId)}> <span>&#9734;</span> </button> : null}\r\n\r\n            {this.isBookmarked(userId) ? <button type=\"button\" className=\"btn btn-danger float-right ml-2\"\r\n              onClick={() => NotesService.removeBookmark(userId)}> <span>&#9734;</span> </button> : null}\r\n\r\n          </div>\r\n          <Info person={match?.person} />\r\n        </div>\r\n      )\r\n    }\r\n    let Pic = args => (<PicWrapper photos={args.photos} name={args.name} />);\r\n    let person = [{\r\n      image: (<Pic photos={match?.user?.photos} name={match?.user?.name} />),\r\n      info: (<InfoWithButton />)\r\n    }]\r\n\r\n    let present = [\r\n      {\r\n        columns: [\r\n          {\r\n            Header: \"Photos\",\r\n            accessor: \"image\"\r\n          },\r\n          {\r\n            Header: \"Info\",\r\n            accessor: \"info\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"text-justify text-wrap text-center float-center\">\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.get(-1)}> prev </button>\r\n          <button type=\"button\" disabled={true} className=\"btn btn-secondary\"> {this.index + 1} of {CashService.getBookmarks()?.length} </button>\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.get(1)}> next </button>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <ReactTable\r\n            data={person}\r\n            columns={present}\r\n            sortable={false}\r\n            defaultPageSize={1}\r\n            showPagination={false}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Notes;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport CashService from './services/CashService';\nimport AppSettingsService from './settings/AppSettingsService';\nimport PollService from './services/PollService';\nimport NotesService from './notes/NotesService';\nimport Home from './Home';\nimport PhoneForm from './auth/PhoneForm';\nimport ConfirmCode from './auth/confirmCode';\nimport UserView from './userView/userView';\nimport Friends from './userView/friends';\nimport OneFriend from './userView/OneFriend';\nimport MoreFriends from './userView/MoreFriends';\nimport FriendRequests from './userView/FriendRequests';\nimport AppSettings from './settings/AppSettings';\nimport Header from './building-blocks/header';\nimport Chat from './chat/chat.js';\nimport Notes from './notes/Notes';\nimport store from './store';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nconst App = () => {\n  return (\n    <div className=\"container\" style={{ paddingTop: 10 }}>\n\n      <Router>\n        <Header beanId=\"header1\" />\n        <Switch>\n          < Route exact path=\"/\" component={Home} />\n          < Route path=\"/user\" render={() => <UserView data={store} />} />\n          < Route path=\"/phone\" component={PhoneForm} />\n          < Route path=\"/friend\" component={OneFriend} />\n          < Route path=\"/chat\" render={() => <Chat beanId=\"chat1\"/>} />\n          < Route path=\"/notes\" render={() => <Notes beanId=\"notes1\"/>} />\n          < Route path=\"/pals\" render={() => <Friends data={store.updates} />} />\n          < Route path=\"/more-pals\" render={() => <MoreFriends data={store.updates} />} />\n          < Route path=\"/pal-requests\" render={() => <FriendRequests data={store.updates} />} />\n          < Route path=\"/settings\"render={() => <AppSettings beanId=\"appSettings1\"/>} />\n          < Route path=\"/confirm-token\" component={ConfirmCode} />\n          < Route path=\"*\" component={Home} />\n        </Switch>\n      </Router>\n    </div >\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nReactDOM.render( <App/> , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}